0
00:00:05,380 --> 00:00:08,810
Hello and welcome to the open source security podcast with myself,

1
00:00:08,819 --> 00:00:12,159
Kurt Siefried and my partner in thinking about food, Josh Pressers.

2
00:00:12,170 --> 00:00:15,760
I'm thinking about this like unholy coffee. You're drinking.

3
00:00:15,880 --> 00:00:18,870
Kurt put a picture on Mastodon

4
00:00:19,129 --> 00:00:19,639
that OK.

5
00:00:19,649 --> 00:00:23,879
I'm just going to, I'm going to pull up the picture quick because I don't even,

6
00:00:23,889 --> 00:00:25,450
I don't even know what to say to this.

7
00:00:25,459 --> 00:00:25,760
Like

8
00:00:25,979 --> 00:00:29,040
I drink a lot of coffee, literally gallons of this stuff.

9
00:00:29,049 --> 00:00:33,099
But Curtis's picture he puts up, it says brew in the bag power coffee,

10
00:00:33,110 --> 00:00:36,330
the ultimate caffeine kick and then it says be your own

11
00:00:36,340 --> 00:00:39,869
barista and apparently you dump hot water into this bag.

12
00:00:39,880 --> 00:00:41,840
-- Yeah,
-- it's got a built in filter and then you pour it out.

13
00:00:41,939 --> 00:00:43,639
It's uh it was an advent calendar.

14
00:00:43,860 --> 00:00:45,639
It was one different coffee per day

15
00:00:46,095 --> 00:00:49,705
and they're all these little weird bags. You pour hot water in.

16
00:00:49,794 --> 00:00:52,525
They're all like little Emory pouches, basically. Very nice gusset.

17
00:00:52,534 --> 00:00:57,705
-- Very, very nice gusset. They stand very
-- well and you dump hot water in and then,

18
00:00:57,825 --> 00:00:58,625
and then they zip,

19
00:00:58,634 --> 00:01:02,534
they seal across the top like a Ziploc and they have a built in filter

20
00:01:02,544 --> 00:01:05,294
and you just snap off the little pour spout and pour it into your cup

21
00:01:05,809 --> 00:01:08,860
and then kind of give it a squish to get all the coffee out. They're quite delightful.

22
00:01:08,870 --> 00:01:09,779
And is this like,

23
00:01:10,069 --> 00:01:12,330
drinkable coffee you're getting out of this thing?

24
00:01:12,339 --> 00:01:13,940
Some of this stuff has been really good.

25
00:01:13,949 --> 00:01:16,860
There's been a couple because it's 24 different coffees and I,

26
00:01:16,949 --> 00:01:18,860
it was an Advent Calendar gift and like, I,

27
00:01:18,870 --> 00:01:21,120
I'm slow because I like to drink my regular coffee.

28
00:01:21,290 --> 00:01:23,680
But no, some of these coffees have been spectacular.

29
00:01:23,690 --> 00:01:26,019
And one thing that drives me nuts is they didn't like,

30
00:01:26,540 --> 00:01:27,699
there's no way to buy more of it.

31
00:01:27,709 --> 00:01:31,160
Like there's no QR code on it to like go buy a kilogram of it or something.

32
00:01:31,311 --> 00:01:33,811
A kilogram of landfill waste.

33
00:01:34,482 --> 00:01:34,541
You mean

34
00:01:34,662 --> 00:01:36,662
-- the beans inside of the bag? I
-- got you.

35
00:01:36,671 --> 00:01:39,541
This system is specifically meant for things like advent calendars

36
00:01:39,552 --> 00:01:41,652
or like camping or you know what I mean?

37
00:01:41,662 --> 00:01:44,622
Like, it's like a, it's kind of a disposable and the whole thing is from Denmark.

38
00:01:44,732 --> 00:01:47,132
So it is totally compostable and blah, blah, blah.

39
00:01:47,552 --> 00:01:50,211
So let's ignore the carbon footprint of shipping it to North America.

40
00:01:50,832 --> 00:01:52,192
You know, it, it's actually pretty lightweight.

41
00:01:52,202 --> 00:01:54,061
I mean, it's just coffee grounds, dried out coffee.

42
00:01:54,071 --> 00:01:56,491
It's not heavy but no, it's a really cool system.

43
00:01:56,903 --> 00:02:01,003
Do you ever just wanted to have like, buy one cup's worth of beans to try new coffee?

44
00:02:01,013 --> 00:02:01,613
No,

45
00:02:01,793 --> 00:02:04,774
-- I just buy a lot of coffee and then I drink it
-- all well, because, like,

46
00:02:04,783 --> 00:02:06,804
I try new things sometimes and sometimes, like,

47
00:02:06,954 --> 00:02:09,383
it's like Costco. Right. Like I go to Costco and I see something.

48
00:02:09,393 --> 00:02:12,764
I'm like, oh, that could be tasty. And then I buy it and I'm like, oh, it's not tasty.

49
00:02:12,774 --> 00:02:13,483
-- Oh,
-- dear.

50
00:02:13,654 --> 00:02:15,934
And now I have 30 pounds

51
00:02:16,723 --> 00:02:18,074
thing. I don't like.

52
00:02:18,093 --> 00:02:22,404
Yeah, like, right now I have over 50 protein bars, that taste of sadness. And just,

53
00:02:22,865 --> 00:02:27,156
that's when you just throw them away. This is the sunk cost fallacy at work.

54
00:02:27,166 --> 00:02:30,916
I know, but I spent money on this and I don't, I don't like throwing food away.

55
00:02:30,925 --> 00:02:31,716
-- Like I, you
-- know,

56
00:02:31,886 --> 00:02:34,035
I agree. No one likes throwing food away.

57
00:02:34,046 --> 00:02:36,365
But the sunk cost fallacy says sometimes you

58
00:02:36,376 --> 00:02:38,796
have to throw away the terrible protein bars.

59
00:02:39,046 --> 00:02:41,255
Sometimes I buy coffee. That's terrible.

60
00:02:41,266 --> 00:02:43,746
-- And I just don't drink it all because that's the way
-- it

61
00:02:43,755 --> 00:02:44,076
is.

62
00:02:44,085 --> 00:02:44,445
Well, see,

63
00:02:44,455 --> 00:02:47,936
and that's why I would like to be able to buy one cup's worth like a scratch and sniff.

64
00:02:48,470 --> 00:02:52,399
Like the no, like France is doing a scratch and sniff stamp for the baguette,

65
00:02:52,410 --> 00:02:56,369
scratch and lick coffee stickers that you can lick the can

66
00:02:56,380 --> 00:02:58,440
in the grocery store to know if it's any good.

67
00:02:59,089 --> 00:03:01,460
-- No, that would be terrible.
-- Speaking of freshness.

68
00:03:01,470 --> 00:03:04,960
So like there's a lot of vegetables like peas and corn, especially.

69
00:03:04,970 --> 00:03:06,399
So things that are high in sugar

70
00:03:06,699 --> 00:03:10,660
that actually benefit from being frozen

71
00:03:10,809 --> 00:03:13,720
because like if you can get it absolutely fresh and, like,

72
00:03:13,729 --> 00:03:15,434
eat it that day or the next day.

73
00:03:15,654 --> 00:03:16,524
Cool. Great.

74
00:03:16,535 --> 00:03:19,554
Except, like, I live in Edmonton and, you know, it's not California for program.

75
00:03:20,244 --> 00:03:21,535
Yeah. And so,

76
00:03:22,044 --> 00:03:24,595
like, I actually eat a lot of frozen vegetables,

77
00:03:24,604 --> 00:03:27,024
especially corn and peas because the frozen corn

78
00:03:27,035 --> 00:03:29,664
kernels are better than the fresh ones.

79
00:03:29,675 --> 00:03:33,404
-- Oh, man,
-- there's some corn farmers that are gonna, they're gonna,

80
00:03:33,414 --> 00:03:34,675
they punch you right now.

81
00:03:34,684 --> 00:03:37,154
-- Why would they care
-- if you eat it fresh or freeze it?

82
00:03:37,604 --> 00:03:39,824
Because fresh corn is very,

83
00:03:39,929 --> 00:03:42,229
-- very good. Yeah, I,
-- it is better. Yes.

84
00:03:42,240 --> 00:03:45,149
And I've had fresh corn but I can't get fresh corn in January.

85
00:03:45,160 --> 00:03:48,270
-- It is true
-- because I live in Canada where it's minus 40.

86
00:03:48,619 --> 00:03:51,070
-- Uh,
-- right. You can't get anyway. Ok.

87
00:03:51,259 --> 00:03:54,050
What is the, where are you taking this frozen

88
00:03:54,220 --> 00:03:55,339
kernels?

89
00:03:55,500 --> 00:04:00,429
Oh, kernel, I get it. Ha ha ha ha. That's clever. Good Lord. Oh my God, Kurt.

90
00:04:00,440 --> 00:04:05,669
I am the worst person to make jokes to. It is rare. I grasp them.

91
00:04:05,764 --> 00:04:08,544
-- Um,
-- I like teed it up twice for you.

92
00:04:08,554 --> 00:04:12,065
It doesn't matter. I, I'm never going to catch on.

93
00:04:12,074 --> 00:04:16,785
-- I'm not good at this. Ok.
-- Next time I'll make a sign and hold it up like applause now.

94
00:04:16,795 --> 00:04:19,415
Or like this is the joke and like an explanation

95
00:04:19,915 --> 00:04:20,983
that would be fine.

96
00:04:21,195 --> 00:04:22,945
I still wouldn't have gotten it. You could have,

97
00:04:23,144 --> 00:04:27,464
if you would have explained it to me before we hit record. It's possible I would have.

98
00:04:27,475 --> 00:04:29,065
But then it wouldn't be spontaneous.

99
00:04:29,165 --> 00:04:29,904
It never, it,

100
00:04:30,035 --> 00:04:31,144
yeah. Anyway,

101
00:04:32,420 --> 00:04:35,119
ok, we're gonna talk about frozen kernels, ha ha.

102
00:04:35,880 --> 00:04:39,450
Because there was a blog post slash white paper put

103
00:04:39,459 --> 00:04:42,130
out by um Jeremy Allison's name is on it.

104
00:04:42,179 --> 00:04:45,899
Who did what? A lot of work with Samba? And the colonel and

105
00:04:48,140 --> 00:04:48,429
he

106
00:04:48,720 --> 00:04:49,220
invent

107
00:04:49,359 --> 00:04:49,570
Samba.

108
00:04:49,700 --> 00:04:51,040
-- I don't know.
-- He is Mr

109
00:04:51,100 --> 00:04:53,850
Samba is he? I know he was very involved.

110
00:04:53,859 --> 00:04:55,769
I don't know the exact history of it. Anyway,

111
00:04:55,950 --> 00:04:57,359
the guy is legit, right?

112
00:04:57,497 --> 00:04:58,078
And

113
00:04:58,247 --> 00:05:02,778
he for a company called CIQ, which apparently makes Rocky Linux,

114
00:05:03,268 --> 00:05:07,048
-- which is a red hat clone, right? Yeah,
-- back when they like there were real

115
00:05:07,167 --> 00:05:09,458
clones, it's all complicated now.

116
00:05:09,768 --> 00:05:13,197
-- But anyway, so Jeremy's like the real deal.
-- He's got his own Wikipedia page.

117
00:05:13,208 --> 00:05:16,358
-- Like
-- I, I'm not surprised he's like the real deal man.

118
00:05:17,148 --> 00:05:21,197
Like anyway, I love how it's known for Samba. Like, yes, he, yes,

119
00:05:21,828 --> 00:05:25,615
it's kind of like that the guy that did curl or that, that Linux guy that did Linux,

120
00:05:25,756 --> 00:05:29,205
that guy that did curl. Some guy made Linux it's fine.

121
00:05:29,216 --> 00:05:30,425
But so anyway,

122
00:05:30,436 --> 00:05:34,145
the CIQ people put up this paper and they basically did

123
00:05:34,156 --> 00:05:39,216
this like pretty impressive analysis talking about the like frozen distro

124
00:05:39,226 --> 00:05:42,385
model of kernels where you take a version of the Linux

125
00:05:42,395 --> 00:05:46,175
kernel and you just maintain it for some period of time,

126
00:05:46,186 --> 00:05:47,696
usually years

127
00:05:47,876 --> 00:05:50,213
at versus the mainline Linux kernel,

128
00:05:50,223 --> 00:05:53,354
which is obviously constantly fixing bugs and security issues

129
00:05:53,364 --> 00:05:55,153
and all kinds of stuff and adding features,

130
00:05:55,164 --> 00:05:55,373
right?

131
00:05:55,384 --> 00:05:57,164
-- All that. Well,
-- and it's funny to me because,

132
00:05:57,493 --> 00:05:59,753
and let's just set the stage. What does a frozen kernel mean?

133
00:05:59,764 --> 00:06:01,134
Because I think actually there's a lot of

134
00:06:01,144 --> 00:06:02,484
different vendors with a lot of different things.

135
00:06:02,493 --> 00:06:03,694
Like there are some vendors

136
00:06:03,864 --> 00:06:06,914
that have very like we will literally just put in like

137
00:06:07,104 --> 00:06:08,473
critical fixes,

138
00:06:08,584 --> 00:06:10,553
that's it. And then there's ones like Red hat where

139
00:06:10,683 --> 00:06:13,881
all sorts of security fixes and hardware support and

140
00:06:14,661 --> 00:06:18,611
fixes and feature improvements and well new features.

141
00:06:19,231 --> 00:06:21,171
And so I think we can't say like

142
00:06:21,421 --> 00:06:22,122
we can't

143
00:06:22,261 --> 00:06:25,582
say frozen version of software back parts without it

144
00:06:25,592 --> 00:06:29,002
being like a bell curve of 7000 different things.

145
00:06:29,201 --> 00:06:29,321
Yeah,

146
00:06:29,332 --> 00:06:32,752
but we can just generalize it and we're going to focus a lot

147
00:06:32,761 --> 00:06:35,411
on what Red Hat did just because we have all that experience.

148
00:06:35,432 --> 00:06:35,682
And

149
00:06:35,842 --> 00:06:38,421
before I go on a tangent, the one thing I'm going to say though is

150
00:06:38,970 --> 00:06:39,820
no, no, I

151
00:06:40,059 --> 00:06:40,149
for

152
00:06:40,420 --> 00:06:40,579
example,

153
00:06:41,500 --> 00:06:41,529
but

154
00:06:41,989 --> 00:06:44,880
let's say you make a smart light bulb that only

155
00:06:44,890 --> 00:06:47,839
connects to the mothership and doesn't accept any incoming connections.

156
00:06:47,989 --> 00:06:49,079
Would you feel safe with them?

157
00:06:49,089 --> 00:06:49,420
Saying, hey,

158
00:06:49,429 --> 00:06:51,970
we picked a version of Linux and we only fix criticals that can

159
00:06:51,980 --> 00:06:54,894
be remotely exploited and the way the product is set up been used,

160
00:06:55,035 --> 00:06:58,225
the other stuff like there's no local users, there's no software to attack on it.

161
00:06:58,234 --> 00:07:00,184
It's just kind of a client device that's reaching

162
00:07:00,195 --> 00:07:01,765
out and that would probably be pretty safe.

163
00:07:01,774 --> 00:07:02,385
And OK

164
00:07:02,635 --> 00:07:03,364
versus

165
00:07:03,515 --> 00:07:05,605
red hat is a good example of, well,

166
00:07:05,614 --> 00:07:08,584
this is kind of a general purpose server that like people have shell accounts on.

167
00:07:08,915 --> 00:07:09,744
So like, OK,

168
00:07:10,049 --> 00:07:12,959
the kernel needs to be a bit more up to date, even if it's quote unquote frozen.

169
00:07:12,970 --> 00:07:18,529
-- Let,
-- let's explain. OK, so we'll, we'll ignore all of the ramblings just now. But

170
00:07:18,690 --> 00:07:21,940
so the way a lot of Linux distributions used to work,

171
00:07:21,950 --> 00:07:24,709
they don't all do it this way because we had Greg Kh on a while

172
00:07:24,720 --> 00:07:26,640
back and he mentioned that like Android

173
00:07:26,649 --> 00:07:30,309
and Debian are following like Linux upstream,

174
00:07:30,320 --> 00:07:30,690
right?

175
00:07:30,700 --> 00:07:34,369
So they're just taking the Linux kernel and they're putting it in the thing now.

176
00:07:34,690 --> 00:07:38,739
A lot of distributions and like red hat still does this to my knowledge,

177
00:07:39,279 --> 00:07:40,750
Tu does this, I'm pretty sure. So

178
00:07:40,959 --> 00:07:42,890
does this like all the big distributions,

179
00:07:43,070 --> 00:07:45,049
they have kernel teams. So what they do

180
00:07:45,179 --> 00:07:49,010
-- is they
-- take, actually, I think Sousa started doing more of a mainline one.

181
00:07:49,019 --> 00:07:49,750
It's possible.

182
00:07:49,760 --> 00:07:52,029
I, I honestly haven't paid attention in years,

183
00:07:52,040 --> 00:07:54,989
but they take a version of the Linux kernel

184
00:07:55,200 --> 00:07:57,630
and they say we're going to take this version and we're

185
00:07:57,640 --> 00:07:59,929
going to polish it up as best as we can.

186
00:07:59,940 --> 00:08:02,899
We're going to apply the bug fixes, we think it needs,

187
00:08:02,959 --> 00:08:04,950
we're going to test the crap out of it

188
00:08:05,119 --> 00:08:07,549
and we're going to say this is the kernel we're using.

189
00:08:07,809 --> 00:08:10,070
And then what happens is their internal security

190
00:08:10,079 --> 00:08:14,000
team will cherry pick bug fixes cherry pick security

191
00:08:14,010 --> 00:08:16,920
fixes cherry pick features from the mainline kernel

192
00:08:16,929 --> 00:08:19,709
and add it to their frozen kernel version.

193
00:08:19,929 --> 00:08:21,390
With the intention being

194
00:08:21,540 --> 00:08:24,339
there will be additional stability

195
00:08:24,450 --> 00:08:29,079
in that version that you might not have with a fast moving upstream project.

196
00:08:29,230 --> 00:08:32,349
-- I think that in theory makes sense.
-- You know what,

197
00:08:32,530 --> 00:08:34,070
20 years ago,

198
00:08:34,818 --> 00:08:35,179
it

199
00:08:35,419 --> 00:08:36,967
made a lot more sense.

200
00:08:36,979 --> 00:08:40,328
When I think 20 years ago, there were two big factors which is number one,

201
00:08:40,597 --> 00:08:43,558
the delta, the change rate of stuff like the Linux

202
00:08:43,859 --> 00:08:46,008
was a lot slower. It was,

203
00:08:46,299 --> 00:08:50,598
-- and it was a lot more unstable compared to now.
-- I don't know if that's true.

204
00:08:50,609 --> 00:08:52,879
-- I think that's the intent.
-- Let me.

205
00:08:53,179 --> 00:08:55,718
Ok, perfect example. I remember running

206
00:08:56,078 --> 00:08:59,109
Linux 0.99 patch level to infinity and beyond.

207
00:08:59,318 --> 00:08:59,768
Ok.

208
00:08:59,958 --> 00:09:03,679
And the three Com Ether Express pro 10 driver.

209
00:09:03,809 --> 00:09:04,549
Well, what was it called?

210
00:09:04,559 --> 00:09:08,390
It was the 10 megabit uh BNC network card that three com made. That was lovely.

211
00:09:09,239 --> 00:09:11,909
And I remember going from like crashes hourly

212
00:09:12,260 --> 00:09:13,369
to crashes daily

213
00:09:13,760 --> 00:09:18,030
to crashes weekly. No, but seriously, right? Like, as they improved the driver

214
00:09:18,190 --> 00:09:20,190
and they like fixed a few bugs, fixed a few bugs.

215
00:09:20,200 --> 00:09:23,469
It went from like crash, crash to like once in a while to like once in a while to like,

216
00:09:23,479 --> 00:09:25,289
hey, my sister's been up and running for like

217
00:09:25,489 --> 00:09:26,429
it hasn't crashed.

218
00:09:26,570 --> 00:09:31,150
Obviously, this even predates real Linux distributions because this is like 9899.

219
00:09:31,270 --> 00:09:32,770
But that was the

220
00:09:33,250 --> 00:09:35,989
environment that this idea came from was that

221
00:09:36,140 --> 00:09:38,390
the Linux kernel was nowhere near.

222
00:09:38,400 --> 00:09:39,390
Like, sadly,

223
00:09:39,400 --> 00:09:41,130
the LINX curl was actually a lot more stable than a

224
00:09:41,140 --> 00:09:43,859
lot of other software I used like other UNIX is,

225
00:09:43,929 --> 00:09:45,070
that's how bad things were

226
00:09:45,289 --> 00:09:47,340
they like this free thing from? Some dude was

227
00:09:47,489 --> 00:09:50,820
-- more stable and
-- look the in the red hat universe,

228
00:09:50,830 --> 00:09:53,390
there would be two ways that would be addressed.

229
00:09:53,719 --> 00:09:57,890
They would either just say this driver is unstable and we will not support it.

230
00:09:57,900 --> 00:10:00,090
Like if you use it, you're completely on your own.

231
00:10:00,130 --> 00:10:03,049
I don't think that's gonna work for a three Coms main card.

232
00:10:03,349 --> 00:10:04,049
Well, no, no.

233
00:10:04,059 --> 00:10:07,419
What they would do though then is if there was a piece

234
00:10:07,429 --> 00:10:10,229
of hardware that was known to be unstable they would work with.

235
00:10:10,239 --> 00:10:13,780
I mean, this is Red Hat did so much freaking work. They deserve so much credit.

236
00:10:14,000 --> 00:10:16,119
They would have gone to someone like three com

237
00:10:16,330 --> 00:10:21,750
and they would have said let's fix this, right? We will work with you to fix this card.

238
00:10:21,760 --> 00:10:24,440
-- So it works correctly.
-- In this case of memory serves.

239
00:10:24,450 --> 00:10:25,549
It was, what was the guy that did the

240
00:10:25,770 --> 00:10:27,260
Beowulf cluster software from NASA?

241
00:10:27,440 --> 00:10:27,750
Anyway,

242
00:10:27,760 --> 00:10:32,330
-- he's the three calm driver guy and he got it all working is that
-- Donald Becker?

243
00:10:32,489 --> 00:10:34,619
-- He did all the cards,
-- right? I think that's the one. Yeah,

244
00:10:35,219 --> 00:10:36,669
he did a ton of network cards.

245
00:10:36,679 --> 00:10:40,049
I mean, he's the reason I could use the, the network card. I had way back in the day.

246
00:10:40,059 --> 00:10:41,950
I remember going to his like FTP site,

247
00:10:41,960 --> 00:10:44,840
literally FTP and you had to download the drivers and build them.

248
00:10:44,849 --> 00:10:45,760
It was wild.

249
00:10:46,200 --> 00:10:47,349
But that's the thing. So

250
00:10:47,630 --> 00:10:50,260
the thing to remember is the system we have today

251
00:10:50,270 --> 00:10:53,559
-- didn't just spontaneously emerge and pop out
-- for sure.

252
00:10:53,570 --> 00:10:55,479
It came from a context,

253
00:10:55,719 --> 00:10:59,030
but that context was different and it has well since changed.

254
00:10:59,059 --> 00:11:04,869
Like the Linux kernel unpacked won't fit on my first five computers.

255
00:11:05,979 --> 00:11:09,659
No. Really? Right. Like the current Linux kernel unpacked is so big.

256
00:11:09,669 --> 00:11:11,179
It's over a gigabyte of source code.

257
00:11:11,349 --> 00:11:15,039
I believe that. I wonder how big the binary is anymore.

258
00:11:15,049 --> 00:11:16,500
Actually, I'm on a Linux machine.

259
00:11:16,510 --> 00:11:19,659
-- Let me
-- look if you, well, and that's a loaded question because like,

260
00:11:19,669 --> 00:11:22,260
are you compiling a static monolith with every driver or

261
00:11:22,270 --> 00:11:24,164
like a totally stripped down thing with driver or,

262
00:11:24,174 --> 00:11:24,724
you know, whatever?

263
00:11:24,734 --> 00:11:26,195
Right. Well, no, just the,

264
00:11:26,434 --> 00:11:28,494
just the kernel on my system.

265
00:11:28,505 --> 00:11:33,655
-- And this is obviously there's loads of modules in a directory
-- where do I even find it?

266
00:11:33,664 --> 00:11:40,054
Now? It's in slash boot. The VMR is, I'm on Fedora. This is 6.8 0.8 dash 300.

267
00:11:40,244 --> 00:11:41,765
Oh, my slash boot is empty.

268
00:11:42,789 --> 00:11:45,960
-- Oh, it's a container, right? That's why
-- because you're not on a real computer.

269
00:11:45,969 --> 00:11:47,979
But uh this is 15 megabytes.

270
00:11:48,210 --> 00:11:50,159
And remember when the kernel had to fit on a floppy?

271
00:11:50,190 --> 00:11:54,940
I remember when my system had like that much storage.

272
00:11:55,400 --> 00:11:55,690
Yeah.

273
00:11:55,750 --> 00:11:59,530
So anyway, it's, it's, it's pretty big and plus there's loads of modules, I imagine

274
00:11:59,650 --> 00:12:03,710
-- kernel is using gigabytes of memory at this point. Anyway.
-- Anyway, hang on a minute.

275
00:12:03,719 --> 00:12:08,109
This thing says it's seven. Why is there a 75 megabyte file in here? What's in it?

276
00:12:08,190 --> 00:12:08,880
-- RD
-- again?

277
00:12:08,989 --> 00:12:12,989
-- In it? RD is the initial,
-- didn't in it red. Used to be tiny.

278
00:12:13,000 --> 00:12:16,710
-- It, it used to be, it doesn't have to be.
-- It's 75 megabytes. Now.

279
00:12:17,169 --> 00:12:18,650
Uh What is my,

280
00:12:19,059 --> 00:12:23,030
my in it, RA mfs is 60 megs on the system

281
00:12:23,159 --> 00:12:27,030
-- again. That's bigger than the hard drives through.
-- But that's the world we live in.

282
00:12:27,799 --> 00:12:28,109
It's

283
00:12:28,330 --> 00:12:30,309
like, I'm literally holding up to the camera.

284
00:12:30,419 --> 00:12:32,700
I bought another two Terabyte SSD because I

285
00:12:32,710 --> 00:12:34,309
got to reinstall windows on this machine.

286
00:12:34,320 --> 00:12:37,630
So I'm gonna swap in a fresh drive and get it all cleaned up and installed. And

287
00:12:38,239 --> 00:12:40,520
this was Tuna box like magic.

288
00:12:40,820 --> 00:12:43,780
Yeah. Right. Anyway. Ok. Ok. Early days, early days. Right.

289
00:12:43,789 --> 00:12:47,219
-- Well,
-- but people forget all this stuff is early days and we're,

290
00:12:47,270 --> 00:12:48,640
but it's been 20 years now.

291
00:12:48,830 --> 00:12:49,299
-- Well,
-- it's

292
00:12:49,309 --> 00:12:51,669
-- not early days anymore. Well, that's
-- what I'm saying.

293
00:12:51,679 --> 00:12:52,700
We have like the Linux.

294
00:12:52,840 --> 00:12:57,239
Linux has gone from being a horse and buggy to a spaceship in 20 years, for sure.

295
00:12:57,409 --> 00:12:57,900
Right.

296
00:12:58,030 --> 00:13:02,419
But we still behave and all the red hat business processes wrapped

297
00:13:02,429 --> 00:13:04,479
around having a horse and buggy where the horse poops a lot.

298
00:13:04,489 --> 00:13:06,202
I mean, a lot of them are. I,

299
00:13:06,331 --> 00:13:10,481
I think though, we, we, I want to back us up though first and, and I want to,

300
00:13:10,492 --> 00:13:13,841
can I just point out something real simple and kind of sad redhead

301
00:13:13,851 --> 00:13:16,012
enterprise Linux version 9.0 is distributed with

302
00:13:16,021 --> 00:13:18,421
the Linux kernel version 5.14 0.0.

303
00:13:18,432 --> 00:13:19,481
Now, without looking,

304
00:13:19,581 --> 00:13:22,142
without looking, tell me about 5.14 0.0.

305
00:13:22,452 --> 00:13:25,802
I mean, I can't tell you anything about. I know this computer is running 68.

306
00:13:25,812 --> 00:13:27,111
-- It's not
-- a long term kernel.

307
00:13:27,122 --> 00:13:33,031
-- Are there, there are no more long term kernels
-- are there 515, 61666860, sorry.

308
00:13:33,132 --> 00:13:33,822
The long term

309
00:13:34,124 --> 00:13:38,484
kernels are 606 61 515 510 54 and 419.

310
00:13:38,494 --> 00:13:41,343
-- But
-- it doesn't matter because Red Hat has their own developers.

311
00:13:41,354 --> 00:13:44,864
-- They don't need to rely on the upstream long term kernel.
-- Exactly.

312
00:13:44,874 --> 00:13:48,073
-- And that's so they're taking on a lot of extra work.
-- Well, of course, they are.

313
00:13:48,083 --> 00:13:51,263
I mean, that was why you paid them right? Is they were going to do this effort.

314
00:13:51,273 --> 00:13:54,734
This is part of the problem is Red Hat is taking on all this extra work.

315
00:13:54,744 --> 00:13:59,004
And here's the question that we're ultimately trying to get to is, is it any help?

316
00:13:59,013 --> 00:14:01,843
-- Is it worth it? It
-- might not be anymore. It was though.

317
00:14:02,065 --> 00:14:03,705
And I can't stress this enough. Like

318
00:14:03,806 --> 00:14:09,885
we're talking about like 2001, 2002. Right way. Way back in the day

319
00:14:10,056 --> 00:14:13,366
when people were afraid of open source. Right. Linux

320
00:14:13,466 --> 00:14:15,156
was scary. It was a cancer.

321
00:14:15,426 --> 00:14:18,106
It was, I mean, it was literally called the Cancer by Steve Ballmer.

322
00:14:18,116 --> 00:14:20,585
And people were afraid of it and they heard about how

323
00:14:20,596 --> 00:14:22,906
fast it is and how unstable it is and it's gonna,

324
00:14:22,916 --> 00:14:23,375
you know,

325
00:14:23,466 --> 00:14:26,875
eat your business and you'll have to declare bankruptcy if you run this

326
00:14:26,885 --> 00:14:30,908
stuff and along comes Red Hat and they made all of these promises.

327
00:14:31,018 --> 00:14:34,538
I mean, heck, there was the, the, the skull lawsuit right there was, if I run Linux,

328
00:14:34,567 --> 00:14:35,828
I'm gonna get sued by skull

329
00:14:36,237 --> 00:14:36,728
and,

330
00:14:36,918 --> 00:14:40,547
-- and it was wild and
-- that thing dragged on for like a decade.

331
00:14:40,918 --> 00:14:41,747
Oh. Right. Right.

332
00:14:41,757 --> 00:14:45,978
And Red Hat shows up and basically says we're going, you know, come sit by our fire,

333
00:14:46,107 --> 00:14:48,807
we're gonna keep you warm and feed you.

334
00:14:49,158 --> 00:14:51,268
We'll do, we'll do what needs to be done.

335
00:14:51,598 --> 00:14:54,268
And it also can't be understated.

336
00:14:54,377 --> 00:14:57,867
The chaos of drivers back in the day where

337
00:14:58,299 --> 00:15:02,080
I remember it was like we were at Red Hat. And so obviously

338
00:15:02,419 --> 00:15:05,039
we thought what Red Hat was doing was correct is

339
00:15:05,049 --> 00:15:07,190
it's easy to do when you drink the Kool Aid.

340
00:15:07,200 --> 00:15:09,669
But there were kind of two universes where there was,

341
00:15:09,679 --> 00:15:14,429
there were people taking binary blobs and they were, you know, NVIDIA and,

342
00:15:14,440 --> 00:15:17,989
and all those awful network cards and like wind modems and

343
00:15:18,299 --> 00:15:21,450
there was all this hardware that the only way to get it to work

344
00:15:21,460 --> 00:15:25,809
would be to go to a vendor website and download a blob of garbage

345
00:15:26,312 --> 00:15:31,171
and the blob of garbage was doing, who knows what on your system? Right.

346
00:15:31,182 --> 00:15:35,632
And Red Hat and Fedora had a very strict, like, we will not do this attitude.

347
00:15:35,642 --> 00:15:38,591
This is why I bought three com network cards. They were expensive

348
00:15:38,721 --> 00:15:39,211
but

349
00:15:39,421 --> 00:15:40,752
they had an open source driver.

350
00:15:40,901 --> 00:15:41,002
Yeah.

351
00:15:41,161 --> 00:15:43,791
Right. Right. Exactly. There was tons of hardware I bought

352
00:15:44,111 --> 00:15:45,502
just because it worked on Linux.

353
00:15:45,961 --> 00:15:46,711
And I mean,

354
00:15:46,721 --> 00:15:50,452
now the idea of buying hardware that doesn't work on Linux is laughable because,

355
00:15:50,461 --> 00:15:52,622
like, everyone wants their stuff to work for the moment,

356
00:15:52,632 --> 00:15:53,731
but this was not how it worked.

357
00:15:53,833 --> 00:15:54,213
Right.

358
00:15:54,223 --> 00:15:58,664
And so Red Hat was giving these companies this peace of mind of knowing, like,

359
00:15:58,674 --> 00:16:02,033
if I buy Red Hat stuff and I buy my server from Dell,

360
00:16:02,044 --> 00:16:05,523
everything is going to work and I'm not going to have to worry about, you know, like,

361
00:16:05,533 --> 00:16:07,473
someone breaking into my house and stealing all my

362
00:16:07,484 --> 00:16:08,693
dog food in the middle of the night.

363
00:16:08,703 --> 00:16:09,973
Like, it's going to be fine

364
00:16:10,184 --> 00:16:14,374
hands up who here has spent time looking at a hardware qualification list.

365
00:16:14,383 --> 00:16:19,653
So, like Dell, for example, listing this set of servers with these set of add-ons,

366
00:16:19,664 --> 00:16:21,383
work with RNT

367
00:16:21,494 --> 00:16:21,674
four,

368
00:16:21,895 --> 00:16:23,125
whatever that for sure.

369
00:16:23,176 --> 00:16:27,476
I used to spend a lot of time and everybody did because you could not,

370
00:16:27,486 --> 00:16:31,185
like I once bought a T A 55 CD, a CD ROM.

371
00:16:31,195 --> 00:16:34,416
Drive from the IBM store at the mall here locally.

372
00:16:34,426 --> 00:16:38,685
Yes, folks, there was an actual IBM branded store like IBM logo.

373
00:16:38,695 --> 00:16:43,796
They sold IBM Gear and I got verbal assurances that it would work with OS 22.1 warp.

374
00:16:43,815 --> 00:16:47,195
-- And I assume it didn't because you're telling us this story.
-- No, absolutely not.

375
00:16:47,296 --> 00:16:49,125
And you gotta remember like we didn't, we,

376
00:16:49,135 --> 00:16:50,898
we technically had the internet and the web but there

377
00:16:50,908 --> 00:16:53,357
wasn't the rich content or search engines to know.

378
00:16:53,578 --> 00:16:57,687
Oh, yeah, it was super hard. Like I couldn't search TX 55 CD. Like

379
00:16:58,057 --> 00:17:00,978
I literally bought laptops and hardware

380
00:17:01,187 --> 00:17:01,617
that

381
00:17:01,867 --> 00:17:04,218
either were on the hardware compatibility list

382
00:17:04,436 --> 00:17:07,656
or hardware qualification list for like rel or for something or

383
00:17:07,777 --> 00:17:08,758
literally like,

384
00:17:08,767 --> 00:17:11,468
oh the Open BS D developers are buying this

385
00:17:11,478 --> 00:17:14,838
brand and specific model of vio super slims.

386
00:17:15,057 --> 00:17:17,578
So I know it 100% works with Open BS D

387
00:17:18,098 --> 00:17:20,040
Erico. There's a very good chance it'll work with Linux.

388
00:17:20,329 --> 00:17:23,640
I remember going to best buy multiple times in a day

389
00:17:23,650 --> 00:17:25,589
because I'd buy a thing and it wouldn't work with Linux.

390
00:17:25,598 --> 00:17:27,030
I'd bring it back and get a different one

391
00:17:27,040 --> 00:17:28,420
and bring it home and that didn't work either.

392
00:17:28,430 --> 00:17:29,489
So I'd bring that back.

393
00:17:29,500 --> 00:17:31,900
-- Well,
-- we didn't have best buy up here until a while later

394
00:17:31,910 --> 00:17:33,160
anyway. Ok. Ok.

395
00:17:33,170 --> 00:17:37,959
So let's, let's assume we've set the stage for the past.

396
00:17:37,969 --> 00:17:39,640
So now let's fast forward to today.

397
00:17:39,650 --> 00:17:42,760
We talked to Greg Kh like a month or two ago and he was

398
00:17:42,863 --> 00:17:46,963
very clear about the stability and reliability of

399
00:17:47,172 --> 00:17:49,703
-- upstream Linux
-- kernel don't break user space.

400
00:17:51,552 --> 00:17:53,562
That is a big freaking deal.

401
00:17:53,572 --> 00:17:57,642
And one of the reasons I love Linux is same thing with Windows, love it or hate it.

402
00:17:57,902 --> 00:18:00,003
You still can't make a director called PR N one on

403
00:18:00,012 --> 00:18:03,322
Windows because that's ad os device name for your printer.

404
00:18:03,333 --> 00:18:07,613
-- Right.
-- Right. So anyway, now you have these,

405
00:18:08,056 --> 00:18:08,365
we'll,

406
00:18:08,375 --> 00:18:11,485
we'll call them historic like Linux distributions that are

407
00:18:11,495 --> 00:18:13,355
still doing things the way they did them.

408
00:18:13,416 --> 00:18:14,005
And

409
00:18:14,345 --> 00:18:17,595
you have the upstream Linux people saying, don't do it like this anymore.

410
00:18:17,605 --> 00:18:20,446
And now they've also been saying that for a long time,

411
00:18:20,495 --> 00:18:22,975
-- you're
-- saying that the Linux distributions do this, but you're,

412
00:18:22,985 --> 00:18:26,046
you almost said it if it as if it happens in a vacuum

413
00:18:26,176 --> 00:18:31,365
and this, the one thing we forget, there's a lot of customers that have been trained

414
00:18:31,696 --> 00:18:32,806
to expect

415
00:18:33,380 --> 00:18:34,410
and use

416
00:18:34,780 --> 00:18:37,680
a air quote stable distribution,

417
00:18:37,880 --> 00:18:38,530
which means

418
00:18:38,660 --> 00:18:40,349
frozen in time and back parted

419
00:18:40,489 --> 00:18:44,729
and Red hat, for example, spent 20 years educating people that this was the way to go.

420
00:18:44,739 --> 00:18:48,369
And now we're just saying like, yeah, just like like password rotation, right.

421
00:18:48,380 --> 00:18:49,569
We spent 20 years saying

422
00:18:49,880 --> 00:18:52,969
password rotation, you should do password rotation followed by like whoops, no,

423
00:18:52,979 --> 00:18:54,329
it's completely wrong.

424
00:18:54,449 --> 00:18:57,800
Nist has recanted and even posted guidance saying it's wrong

425
00:18:57,910 --> 00:18:59,089
and people still repeat it

426
00:18:59,189 --> 00:19:00,930
-- and believe it,
-- I think on the

427
00:19:01,118 --> 00:19:04,378
distribution topic, it's not as simple as just saying, oh,

428
00:19:04,387 --> 00:19:05,897
we don't have to do it anymore.

429
00:19:06,267 --> 00:19:06,447
Exactly.

430
00:19:06,608 --> 00:19:09,258
That's what I'm saying. I think the kernel is potentially special.

431
00:19:09,267 --> 00:19:11,897
Like, I'll give you an example. I have a machine in my basement that I do.

432
00:19:11,907 --> 00:19:13,557
Like a lot of weird stuff on

433
00:19:13,947 --> 00:19:17,517
and like a lot of, like doing data analysis type work. Right.

434
00:19:17,748 --> 00:19:21,238
That runs Debbie and 11. Debbie and 12 is out now. I have not upgraded it.

435
00:19:21,248 --> 00:19:23,807
Do you know why? Because when I upgraded from Debbie and 11 to De

436
00:19:23,978 --> 00:19:28,817
and 12, all of my stuff is going to break, I know this 100%. And so I just

437
00:19:28,926 --> 00:19:30,375
basically need, at some point,

438
00:19:30,385 --> 00:19:32,706
I'm gonna need a free weekend where I'm going to do the upgrade

439
00:19:32,715 --> 00:19:36,265
and then I'm gonna spend hours and hours and hours fixing scripts,

440
00:19:36,276 --> 00:19:38,245
fixing binaries, rebuilding things

441
00:19:38,416 --> 00:19:41,186
-- because it's just how it is, right. It is what
-- it is.

442
00:19:41,196 --> 00:19:44,725
-- This is actually one of the reasons I chose Python. It's all in
-- Python. Kurt.

443
00:19:44,735 --> 00:19:47,485
Almost all my scripts are in Python. They will all break when I upgrade.

444
00:19:47,796 --> 00:19:52,066
I 100% guarantee it. It's just how it is. It is what it is, whatever.

445
00:19:52,235 --> 00:19:54,426
All of, all of this change, all of this churn,

446
00:19:54,436 --> 00:19:56,586
the things we're scared of the things we don't like.

447
00:19:56,843 --> 00:20:00,404
There's, I think two pieces to this and, and I think first of all,

448
00:20:00,413 --> 00:20:02,144
there's the fact that Rocky Linux

449
00:20:02,604 --> 00:20:04,034
wrote this article,

450
00:20:04,524 --> 00:20:05,953
I have a suspicion,

451
00:20:06,053 --> 00:20:07,913
the secret reason they did this.

452
00:20:07,923 --> 00:20:10,713
And I don't know, I haven't looked at Rocky Linux in a long time,

453
00:20:10,884 --> 00:20:12,904
but they're either they either are or are

454
00:20:12,913 --> 00:20:15,413
going to start running upstream kernel versions.

455
00:20:15,423 --> 00:20:17,833
And this is their justification for doing that.

456
00:20:17,843 --> 00:20:19,904
And that would solve two major problems. One

457
00:20:20,083 --> 00:20:23,213
way less engineering, like just grab stable and or

458
00:20:23,404 --> 00:20:24,404
not grab the limit

459
00:20:24,702 --> 00:20:25,151
and use it.

460
00:20:25,342 --> 00:20:28,962
But number two red hat has historically for the last few years,

461
00:20:28,972 --> 00:20:32,432
made it harder and harder to get the source code for their Linux kernel.

462
00:20:32,712 --> 00:20:33,271
For sure

463
00:20:33,751 --> 00:20:35,421
to the point where it's valuable.

464
00:20:35,452 --> 00:20:37,482
Well, it, yeah, like that patch set,

465
00:20:37,491 --> 00:20:42,462
like which patches went in how like even the order they go in matters to some degree.

466
00:20:42,472 --> 00:20:43,641
Sadly, like it's

467
00:20:43,781 --> 00:20:44,641
matters a ton.

468
00:20:44,651 --> 00:20:46,462
Like I think this is one of those things

469
00:20:46,472 --> 00:20:49,362
where people think of patching the lin external as like

470
00:20:49,651 --> 00:20:52,241
applying a three line patch to some piece of software. It's like,

471
00:20:53,099 --> 00:20:56,569
well, no, but you laugh and I laugh but we've lived the pain.

472
00:20:56,709 --> 00:21:02,219
I've, I have actually had to edit a Linux kernel file to like,

473
00:21:02,229 --> 00:21:04,810
fix a thing because the patch wasn't out for it yet.

474
00:21:04,900 --> 00:21:06,699
And I would have had to wait weeks for it to come out.

475
00:21:06,709 --> 00:21:10,410
But somebody posted to the mail and West, hey, I tried this and it worked a little bit

476
00:21:10,550 --> 00:21:11,430
better.

477
00:21:11,689 --> 00:21:12,410
Good luck.

478
00:21:12,420 --> 00:21:14,959
But like most people don't, you know, they haven't experienced that pain,

479
00:21:14,969 --> 00:21:17,209
which speaks to the whole Linux ecosystem.

480
00:21:17,219 --> 00:21:19,089
And, and business part of it

481
00:21:19,319 --> 00:21:20,050
succeeding,

482
00:21:20,369 --> 00:21:23,229
you know, that they haven't had to hand whittle their own spears.

483
00:21:23,270 --> 00:21:25,310
-- Yeah, for sure, for sure.
-- But the,

484
00:21:25,790 --> 00:21:29,880
I just keep coming back to all the current business kind of culture and what we

485
00:21:29,890 --> 00:21:33,089
teach people and how we do these things came from 20 years ago and that,

486
00:21:33,250 --> 00:21:36,250
-- that world barely exists.
-- It's way different now for sure.

487
00:21:36,260 --> 00:21:37,750
And, and here's the other thing

488
00:21:37,949 --> 00:21:40,770
there, there's, there's two pieces of this. First of all, they

489
00:21:41,000 --> 00:21:45,410
put a lot of focus in this paper on security specifically on vulnerabilities.

490
00:21:45,540 --> 00:21:46,050
And

491
00:21:46,540 --> 00:21:51,369
the the vulnerability situation in the Linux kernel I think is very unique

492
00:21:51,520 --> 00:21:52,770
because not everyone

493
00:21:53,030 --> 00:21:53,800
ability really matters.

494
00:21:53,810 --> 00:21:55,760
Like this is a good example of Red Hat doesn't

495
00:21:55,770 --> 00:21:58,839
build every single piece of hardware supported into their kernel,

496
00:21:58,849 --> 00:21:59,099
right?

497
00:21:59,109 --> 00:22:01,520
So some of the patches don't work. A lot of them will,

498
00:22:01,650 --> 00:22:03,040
can you even do it?

499
00:22:03,170 --> 00:22:06,510
-- Probably
-- not because didn't, somebody doesn't like once every couple of years,

500
00:22:06,520 --> 00:22:09,479
somebody tried to compile all the Linux kernel code and be like

501
00:22:09,489 --> 00:22:12,839
these old drivers are just totally broken and don't work anymore.

502
00:22:12,849 --> 00:22:13,359
Maybe.

503
00:22:13,630 --> 00:22:16,489
Oh, I remember seeing this at least a few years ago where somebody was like all this,

504
00:22:16,500 --> 00:22:18,119
I think it was like X 25 stuff or something.

505
00:22:18,130 --> 00:22:19,829
It was all just broken or

506
00:22:20,189 --> 00:22:21,520
so the point is right,

507
00:22:21,650 --> 00:22:23,729
you can focus on vulnerabilities and now

508
00:22:23,890 --> 00:22:25,810
this is where Red hat kind of has

509
00:22:26,189 --> 00:22:27,369
a, a two paths.

510
00:22:27,380 --> 00:22:30,530
They can take, they can take the, oh, we're just going to take upstream and use it and,

511
00:22:30,540 --> 00:22:33,079
and we're gonna make sure the upstream stuff works the way we want

512
00:22:33,089 --> 00:22:34,650
it to work and they're gonna test the crap out of it.

513
00:22:34,660 --> 00:22:36,680
So it's not like they're just going to take it in YOLO. It, right.

514
00:22:36,689 --> 00:22:38,079
They're still gonna test it to death.

515
00:22:38,180 --> 00:22:40,599
And, ok, I'm gonna, when we worked at Red Hat,

516
00:22:40,900 --> 00:22:42,180
it took a week to

517
00:22:42,459 --> 00:22:43,060
test

518
00:22:43,209 --> 00:22:46,319
-- a kernel because
-- yeah, it probably takes at least that. Now

519
00:22:46,380 --> 00:22:47,410
people forget

520
00:22:48,150 --> 00:22:50,140
there's hardware testing that literally

521
00:22:50,150 --> 00:22:52,609
involves somebody like physically pulling a

522
00:22:52,619 --> 00:22:55,000
plug and plugging something back in to see what happens,

523
00:22:55,109 --> 00:22:58,000
right? Like like a scuzzy device drive rate array or whatever.

524
00:22:58,050 --> 00:23:01,449
So the thing people forget too is like real, I hate to say

525
00:23:01,560 --> 00:23:02,800
air quotes. Real.

526
00:23:02,810 --> 00:23:07,349
Linux kernel testing involves physically moving stuff around and unplugging

527
00:23:07,359 --> 00:23:09,770
stuff and just you can't automate this stuff really?

528
00:23:09,780 --> 00:23:12,739
-- OK.
-- Now that I think that's part of the story is

529
00:23:12,900 --> 00:23:13,790
the the page

530
00:23:14,244 --> 00:23:18,234
talks about security specifically, right? But what about not security? Like there

531
00:23:18,785 --> 00:23:22,055
is a red hat kernel more stable than a non

532
00:23:22,194 --> 00:23:25,834
red hat kernel. Like I can't answer that question. I don't know.

533
00:23:26,045 --> 00:23:29,074
I think you, they're going to say yes and open, you know,

534
00:23:29,084 --> 00:23:31,435
the upstream kernel people will probably say no,

535
00:23:31,824 --> 00:23:33,015
I have an answer for that.

536
00:23:33,415 --> 00:23:35,954
And the thing is you're forgetting something very important.

537
00:23:36,104 --> 00:23:39,635
The red hat Linux kernel, for example, does not exist in a vacuum of testing.

538
00:23:40,349 --> 00:23:40,709
So

539
00:23:40,829 --> 00:23:44,380
you say Red Hat tests the crap out of it. But that's wrong. What about Dell?

540
00:23:44,390 --> 00:23:47,400
What about IBM? What about all the system vendors that

541
00:23:47,530 --> 00:23:50,479
ship and certify and don't just ship Red Hat Linux,

542
00:23:50,719 --> 00:23:52,109
but literally say

543
00:23:52,520 --> 00:23:54,400
this will 100% guaranteed work,

544
00:23:54,410 --> 00:23:57,319
which is why you're paying us like twice as much for the hardware.

545
00:23:57,329 --> 00:23:58,660
I was just buying it. All right.

546
00:23:58,829 --> 00:23:59,619
I mean, that's fair.

547
00:23:59,630 --> 00:24:03,479
-- There's, there's definitely that whole ecosystem
-- and I mean, I remember, but like,

548
00:24:03,609 --> 00:24:04,050
you think

549
00:24:04,400 --> 00:24:06,270
Hitachi doesn't do an insane level of testing for

550
00:24:06,280 --> 00:24:08,260
their high end systems running Red Hat enterprise,

551
00:24:08,270 --> 00:24:08,459
Linux.

552
00:24:08,729 --> 00:24:10,819
Yeah, I mean, that's why you pay for it though. Right,

553
00:24:11,130 --> 00:24:13,619
let's say for the sake of argument, Red Hat starts,

554
00:24:13,829 --> 00:24:18,956
uh, at a located so they get a new upstream kernel once a month. So 12 times a year,

555
00:24:19,076 --> 00:24:20,865
they actually currently do a lot more than that.

556
00:24:20,875 --> 00:24:24,586
But because it's air quote stable and back ported, it's a little less scary.

557
00:24:24,595 --> 00:24:27,066
But the thing to remember now is what is Del gonna do,

558
00:24:27,215 --> 00:24:29,845
they're gonna take what Red Hat gives them. That's what they're gonna do.

559
00:24:30,076 --> 00:24:34,916
-- And
-- historically, however, with the, with the, with the kernel being just backed

560
00:24:35,166 --> 00:24:36,265
stuff, Dell can look

561
00:24:36,371 --> 00:24:37,602
it and go, we can like,

562
00:24:37,612 --> 00:24:39,962
basically ignore 90% of this because it's like

563
00:24:39,972 --> 00:24:41,651
they're not touching any drivers we care about,

564
00:24:41,661 --> 00:24:43,202
they're not touching stuff we care about.

565
00:24:43,391 --> 00:24:47,671
-- But with a upstream curl. Now, a lot of stuff is getting touched.
-- Yeah.

566
00:24:47,682 --> 00:24:50,741
There's a lot more churn in that regard and, and that's fair.

567
00:24:50,891 --> 00:24:52,312
-- Yeah.
-- And see, and that's,

568
00:24:52,482 --> 00:24:54,582
and then, and then Dell has to take the,

569
00:24:54,842 --> 00:24:58,171
the, you know, how much do we trust upstream not to break stuff?

570
00:24:58,479 --> 00:25:02,680
I mean, this is gonna be kind of the question, right? Is we don't know for sure.

571
00:25:02,689 --> 00:25:03,579
I have a suspicion.

572
00:25:03,589 --> 00:25:07,930
It's fine just because android is using the upstream kernel in Android.

573
00:25:07,959 --> 00:25:11,060
What did Greg say 4 billion devices? Like, come on.

574
00:25:11,189 --> 00:25:13,560
-- Well,
-- and a diversity of devices, right. That's

575
00:25:14,040 --> 00:25:18,540
my favorite thing is you look at the screen chart size for the iphone ecosystem

576
00:25:18,885 --> 00:25:20,145
like 10 maybe.

577
00:25:20,326 --> 00:25:20,456
Yeah,

578
00:25:20,465 --> 00:25:22,316
there's like 10 screen sizes and then you look at

579
00:25:22,326 --> 00:25:24,745
the one for Android and it's just a mess.

580
00:25:24,755 --> 00:25:28,666
-- It's a squiggly line of shoelaces. There's like a couple
-- 100.

581
00:25:28,875 --> 00:25:32,306
I bet it's at least, I bet it's more than 100. But anyway,

582
00:25:32,495 --> 00:25:35,875
it's one of those things where it's fine until it's not like,

583
00:25:35,885 --> 00:25:38,465
remember when we fixed heartbleed, did we?

584
00:25:38,845 --> 00:25:39,176
And,

585
00:25:39,291 --> 00:25:41,641
and a bunch of people rebooted their Dell servers

586
00:25:41,812 --> 00:25:44,771
and then Red Hat had to send out an emergency notice saying

587
00:25:44,932 --> 00:25:48,391
please don't apply this update and reboot because you know,

588
00:25:48,572 --> 00:25:51,692
-- yeah, you might have to get Dell to like fix the hardware,
-- did it?

589
00:25:51,702 --> 00:25:54,432
-- I don't remember that.
-- Yeah, I remember that was bricking systems.

590
00:25:54,802 --> 00:25:57,712
I don't remember that, but it, nothing would surprise me.

591
00:25:57,722 --> 00:25:59,511
-- Was
-- it
-- heart bleed or was it something else?

592
00:26:00,010 --> 00:26:03,160
Uh, no, not heartbleed. Sorry. What was it was one of those, uh CPU ones?

593
00:26:03,170 --> 00:26:04,270
-- What was the CPU?
-- Like?

594
00:26:04,479 --> 00:26:06,510
There was like shell shock and ghost and stuff.

595
00:26:06,760 --> 00:26:09,000
-- It was like shell shock
-- wasn't CPU. What

596
00:26:09,010 --> 00:26:10,520
was the one that affected the CP US?

597
00:26:10,530 --> 00:26:14,800
And that the fix had like a 30% performance hit? It was the predictive cashing.

598
00:26:14,810 --> 00:26:16,750
-- Wasn't
-- that specter meltdown? Right.

599
00:26:16,979 --> 00:26:18,209
Yes, that was the one.

600
00:26:18,439 --> 00:26:19,380
Yeah. Yeah. Yeah.

601
00:26:19,630 --> 00:26:21,469
Anyways, the point is it bricked

602
00:26:21,640 --> 00:26:24,310
-- systems?
-- OK. I wanna, I wanna move us in the

603
00:26:24,578 --> 00:26:24,608
of,

604
00:26:24,817 --> 00:26:27,907
of coming to a reasonable conclusion on this.

605
00:26:27,917 --> 00:26:31,478
And I guess here is my thought on all of this stuff.

606
00:26:31,488 --> 00:26:34,878
We just talked about this paper that, that was, that came out.

607
00:26:35,047 --> 00:26:36,458
I have a suspicion

608
00:26:36,647 --> 00:26:41,078
we are approaching a point where the days of like trying to cast this

609
00:26:41,088 --> 00:26:45,738
software in Amber and maintain it for long periods of time is probably over.

610
00:26:45,748 --> 00:26:48,998
And the single biggest reason is just the, the

611
00:26:49,265 --> 00:26:54,215
volume of software we interact with now is probably somewhere between 10

612
00:26:54,225 --> 00:26:57,005
and 100 times as much as it was 20 years ago.

613
00:26:57,336 --> 00:27:00,645
Well, and to add to that, it's not just the volume you're interacting with.

614
00:27:00,875 --> 00:27:02,365
It's your dependency chains

615
00:27:02,615 --> 00:27:02,696
that

616
00:27:03,265 --> 00:27:03,336
used

617
00:27:03,566 --> 00:27:05,115
to be. Well, no, no, it used to be.

618
00:27:05,125 --> 00:27:06,885
You interacted with a lot of different software,

619
00:27:06,895 --> 00:27:09,686
but they were sort of like little islands independent of each other.

620
00:27:09,875 --> 00:27:11,635
But now you stand up a web app

621
00:27:11,836 --> 00:27:12,446
and

622
00:27:13,286 --> 00:27:13,605
1000

623
00:27:13,713 --> 00:27:15,034
PM packages get pulled in

624
00:27:15,463 --> 00:27:16,973
and if one of them doesn't work,

625
00:27:17,453 --> 00:27:17,854
right.

626
00:27:18,043 --> 00:27:20,173
And that has changed, like,

627
00:27:20,333 --> 00:27:24,213
the system used to be like, you could just rip out random libraries and like,

628
00:27:24,223 --> 00:27:26,663
one or two things that depended on them would break.

629
00:27:26,673 --> 00:27:28,543
But I've been paying attention when I installed

630
00:27:28,553 --> 00:27:30,774
certain Python libraries now and I'm like this,

631
00:27:30,784 --> 00:27:33,443
like, it's installing over 100 and 16, like

632
00:27:33,593 --> 00:27:35,984
yt downloader installs FFM

633
00:27:36,173 --> 00:27:36,973
peg and

634
00:27:37,313 --> 00:27:38,173
who that pulls in

635
00:27:38,281 --> 00:27:38,901
everything

636
00:27:39,112 --> 00:27:40,612
or there's uh the Python.

637
00:27:40,621 --> 00:27:42,791
Uh I was doing some OCR and Python and it just is like,

638
00:27:42,802 --> 00:27:44,421
I'm going to install 200 megabytes of stuff.

639
00:27:44,432 --> 00:27:44,942
And I'm like, yeah,

640
00:27:45,052 --> 00:27:45,171
that's

641
00:27:45,342 --> 00:27:45,432
pretty

642
00:27:45,582 --> 00:27:47,602
normal. Like you do, you, that's how it works.

643
00:27:47,612 --> 00:27:48,041
Now, again,

644
00:27:48,052 --> 00:27:49,791
that's bigger than my system used to have

645
00:27:49,802 --> 00:27:52,661
-- a hard drive because
-- it's a different world,

646
00:27:52,671 --> 00:27:54,062
but it's a dependent.

647
00:27:54,072 --> 00:27:58,562
But the thing is, it's not a volume of software anymore. It's dependency chains.

648
00:27:58,572 --> 00:28:02,741
-- It's, it's, they're reliant on each other.
-- Those are the same definitions.

649
00:28:04,239 --> 00:28:04,760
So,

650
00:28:05,089 --> 00:28:08,380
but basically going to this, we need, ultimately,

651
00:28:08,390 --> 00:28:10,760
my theory is we need better testing

652
00:28:11,229 --> 00:28:13,540
to catch bugs and fix them faster.

653
00:28:14,109 --> 00:28:15,859
And if you have to do that anyways,

654
00:28:16,270 --> 00:28:18,430
you might as well run current to put it bluntly.

655
00:28:18,709 --> 00:28:20,979
And I think a lot of projects are gonna

656
00:28:21,420 --> 00:28:23,589
slowly, hopefully level up.

657
00:28:23,599 --> 00:28:25,689
I don't think all projects are going to get to the Linux kernel

658
00:28:25,699 --> 00:28:28,760
level because most projects are like one or two people or 10 people.

659
00:28:28,890 --> 00:28:31,849
But conversely, hopefully, maybe they're simple enough that,

660
00:28:32,119 --> 00:28:34,130
you know, they're not so unstable, like,

661
00:28:34,140 --> 00:28:36,489
like something that converts dates or whatever.

662
00:28:36,500 --> 00:28:39,160
Right. Like, hopefully it's somewhat more stable than the Linux kernel.

663
00:28:39,170 --> 00:28:44,750
I, I don't think there's an answer and I don't think testing is gonna save us.

664
00:28:44,770 --> 00:28:48,074
No, it's not gonna save us but going to make things better. So perfect example.

665
00:28:48,084 --> 00:28:49,714
Right? I was fetching about this before the show.

666
00:28:49,994 --> 00:28:54,385
I have a I consistently output Jason which makes life a lot easier to deal with

667
00:28:54,535 --> 00:28:55,785
and it randomly sticks smirk one in.

668
00:28:55,814 --> 00:28:59,795
So I I wrote a giant hunk of Python that sanitizes it and cleans it.

669
00:28:59,844 --> 00:29:03,474
Cool like and and as time goes on and I do more of this,

670
00:29:03,484 --> 00:29:05,854
I will find more corner cases and fix them in the

671
00:29:06,005 --> 00:29:07,354
in my sanitization code

672
00:29:07,505 --> 00:29:09,635
which is available for free online and other

673
00:29:09,645 --> 00:29:11,305
people will run stuff and hopefully do it.

674
00:29:11,989 --> 00:29:12,479
And

675
00:29:12,810 --> 00:29:16,400
then even though the A is are doing dumb stuff of like spitting up buggy J so

676
00:29:16,920 --> 00:29:20,900
cool we fixed it and that is what will let us, for example, use A I.

677
00:29:20,910 --> 00:29:25,400
That's what will let us use more up to date libraries is the assumption that yeah,

678
00:29:25,410 --> 00:29:26,939
something can and will go wrong

679
00:29:27,189 --> 00:29:28,560
because it will at some point, right?

680
00:29:29,000 --> 00:29:31,349
There'll be a buggy library or a flaw

681
00:29:31,560 --> 00:29:31,979
and

682
00:29:32,119 --> 00:29:33,739
well, you better catch it and deal with it.

683
00:29:33,839 --> 00:29:36,739
-- I
-- don't think it's that simple and I don't know what the answer is gonna be.

684
00:29:36,750 --> 00:29:37,650
-- But
-- the solution of,

685
00:29:37,660 --> 00:29:41,250
let's freeze our software and just run software that is like a solution.

686
00:29:41,260 --> 00:29:43,819
-- Static and good.
-- We can't. Well, ok. No, no.

687
00:29:43,829 --> 00:29:44,449
Look,

688
00:29:44,459 --> 00:29:46,140
a lot of people freeze their software and they

689
00:29:46,150 --> 00:29:47,619
never touch it because they don't have to.

690
00:29:47,640 --> 00:29:50,800
And that's the way it's going to be because I read a web app and I,

691
00:29:50,810 --> 00:29:53,430
if I never update my dependencies, my web app never breaks.

692
00:29:53,439 --> 00:29:54,219
Now, will I get P

693
00:29:54,359 --> 00:29:57,849
someday? Because I'm running some old horrible javascript library.

694
00:29:57,963 --> 00:30:00,103
Maybe, maybe not. That's the thing. Right.

695
00:30:00,223 --> 00:30:01,253
Well, and the problem is

696
00:30:01,483 --> 00:30:03,302
if it's an internal app that you're running,

697
00:30:03,312 --> 00:30:05,243
you have the incentive to maybe care about security.

698
00:30:05,312 --> 00:30:08,123
But if it's a light bulb that you sold too bad soccer,

699
00:30:08,152 --> 00:30:10,503
this is the problem in software today.

700
00:30:10,512 --> 00:30:10,723
Right?

701
00:30:10,733 --> 00:30:11,123
Is, it's,

702
00:30:11,133 --> 00:30:13,603
it's easier to do nothing than it is to do something

703
00:30:13,613 --> 00:30:15,672
because when I do something I might break it and,

704
00:30:15,833 --> 00:30:19,282
and I don't think we, we don't have good answers to any of this today.

705
00:30:19,652 --> 00:30:23,753
You can say we're gonna run current and in things like Linux kernel. Yeah. Sure.

706
00:30:23,762 --> 00:30:26,782
-- That probably works.
-- I don't know that that's gonna work on light bulbs though

707
00:30:26,926 --> 00:30:28,225
because I don't want my light bulbs.

708
00:30:28,235 --> 00:30:30,706
Like the other thing to remember is if one

709
00:30:30,715 --> 00:30:32,745
in a million devices break during an update,

710
00:30:32,755 --> 00:30:35,265
which absolutely will happen because a cosmic ray is gonna

711
00:30:35,276 --> 00:30:37,845
hit them or like one cell of memory is bad or

712
00:30:38,635 --> 00:30:41,145
whatever, somebody turns it off while it's updating and, you know,

713
00:30:41,156 --> 00:30:42,656
like every time I update my bias now,

714
00:30:42,666 --> 00:30:45,306
I love that the little screen progress bar marches and it's like,

715
00:30:45,316 --> 00:30:49,196
do not turn the computer off in very large letters.

716
00:30:49,316 --> 00:30:49,855
And

717
00:30:49,985 --> 00:30:52,745
so the thing is if you brick a device one in a million,

718
00:30:52,755 --> 00:30:55,745
if you sell 10 million light bulbs and update the monthly,

719
00:30:56,239 --> 00:30:58,979
that's going to be a lot of dead light bulbs, it would be. Yes.

720
00:30:58,989 --> 00:31:00,099
And again, people forget this.

721
00:31:00,109 --> 00:31:04,209
Like these things happen at scale and at scale one in

722
00:31:04,219 --> 00:31:06,239
a million is eight times a day in New York City.

723
00:31:06,390 --> 00:31:09,900
Yeah, I don't, I don't, that's the thing. I don't know what the answer is.

724
00:31:09,910 --> 00:31:11,099
We, no one does.

725
00:31:11,260 --> 00:31:13,119
-- I think. No,
-- you don't either.

726
00:31:13,339 --> 00:31:13,579
No, no,

727
00:31:13,589 --> 00:31:17,439
I think what would help is making a bit of a framework to define the problem better.

728
00:31:17,449 --> 00:31:21,670
So for example, having a system running a Linux kernel that has shell accounts.

729
00:31:21,760 --> 00:31:27,140
It is vastly different than having a Linux kernel running on a pump in an oil field.

730
00:31:27,380 --> 00:31:29,219
In that it probably won't have medical users,

731
00:31:29,229 --> 00:31:31,790
but the failure mode actually might be far worse.

732
00:31:31,800 --> 00:31:34,719
Ok? I don't want to keep, we're, we're just making crap up at this point.

733
00:31:34,729 --> 00:31:36,339
Here's how I want to end this show

734
00:31:36,709 --> 00:31:39,979
is just by saying this sort of paper

735
00:31:40,489 --> 00:31:42,180
I think is beneficial because it's,

736
00:31:42,369 --> 00:31:43,079
we need this.

737
00:31:43,130 --> 00:31:45,439
It's shining a light on some of the way we

738
00:31:45,449 --> 00:31:47,180
did things because there's a lot of things we,

739
00:31:47,280 --> 00:31:48,819
especially in software, especially,

740
00:31:48,829 --> 00:31:52,609
especially in security that it's like we do it this way because we do it this way.

741
00:31:53,229 --> 00:31:56,449
This said to rotate passwords 20 years ago. Why are you not rotating passwords?

742
00:31:56,459 --> 00:31:56,739
Right.

743
00:31:56,750 --> 00:32:00,540
There are many, there are many good reasons to ask questions and say,

744
00:32:00,550 --> 00:32:02,979
is this the right way to go anymore?

745
00:32:03,040 --> 00:32:03,640
And

746
00:32:03,910 --> 00:32:04,900
I think that's great.

747
00:32:05,030 --> 00:32:06,969
-- It
-- might be still the right way for some people

748
00:32:06,979 --> 00:32:08,719
and not the right way for new people using it

749
00:32:08,910 --> 00:32:08,989
for

750
00:32:09,630 --> 00:32:11,420
sure. I think people forget,

751
00:32:11,589 --> 00:32:12,550
not everybody,

752
00:32:12,800 --> 00:32:13,089
well,

753
00:32:13,510 --> 00:32:15,479
not everybody uses software the same way you do.

754
00:32:15,579 --> 00:32:18,069
And I think a lot of people honest to God, forget that.

755
00:32:18,310 --> 00:32:21,540
Yeah, I mean, that's one of the things that makes software so crazy and awesome

756
00:32:21,689 --> 00:32:25,239
is just the fact that it's different. Everyone uses it different. But

757
00:32:25,380 --> 00:32:28,260
yeah, I don't, I don't know. I mean, this was, it was fun to read.

758
00:32:28,270 --> 00:32:29,380
It's fun to think about.

759
00:32:29,719 --> 00:32:32,920
I am very curious to see what Red Hat is going to do with all of this

760
00:32:32,930 --> 00:32:34,209
in the future because I think they are

761
00:32:34,219 --> 00:32:38,180
probably the single most impacted organization in this space

762
00:32:38,689 --> 00:32:39,310
and

763
00:32:39,510 --> 00:32:42,150
I have a suspicion, whatever they do

764
00:32:42,410 --> 00:32:45,500
is going to be where the entire industry follows.

765
00:32:45,709 --> 00:32:48,229
I will bet a dollar that Red Hat keeps doing what

766
00:32:48,239 --> 00:32:50,770
they're doing because that's what they've trained their customers to expect.

767
00:32:50,810 --> 00:32:53,069
-- I mean, it is true.
-- Retraining.

768
00:32:53,079 --> 00:32:55,689
The customers will be more expensive than just continuing

769
00:32:55,699 --> 00:32:57,869
to burn money on the pile of stability.

770
00:32:57,939 --> 00:33:00,589
It could be, it would my, my suspicion

771
00:33:00,719 --> 00:33:02,390
if I was going to bet you a dollar

772
00:33:02,670 --> 00:33:05,349
is that Red hat will continue with their

773
00:33:05,449 --> 00:33:08,806
long term kernel or whatever they want to call it. And then also, so

774
00:33:09,225 --> 00:33:10,855
in conjunction, have a,

775
00:33:10,865 --> 00:33:16,066
we'll say less tested upstream kernel that exists for people who want to,

776
00:33:16,166 --> 00:33:20,306
we say not have 700 security vulnerabilities reported in their kernel.

777
00:33:20,316 --> 00:33:23,286
I thought about that. I actually, it's funny. I was thinking about that before.

778
00:33:23,296 --> 00:33:24,426
The show is like having that,

779
00:33:24,706 --> 00:33:26,426
that dual strategy.

780
00:33:26,666 --> 00:33:28,725
It's too late. You already bet a dollar you can.

781
00:33:28,975 --> 00:33:32,625
I will still keep my dollar on saying what I said.

782
00:33:32,635 --> 00:33:35,505
Red Hat would do because again, I think that would just be way,

783
00:33:35,515 --> 00:33:39,901
way too confusing for customers and way too confusing to message and to teach.

784
00:33:39,972 --> 00:33:40,582
I don't know,

785
00:33:40,812 --> 00:33:41,741
I don't know. We'll see

786
00:33:41,862 --> 00:33:43,572
it. It's good. It's a fun paper.

787
00:33:43,871 --> 00:33:46,712
All right. I'm ending this episode. Thank you, Kurt. Thank you all for listening.

788
00:33:46,722 --> 00:33:47,041
Go to

789
00:33:47,141 --> 00:33:49,112
social security podcast.com. Head up the show notes. Easy

790
00:33:49,401 --> 00:33:53,501
Podos has podcast. Hashtag on Mastodon. Kurt have a marvelous rest of your day.

791
00:33:53,712 --> 00:33:54,171
You too.

792
00:33:54,182 --> 00:33:57,222
And if you can afford it, eat some fresh vegetables, they're delicious,

793
00:33:57,241 --> 00:33:58,612
-- especially
-- corn.

794
00:33:59,001 --> 00:33:59,011
Oh

795
00:33:59,121 --> 00:33:59,741
my God.

796
00:34:00,031 --> 00:34:00,452
Like when I,

797
00:34:00,732 --> 00:34:01,592
when I can get fresh

798
00:34:01,982 --> 00:34:02,072
corn

799
00:34:02,312 --> 00:34:03,692
from the roadside guys. And so

800
00:34:04,312 --> 00:34:08,231
-- that is amazing corn. All right.
-- I'm leaving. Thanks everyone. Bye bye.