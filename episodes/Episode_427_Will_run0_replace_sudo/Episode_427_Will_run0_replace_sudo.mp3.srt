0
00:00:05,469 --> 00:00:08,850
Hello and welcome to the open source security podcast with myself, Kurt

1
00:00:08,960 --> 00:00:09,310
Siefried

2
00:00:09,470 --> 00:00:12,470
and my partner in trying to avoid privilege. Josh Pressers.

3
00:00:12,939 --> 00:00:14,930
-- Do I try to avoid
-- privilege?

4
00:00:14,979 --> 00:00:17,290
Remember back in the day where everybody wanted

5
00:00:17,299 --> 00:00:19,290
pseudo access on the server so they could,

6
00:00:19,440 --> 00:00:20,879
oh, that kind of privilege.

7
00:00:21,379 --> 00:00:22,010
OK.

8
00:00:22,750 --> 00:00:25,459
That was not the privilege I had in my brain when you said that.

9
00:00:25,909 --> 00:00:28,670
Uh And then now I'm like, I don't want access to that system.

10
00:00:28,680 --> 00:00:29,149
And unfortunately,

11
00:00:29,159 --> 00:00:32,319
I have access to all the systems because I'm also like that means, hey, Kurt,

12
00:00:32,330 --> 00:00:33,610
it's broken, you can go fix it.

13
00:00:33,770 --> 00:00:36,090
So it's funny that came up because at

14
00:00:36,599 --> 00:00:37,490
work,

15
00:00:37,549 --> 00:00:40,529
we're switching a bunch of our security stuff over to

16
00:00:40,540 --> 00:00:43,080
use the elastic sack because it does multiple things.

17
00:00:43,090 --> 00:00:48,049
It's like just tool consolidation, right? And one thing we need is I need a machine

18
00:00:48,180 --> 00:00:49,970
running the elastic agent

19
00:00:50,119 --> 00:00:51,680
so I can like send it job

20
00:00:51,837 --> 00:00:55,256
still like query remote logs and other weird kind of stuff like that, right?

21
00:00:55,666 --> 00:00:58,337
And it just, it's a VM somewhere. I don't care where it is.

22
00:00:58,347 --> 00:01:00,457
And I told her it people, I'm like, hey, I need this.

23
00:01:00,556 --> 00:01:01,756
They were like, do you want the log in.

24
00:01:01,766 --> 00:01:02,426
I'm like, no,

25
00:01:02,506 --> 00:01:06,997
I sure don't like you install this agent and everything is fine after that.

26
00:01:07,007 --> 00:01:10,747
-- This machine is not my problem. I do not want to log into it ever.
-- I

27
00:01:10,857 --> 00:01:12,457
know, I don't want to have to patch it.

28
00:01:12,637 --> 00:01:16,927
-- I don't have to configure it. I don't have to.
-- Exactly. Right. It's not my problem.

29
00:01:17,147 --> 00:01:19,497
And it is funny you say so we're going to talk about, well,

30
00:01:19,507 --> 00:01:21,613
we always pretend like it's a secret we're gonna talk

31
00:01:21,624 --> 00:01:23,863
about even though like the freaking show title is,

32
00:01:24,024 --> 00:01:25,704
is based in pseudo and

33
00:01:26,003 --> 00:01:27,903
insisting this was funny this came up.

34
00:01:27,914 --> 00:01:30,263
Uh, so Conan o'brien has a podcast which also, by the way,

35
00:01:30,274 --> 00:01:34,073
if anyone listening hasn't watched Conan o'brien on hot ones, you have to go.

36
00:01:34,083 --> 00:01:37,664
It's, it's, it's art, it's absolutely art. Anyway.

37
00:01:37,674 --> 00:01:42,164
He, he, at the beginning of his podcast they always do like little bits about, oh,

38
00:01:42,174 --> 00:01:43,064
who's on and stuff.

39
00:01:43,073 --> 00:01:44,164
And one day Conan's like,

40
00:01:44,353 --> 00:01:46,783
like everyone knows it's in the fing title.

41
00:01:47,194 --> 00:01:50,223
It's like, yep, it sure is. But, but anyway,

42
00:01:50,541 --> 00:01:51,810
anyway, yeah, I,

43
00:01:51,820 --> 00:01:54,911
I do remember back in the old days when we

44
00:01:54,920 --> 00:01:57,771
logged into computers and did things because we had like,

45
00:01:57,780 --> 00:01:58,871
four computers

46
00:01:59,200 --> 00:01:59,710
and,

47
00:02:00,041 --> 00:02:03,710
yeah, having Pseudo access was a big deal. That was like, oh, I'm special.

48
00:02:03,721 --> 00:02:07,420
-- I, I can do Pseudo thing. Well,
-- or that even just thought you had a login.

49
00:02:07,861 --> 00:02:08,210
Uh Yeah,

50
00:02:08,451 --> 00:02:09,031
that's true

51
00:02:09,561 --> 00:02:11,880
because I sure as heck wasn't letting people have logins

52
00:02:11,891 --> 00:02:14,270
on the mail server unless they really needed it.

53
00:02:14,300 --> 00:02:17,580
I remember when I worked at a little ISP, everyone got a,

54
00:02:17,591 --> 00:02:19,380
we had a shell server so people could

55
00:02:19,578 --> 00:02:20,117
fell in.

56
00:02:20,367 --> 00:02:22,397
And it was always funny because we look at the logs and there

57
00:02:22,408 --> 00:02:25,477
were so many people who would try running pseudo all the time.

58
00:02:25,488 --> 00:02:26,108
It's like,

59
00:02:26,328 --> 00:02:26,848
ah, ha ha

60
00:02:27,018 --> 00:02:29,358
-- you knew.
-- Well, part of it is also muscle memory.

61
00:02:29,367 --> 00:02:34,817
Like I literally caught myself, I ssh into some, one of my local V MS or machines.

62
00:02:34,957 --> 00:02:36,727
And I literally just typed in like

63
00:02:36,988 --> 00:02:39,697
pseudo space su space dash out of muscle memory because

64
00:02:39,707 --> 00:02:41,238
I was like going to do something administrative on it.

65
00:02:41,248 --> 00:02:43,158
And I'm like, no, wait, no, I don't need to do that.

66
00:02:43,167 --> 00:02:46,658
This is stuff like people trying to change the root password.

67
00:02:46,667 --> 00:02:48,727
These were obviously people reading like a how to help

68
00:02:49,044 --> 00:02:50,035
guy or something.

69
00:02:50,294 --> 00:02:51,445
They were, they were not,

70
00:02:51,714 --> 00:02:54,425
we'll say accidental pseudo executions.

71
00:02:54,434 --> 00:02:56,755
And then of course, we'd send them an email and be like, if you do it again,

72
00:02:56,764 --> 00:02:58,574
we're canceling your shell access.

73
00:02:59,024 --> 00:03:02,925
And they were usually like, oh, I'm sorry about that. It wasn't me like, ok, sure.

74
00:03:02,934 --> 00:03:03,684
Anyway,

75
00:03:03,985 --> 00:03:05,854
-- so your accounts been compromised, we should turn
-- it

76
00:03:05,865 --> 00:03:08,085
-- off.
-- Don't do it again.

77
00:03:08,095 --> 00:03:09,634
I don't care what your excuse is.

78
00:03:09,654 --> 00:03:13,445
-- But anyway, ok,
-- so, well, let's just do a brief history of pseudo. Why?

79
00:03:13,455 --> 00:03:16,565
Here's a good question. Why does PSEUDO exist

80
00:03:16,705 --> 00:03:17,964
or what is pseudo for start.

81
00:03:18,072 --> 00:03:21,492
That's true. There's probably people unfamiliar with this whole universe.

82
00:03:21,522 --> 00:03:25,141
There might be people who haven't been living in a command line for 25 years.

83
00:03:25,651 --> 00:03:29,611
-- I hope there are.
-- So back in the early days, you had the SU command, right?

84
00:03:29,621 --> 00:03:31,501
Which is switch user, I believe it stands for, but

85
00:03:31,701 --> 00:03:32,572
just basically

86
00:03:32,761 --> 00:03:33,882
SU dash

87
00:03:34,182 --> 00:03:38,891
and type in the root password and then your root and you could ruin everything.

88
00:03:38,901 --> 00:03:41,852
-- And
-- so the trick with SU was is you could become another user

89
00:03:41,972 --> 00:03:43,332
but you had to know their password.

90
00:03:43,341 --> 00:03:46,641
And so it was, for example, like when you're troubleshooting some users thing,

91
00:03:46,651 --> 00:03:47,201
you'd su

92
00:03:47,658 --> 00:03:48,339
Bob

93
00:03:48,828 --> 00:03:52,029
get Bob's password on the phone because back in those days, that's how we did this.

94
00:03:52,039 --> 00:03:53,858
And then you know, you'd poke around Bob's account and be like,

95
00:03:53,869 --> 00:03:56,218
oh you like messed up your profile or you

96
00:03:56,339 --> 00:03:58,009
changed the setting in your mail? Oh

97
00:03:58,399 --> 00:04:02,169
This is back when people logged into a shell server to read their email.

98
00:04:02,179 --> 00:04:05,098
So we're talking like the the dark stone ages of computing.

99
00:04:05,229 --> 00:04:07,608
It was for sure. And, and I mean,

100
00:04:07,819 --> 00:04:09,139
the problem being so

101
00:04:09,268 --> 00:04:12,858
another aspect of this is like back in those days, if you were route,

102
00:04:13,139 --> 00:04:16,338
you could do anything you wanted. There were no se Linux policies

103
00:04:16,565 --> 00:04:19,446
capabilities. There was like root was

104
00:04:19,745 --> 00:04:22,545
the super user like that was it, you could do anything.

105
00:04:22,555 --> 00:04:25,626
So obviously you didn't want to give everyone like

106
00:04:25,635 --> 00:04:28,765
unfettered root access because that would be very bad.

107
00:04:28,776 --> 00:04:30,015
And an example of this

108
00:04:30,145 --> 00:04:35,746
when I worked at the ISP, we had like support people, which is where I started out in,

109
00:04:35,756 --> 00:04:38,515
in the way back in the day answering phones and,

110
00:04:38,526 --> 00:04:43,605
and people would come into the office to sign up for the internet, which is weird,

111
00:04:43,615 --> 00:04:44,186
whatever.

112
00:04:44,196 --> 00:04:45,696
-- But anyway,
-- and pay by check

113
00:04:46,183 --> 00:04:47,333
that

114
00:04:47,493 --> 00:04:48,852
yes, that happened a lot.

115
00:04:48,953 --> 00:04:51,782
I don't know if we could even take credit cards at the beginning.

116
00:04:52,653 --> 00:04:54,872
It was like a chunk machine if we did. I'm sure.

117
00:04:55,192 --> 00:04:57,222
But anyway, so what would happen

118
00:04:57,342 --> 00:05:01,053
is we needed support people to be able to create new accounts,

119
00:05:01,233 --> 00:05:05,673
right? And so we need a way for these people. And this is also by the way,

120
00:05:05,812 --> 00:05:07,282
the shell server

121
00:05:07,393 --> 00:05:11,032
was the like the main identity system.

122
00:05:11,393 --> 00:05:11,472
So

123
00:05:12,453 --> 00:05:14,942
if you were going to log in to the ISP,

124
00:05:15,529 --> 00:05:18,089
you needed an account on the shell server with a

125
00:05:18,100 --> 00:05:21,040
password that was probably MD five way back then.

126
00:05:21,489 --> 00:05:25,070
-- It was probably
-- crypt. I don't know. II I think it was MD five.

127
00:05:25,079 --> 00:05:27,769
I think we're in the MD five era when I was doing this.

128
00:05:27,779 --> 00:05:28,359
But anyway,

129
00:05:28,369 --> 00:05:30,100
so obviously we want to support people to be able

130
00:05:30,109 --> 00:05:32,679
to run a command to create a new user for.

131
00:05:32,690 --> 00:05:33,320
And of course,

132
00:05:33,329 --> 00:05:35,570
we asked them what their password was and we'd write it down

133
00:05:35,579 --> 00:05:38,549
on a sheet of paper and then they would type it in.

134
00:05:38,619 --> 00:05:39,089
But

135
00:05:39,239 --> 00:05:40,600
that is something we had to do.

136
00:05:40,609 --> 00:05:43,890
And obviously we don't want all of the support people to have unfettered root

137
00:05:44,307 --> 00:05:45,736
because people like me, for example,

138
00:05:45,747 --> 00:05:48,046
would have definitely broken something if I had that.

139
00:05:48,057 --> 00:05:50,127
So we could type pseudo like, I don't know,

140
00:05:50,136 --> 00:05:53,247
create user dot pl because it was a pearl script, I'm sure.

141
00:05:54,147 --> 00:05:56,747
And, and do his thing, right? And that was the idea.

142
00:05:56,946 --> 00:05:57,816
And so OK,

143
00:05:58,066 --> 00:05:59,427
well, and this is a normal one.

144
00:05:59,986 --> 00:06:03,437
Most unixes have had set U ID for a very long time.

145
00:06:03,446 --> 00:06:06,166
And set U ID allows you to have a file, let's say,

146
00:06:06,177 --> 00:06:09,707
for the sake of argument owned by root or owned by Bob or owned by Kurt.

147
00:06:10,217 --> 00:06:12,707
And you can set U ID or set group idea

148
00:06:12,976 --> 00:06:13,437
and thus

149
00:06:13,553 --> 00:06:16,854
when it executes, it will execute us that user.

150
00:06:16,963 --> 00:06:21,414
And why do we not use that? And instead use something like pseudo.

151
00:06:21,563 --> 00:06:23,563
And the answer is simple because it's terrible

152
00:06:23,783 --> 00:06:25,144
and it's prone to error.

153
00:06:25,213 --> 00:06:28,894
-- It's hard to track and fun fact, you can't do with shell scripts.
-- You

154
00:06:28,903 --> 00:06:29,533
can,

155
00:06:29,794 --> 00:06:32,764
-- you can't set your ID or set group id, shell scripts.
-- Not anymore.

156
00:06:32,773 --> 00:06:33,963
You used to be able to,

157
00:06:34,473 --> 00:06:35,294
you can't anymore.

158
00:06:35,303 --> 00:06:37,884
Bash doesn't let you do that because Bash will yell at

159
00:06:37,894 --> 00:06:41,144
you if you try to execute like shell scripts as root

160
00:06:41,713 --> 00:06:41,783
in

161
00:06:41,903 --> 00:06:42,334
a UD

162
00:06:42,800 --> 00:06:44,260
insecure that we actually banned it.

163
00:06:44,270 --> 00:06:47,121
That's do you know how bad something has to be for the people? No,

164
00:06:47,830 --> 00:06:50,441
-- that's true.
-- How bad it has to be from a security point of view.

165
00:06:50,450 --> 00:06:54,311
-- For it to actually get disabled by default.
-- There's more to the story than just this.

166
00:06:54,321 --> 00:06:58,760
So the thing is pseudo compared to just running a set U ID application,

167
00:06:59,031 --> 00:07:00,811
it cleans up the environment,

168
00:07:00,990 --> 00:07:05,101
it takes care of like some weird tt Y type stuff and makes sure you're,

169
00:07:05,110 --> 00:07:07,920
you're only executing certain things like it does a bunch of

170
00:07:07,930 --> 00:07:11,911
weird operations because the issue being if you just have a set

171
00:07:12,118 --> 00:07:17,708
id binary, let's say that creates users, you can do things like, you know,

172
00:07:17,717 --> 00:07:20,227
change where it's looking for configuration files.

173
00:07:20,238 --> 00:07:21,768
You can depending upon the system,

174
00:07:21,778 --> 00:07:25,627
you can set like the LD library path and that doesn't work any,

175
00:07:25,638 --> 00:07:27,108
it shouldn't work anymore.

176
00:07:27,118 --> 00:07:27,548
But,

177
00:07:28,067 --> 00:07:28,467
but, and,

178
00:07:28,477 --> 00:07:32,157
and so obviously a tool like pseudo is designed to clean up some

179
00:07:32,167 --> 00:07:36,877
of the mess before and after executing a set U ID application essentially,

180
00:07:36,888 --> 00:07:37,268
right?

181
00:07:37,398 --> 00:07:41,187
But that doesn't mean it does a perfect job. There's like tens, well,

182
00:07:41,295 --> 00:07:44,144
more than tens of pseudo vulnerabilities every year

183
00:07:44,154 --> 00:07:46,355
and they range everything from like stupid little

184
00:07:46,364 --> 00:07:50,915
denial of service type things to full on en route now because pseudo has a bug

185
00:07:51,144 --> 00:07:53,875
and, and the attack surface of pseudo is very large.

186
00:07:53,975 --> 00:07:55,554
It is grown

187
00:07:55,665 --> 00:07:58,674
from a simple tool into a bit of a behemoth.

188
00:07:58,684 --> 00:07:58,945
Well,

189
00:07:58,954 --> 00:08:03,114
I remember when the the configuration file was essentially who gets to run pseudo.

190
00:08:03,725 --> 00:08:05,464
And now it's quite a lot more

191
00:08:05,475 --> 00:08:07,864
-- complicated
-- because you can set environment variables.

192
00:08:07,875 --> 00:08:10,424
You can talk about like loading libraries. It does like all this

193
00:08:10,721 --> 00:08:13,682
stuff. It, it's, I mean, it's almost impressive in a way.

194
00:08:13,691 --> 00:08:16,242
But the, the problem with it and the reason

195
00:08:16,582 --> 00:08:20,821
that system D is, is kind of creating their, they're not pseudo, run zero,

196
00:08:20,832 --> 00:08:22,201
which we'll talk about momentarily

197
00:08:22,502 --> 00:08:25,601
is fundamentally pseudo has to cross the boundary from a

198
00:08:25,611 --> 00:08:28,962
regular user to the set user route in this instance.

199
00:08:28,971 --> 00:08:31,242
And anyone who's ever written a

200
00:08:31,421 --> 00:08:35,280
binary that's supposed to change the user id correctly.

201
00:08:35,572 --> 00:08:39,682
-- It is very difficult to do and it is fraught with errors.
-- I'm gonna say it's basically

202
00:08:39,789 --> 00:08:41,768
-- impossible. It's
-- not impossible. It's just really

203
00:08:41,778 --> 00:08:42,008
hard.

204
00:08:42,018 --> 00:08:45,578
It's, I would say it's basically impossible for anything of complexity,

205
00:08:45,588 --> 00:08:48,968
which by definition is probably what you're doing and needing something to

206
00:08:49,098 --> 00:08:51,309
do something as root or whatever now

207
00:08:51,419 --> 00:08:52,629
is because it's complicated.

208
00:08:52,638 --> 00:08:56,268
-- If it was simple, you probably wouldn't even need to do this.
-- Yeah. OK. Sure. Why not?

209
00:08:56,278 --> 00:08:56,508
I mean,

210
00:08:56,518 --> 00:08:59,718
this is there have been lots of vulnerabilities related to things like

211
00:08:59,729 --> 00:09:03,338
this in the past where the issue being when you start changing

212
00:09:03,619 --> 00:09:04,289
like from,

213
00:09:04,299 --> 00:09:08,708
from a user to root or route to a user or whatever you're trying to do if there are

214
00:09:09,036 --> 00:09:10,276
strains imposed on that us.

215
00:09:10,286 --> 00:09:14,375
Like one of my favorite examples is there was a bug some years ago and on Linux,

216
00:09:14,406 --> 00:09:16,916
you tried to switch from root to another user

217
00:09:17,255 --> 00:09:20,875
and this was, I forget what the primary app that even found this was anymore.

218
00:09:20,885 --> 00:09:21,536
It's been so long.

219
00:09:21,546 --> 00:09:25,036
But anyway, if that user was out of some sort of resource,

220
00:09:25,046 --> 00:09:28,546
be it like file descriptors or memory or whatever processes,

221
00:09:28,556 --> 00:09:32,835
and it's not hard to fill up the number of processes you're allowed or

222
00:09:32,846 --> 00:09:36,495
fill up your file descriptors or whatever the set U ID would just fail.

223
00:09:36,515 --> 00:09:39,143
So you, the app, the application was still running his route.

224
00:09:39,153 --> 00:09:44,002
So if you didn't like, check all of these error conditions first, you were still root

225
00:09:44,112 --> 00:09:46,442
and now it's like a, I'm root. Everyone. Look at me

226
00:09:46,872 --> 00:09:51,223
and because that, that transition back and forth is really hard to get right.

227
00:09:51,232 --> 00:09:54,103
And I think that is like the primary thing

228
00:09:54,312 --> 00:09:59,372
from reading this like very long toot thread thing. Leonard put on, on Mastodon.

229
00:09:59,473 --> 00:10:02,672
That seems to be the killer app here. And I, I will agree with that.

230
00:10:02,682 --> 00:10:05,333
Well, and there's a lot of, I hate to use the word simple,

231
00:10:05,343 --> 00:10:07,393
but there's a lot of air quotes, simple

232
00:10:07,530 --> 00:10:08,280
things,

233
00:10:08,400 --> 00:10:09,270
but like

234
00:10:09,520 --> 00:10:13,390
software starting up has to do that sort of a little bit privileged because

235
00:10:13,400 --> 00:10:17,150
you don't want the facility that it's using to be open to everybody.

236
00:10:17,159 --> 00:10:20,789
But conversely, you don't want the application to run with a super high privilege.

237
00:10:20,859 --> 00:10:22,429
But for example, oh, perfect example,

238
00:10:22,619 --> 00:10:23,210
you want

239
00:10:23,369 --> 00:10:27,469
Apache to be able to log and depending on how you're doing, logging,

240
00:10:27,479 --> 00:10:29,909
maybe you're logging into the file system so you can just use file permissions,

241
00:10:29,919 --> 00:10:30,770
not a big deal,

242
00:10:30,909 --> 00:10:35,320
but, well, you also want maybe some enhanced logging through, you know,

243
00:10:35,330 --> 00:10:36,539
system D or whatever

244
00:10:36,776 --> 00:10:40,937
and you don't necessarily want Apache to have to run with a extra privilege.

245
00:10:40,947 --> 00:10:43,796
So on start up having that ability to kind

246
00:10:43,807 --> 00:10:46,596
of give it that little extra bit of privilege momentarily

247
00:10:46,776 --> 00:10:49,396
for it to do something that was very common. Right?

248
00:10:49,406 --> 00:10:51,046
That's, that's absolutely what you want. Oh, ok.

249
00:10:51,057 --> 00:10:54,137
You know, even better example, simpler example, when Apache starts,

250
00:10:54,146 --> 00:10:56,086
you want it to be able to read its key files

251
00:10:56,327 --> 00:10:59,197
and when it restarts, you want it to be able to read its key files into memory.

252
00:10:59,206 --> 00:10:59,887
But beyond that,

253
00:11:00,077 --> 00:11:01,796
it actually shouldn't be reading them.

254
00:11:01,807 --> 00:11:02,117
Well,

255
00:11:02,127 --> 00:11:04,677
and not only that you want an application like Apache

256
00:11:04,687 --> 00:11:07,374
to remove as many privileges is possible while it's running

257
00:11:07,734 --> 00:11:09,393
because it's gonna get attacked and compromised.

258
00:11:09,814 --> 00:11:11,744
-- OK.
-- So let's talk about system D now.

259
00:11:11,754 --> 00:11:14,924
So system D which has become an insane behemoth of its own. Right?

260
00:11:14,934 --> 00:11:16,943
Well, it has to because it, it has to,

261
00:11:17,114 --> 00:11:20,033
it has no, it has to do everything. It's like Excel where

262
00:11:20,133 --> 00:11:23,004
-- it does what I need.
-- But I'm not getting into this argument.

263
00:11:23,013 --> 00:11:24,963
It does a lot, maybe too much anyway.

264
00:11:25,153 --> 00:11:25,684
So

265
00:11:25,893 --> 00:11:27,484
there is an idea in it.

266
00:11:27,494 --> 00:11:30,703
It's, I don't know if it's out now, it'll probably be out when this podcast comes out.

267
00:11:30,713 --> 00:11:35,153
But the, in the new version of system D version 256 it is going to have an application

268
00:11:35,380 --> 00:11:35,661
run

269
00:11:35,801 --> 00:11:36,120
zero.

270
00:11:36,130 --> 00:11:38,210
And the idea behind run zero is it's not,

271
00:11:38,221 --> 00:11:40,491
it doesn't work like pseudo where you run a command,

272
00:11:40,500 --> 00:11:43,330
it does a transition in privilege to

273
00:11:43,580 --> 00:11:45,601
route and then maybe transitions to

274
00:11:45,611 --> 00:11:47,411
something else depending upon what's happening.

275
00:11:47,421 --> 00:11:50,611
This is this functionality they're using for run zero.

276
00:11:50,620 --> 00:11:53,450
It already exists in system D, it's called system D run.

277
00:11:53,630 --> 00:11:54,091
And

278
00:11:54,260 --> 00:11:55,570
the idea being

279
00:11:55,710 --> 00:11:56,351
that

280
00:11:56,500 --> 00:11:59,570
instead of transitioning from like a normal user

281
00:11:59,580 --> 00:12:01,221
to root and then maybe somewhere else,

282
00:12:01,231 --> 00:12:02,281
whatever, who knows,

283
00:12:02,440 --> 00:12:04,411
you run this, run zero command

284
00:12:04,669 --> 00:12:07,330
and it basically tells system D I want you to

285
00:12:07,739 --> 00:12:07,950
for

286
00:12:08,090 --> 00:12:09,400
a process as root

287
00:12:09,590 --> 00:12:10,929
and do this stuff.

288
00:12:11,030 --> 00:12:13,500
Which kind of makes sense. There's no like transition.

289
00:12:13,510 --> 00:12:17,010
And then what happens is there's plumbing between the process running,

290
00:12:17,219 --> 00:12:19,450
it sets up a pseudo TT Y it sounds like and,

291
00:12:19,460 --> 00:12:24,010
and just pipes everything to your real TT Y and then things happen as root.

292
00:12:24,159 --> 00:12:26,969
So like your, the, the, the screen in front of you,

293
00:12:26,979 --> 00:12:30,250
the process you're inside of it has no elevated privileges.

294
00:12:30,260 --> 00:12:33,130
It's all happening magically behind system D the,

295
00:12:33,219 --> 00:12:35,880
with the idea being you can't like it.

296
00:12:35,890 --> 00:12:37,280
Let's say there is a bug

297
00:12:37,380 --> 00:12:41,030
and somehow that remote process I could magically become root.

298
00:12:41,039 --> 00:12:43,320
You don't, you wouldn't be able to keep that in theory.

299
00:12:43,330 --> 00:12:45,960
I mean, I'm sure there's gonna be lots of edge cases and bugs.

300
00:12:45,969 --> 00:12:48,890
It makes it a lot more hard in the sense of if I find a

301
00:12:49,109 --> 00:12:53,919
bug in the software, I have to hand it a piece of work

302
00:12:54,059 --> 00:12:57,400
that triggers that bug versus being able to interact with it.

303
00:12:57,409 --> 00:13:01,679
And then also, hopefully, once it's done running, it's done running, which is not

304
00:13:02,000 --> 00:13:03,130
with the traditional process,

305
00:13:03,500 --> 00:13:05,719
right? The other thing is so OK. And, and here's a and

306
00:13:05,840 --> 00:13:09,150
this just to knock this out of the way, why don't we use Se Linux

307
00:13:09,260 --> 00:13:11,669
to give the thing the permission, it needs to do the thing.

308
00:13:11,760 --> 00:13:15,469
-- Se Linux doesn't grant permissions. Se Linux takes them away.
-- Exactly.

309
00:13:15,599 --> 00:13:17,609
And also it's just too damn complicated

310
00:13:17,969 --> 00:13:22,020
-- and it may or may not be available on the system you're dealing with
-- it would, I don't

311
00:13:22,150 --> 00:13:23,510
know enough about Se Linux

312
00:13:23,669 --> 00:13:24,580
to say

313
00:13:25,020 --> 00:13:26,719
you'd have to switch the contact.

314
00:13:26,729 --> 00:13:29,989
-- It would be very complicated anyway, I'm not going to think about this.
-- Exactly. So

315
00:13:30,320 --> 00:13:32,609
honestly, at this point system D is everywhere.

316
00:13:32,690 --> 00:13:34,460
Se Linux is pretty much everywhere too.

317
00:13:34,570 --> 00:13:36,690
But to be brutally honest,

318
00:13:36,700 --> 00:13:39,159
asking people to like write their applications

319
00:13:39,169 --> 00:13:40,940
to use the system D functionality is a

320
00:13:40,950 --> 00:13:45,710
lot more likely to happen and succeed than asking people to do Se Linux policy.

321
00:13:45,719 --> 00:13:46,669
You in theory,

322
00:13:46,679 --> 00:13:48,659
you shouldn't have to change anything about your

323
00:13:48,669 --> 00:13:51,030
application to use something like run zero.

324
00:13:51,039 --> 00:13:53,700
It should just theoretically work and do the right thing.

325
00:13:53,979 --> 00:13:54,700
Well, no, but don't you,

326
00:13:54,710 --> 00:13:57,979
you'd have to change your application to take advantage of it, right?

327
00:13:57,989 --> 00:13:58,780
Like it's not gonna

328
00:13:59,020 --> 00:14:01,840
like when Apache tries to read its key, it's not going to use run zero

329
00:14:02,010 --> 00:14:04,750
-- magically, but
-- that's not its use case either.

330
00:14:04,929 --> 00:14:08,840
This is for users trying to run pseudo this isn't for

331
00:14:08,849 --> 00:14:12,469
applications starting up with elevated privileges and then dropping them.

332
00:14:12,900 --> 00:14:16,960
Oh I thought it was more also aimed at the applications, not just the users, I mean,

333
00:14:16,969 --> 00:14:21,140
the se uh system D already does that basically where it can do some weird stuff,

334
00:14:21,150 --> 00:14:23,130
but this is strictly user interaction

335
00:14:23,625 --> 00:14:25,406
is what I'm talking about.

336
00:14:26,205 --> 00:14:28,315
And then the other thing they're doing that

337
00:14:28,325 --> 00:14:29,966
is freaking brilliant that I don't know why.

338
00:14:29,976 --> 00:14:34,245
And no one has done this before. Is it changes your terminal color to red

339
00:14:34,406 --> 00:14:37,325
while you are running as an elevated user?

340
00:14:37,455 --> 00:14:41,375
-- I love
-- that. I'm well, number one red, green color blindness is a thing,

341
00:14:42,036 --> 00:14:45,166
but also depending on what your terminal settings are, colors may not display.

342
00:14:45,236 --> 00:14:48,075
So, but yes, it's a cute thing to have.

343
00:14:48,231 --> 00:14:49,221
Personally

344
00:14:49,471 --> 00:14:50,361
see what's interesting to me.

345
00:14:50,372 --> 00:14:51,252
I'm always kind of,

346
00:14:51,262 --> 00:14:54,171
there's this sort of thing in Japanese culture where here's a tool,

347
00:14:54,182 --> 00:14:56,562
this tool is very sharp, don't hurt yourself with it.

348
00:14:56,981 --> 00:14:59,572
And you're expected to master the tool and not hurt yourself with it.

349
00:14:59,581 --> 00:15:02,791
But there's also a very good argument to be made for something like the um the s

350
00:15:02,901 --> 00:15:06,531
stop, you know that thing where it detects uh moisture in what you're cutting

351
00:15:06,742 --> 00:15:09,252
and fingers are moist like hot dogs.

352
00:15:09,291 --> 00:15:12,692
And then it basically kicks an aluminum block into the saw blade to stop it

353
00:15:13,340 --> 00:15:15,010
so that you don't have to throw your fingers off.

354
00:15:15,070 --> 00:15:17,599
The downside being is you can't cut pressure treated lumber and a

355
00:15:17,609 --> 00:15:20,200
bunch of like wet wood and stuff without destroying your saw blades

356
00:15:20,580 --> 00:15:21,640
because it'll fall trigger.

357
00:15:21,729 --> 00:15:22,119
But,

358
00:15:22,130 --> 00:15:24,010
but when you look at the numbers of how

359
00:15:24,020 --> 00:15:26,599
much money we spend on health care for people and

360
00:15:26,729 --> 00:15:28,010
table saws,

361
00:15:28,140 --> 00:15:30,619
it would actually be cheaper to just buy everybody.

362
00:15:30,630 --> 00:15:34,619
-- One of these new fancy table saws
-- probably look, here's, here's my take on that.

363
00:15:34,630 --> 00:15:36,630
You can make the argument that you should be

364
00:15:36,640 --> 00:15:39,179
some trained professional who is we're gonna make mistakes,

365
00:15:39,190 --> 00:15:40,780
but we do, we're people.

366
00:15:40,789 --> 00:15:43,500
Well, what I was gonna get to is actually, as I was going to say,

367
00:15:43,510 --> 00:15:47,429
changing the color is not enough, you need to like have it like

368
00:15:47,719 --> 00:15:47,729
a

369
00:15:47,880 --> 00:15:50,530
banner but a big banner that's flashing

370
00:15:50,989 --> 00:15:53,830
-- while the command is running. Like
-- I'm fine with that too.

371
00:15:53,840 --> 00:15:57,059
Like I would certainly not complain if there is a giant flashing banner.

372
00:15:57,190 --> 00:15:59,520
And there's also, here's something I love is

373
00:15:59,750 --> 00:16:03,020
when you make administrative sort of,

374
00:16:03,330 --> 00:16:05,049
I don't want to say abuses because it's not an abuse.

375
00:16:05,059 --> 00:16:06,780
If you make that kind of administrative work

376
00:16:06,919 --> 00:16:07,750
annoying,

377
00:16:07,940 --> 00:16:10,049
there's more of an incentive to fix it.

378
00:16:10,179 --> 00:16:10,710
-- I
-- mean,

379
00:16:10,719 --> 00:16:15,030
-- I maybe
-- sure and to maybe actually architect the things so

380
00:16:15,039 --> 00:16:17,869
that does it properly or to change your workflow or something.

381
00:16:17,940 --> 00:16:20,010
-- Ok.
-- No, no, I think you just made the point, right?

382
00:16:20,020 --> 00:16:21,760
Is generally speaking,

383
00:16:21,770 --> 00:16:24,929
I think most systems now are running in a manner

384
00:16:24,940 --> 00:16:27,229
that we're not having to just like I remember becoming

385
00:16:27,489 --> 00:16:29,520
and just being rude all day to do work

386
00:16:29,530 --> 00:16:32,979
because it was easier than running pseudo 700,000 times,

387
00:16:32,989 --> 00:16:33,280
right?

388
00:16:33,390 --> 00:16:37,000
100%. I would just pseudo su space dash at the beginning of the day

389
00:16:37,419 --> 00:16:38,900
and like be careful.

390
00:16:39,010 --> 00:16:41,640
I think it is more common for systems to be

391
00:16:41,650 --> 00:16:44,750
architected in a way that you have tools like,

392
00:16:44,760 --> 00:16:49,000
you know, Sheffer puppet or answerable or you're using Kubernetes or whatever

393
00:16:49,330 --> 00:16:51,270
and you're not living as root.

394
00:16:51,580 --> 00:16:54,700
I think when you need to become root now,

395
00:16:54,869 --> 00:16:57,119
it is an uncommon event

396
00:16:57,390 --> 00:17:00,409
and when you're not doing something all the time,

397
00:17:00,840 --> 00:17:05,770
your propensity for failure, I think goes up substantially.

398
00:17:06,560 --> 00:17:08,449
And so I think that's what makes something

399
00:17:08,459 --> 00:17:11,030
like putting big warnings and flashing lights and,

400
00:17:11,040 --> 00:17:15,699
and sort of things that I think is what is really cool about such a feature.

401
00:17:15,709 --> 00:17:17,770
Because the other thing I think when I think

402
00:17:17,780 --> 00:17:21,713
of this is that the systems gotten more reliable,

403
00:17:21,811 --> 00:17:23,801
they just, they, they're better behaved.

404
00:17:23,811 --> 00:17:25,902
They don't need as much like you're not,

405
00:17:25,983 --> 00:17:29,483
you're not running a route to edit your X config file by hand anymore.

406
00:17:29,493 --> 00:17:30,322
Thank goodness

407
00:17:31,453 --> 00:17:33,953
that is stuff I used to have to do all the time,

408
00:17:34,093 --> 00:17:35,363
the good old days.

409
00:17:35,743 --> 00:17:37,272
And then that's one reason I ran Sousa for

410
00:17:37,282 --> 00:17:40,282
a year because Sousa had the X 86 config thing

411
00:17:40,473 --> 00:17:41,642
that just worked and it was

412
00:17:41,776 --> 00:17:45,245
-- magic.
-- I know they, they did a really nice job. Ok.

413
00:17:45,286 --> 00:17:48,166
Now, here's the other side of this coin though. Right.

414
00:17:48,176 --> 00:17:50,105
It's easy to gush over this new tool that

415
00:17:50,115 --> 00:17:52,395
we've never run that we just read about online.

416
00:17:52,406 --> 00:17:55,556
And it sounds like a neat idea. And, yeah, pseudo has its own problems.

417
00:17:55,566 --> 00:17:57,036
There is, I think a couple of pieces of this.

418
00:17:57,046 --> 00:18:00,076
Number one, there is an effort to rewrite pseudo in rust,

419
00:18:00,255 --> 00:18:03,755
but it amuses me because there are vulnerabilities against

420
00:18:03,906 --> 00:18:03,926
it

421
00:18:04,959 --> 00:18:08,020
even though it's rust, which rust fixes memory problems,

422
00:18:08,030 --> 00:18:09,280
it doesn't fix logic problems.

423
00:18:09,290 --> 00:18:11,900
And most of these pseudo bugs are logic errors now, right?

424
00:18:11,910 --> 00:18:16,319
Most of them are not memory problems now. System D is a behemoth

425
00:18:16,709 --> 00:18:19,790
the attack surfaces. System D is gigantic.

426
00:18:19,800 --> 00:18:23,369
I know they're going to compartmentalize this is a whole bunch and all that.

427
00:18:23,380 --> 00:18:27,989
But the fact remains that system D is gigantic. It is bigger than

428
00:18:28,369 --> 00:18:30,599
pseudo has plenty of problems and it has

429
00:18:30,609 --> 00:18:33,589
way more attack surface than it probably should.

430
00:18:33,599 --> 00:18:38,790
-- But I have a suspicion system D has an even larger attack surface. Yeah.
-- Absolutely.

431
00:18:38,800 --> 00:18:42,020
And it does a lot more like it's, it's, well, it's running in the background from

432
00:18:42,170 --> 00:18:43,349
it's basically in it now,

433
00:18:43,489 --> 00:18:44,260
right? Like it's

434
00:18:44,589 --> 00:18:45,069
Yeah,

435
00:18:45,239 --> 00:18:46,010
and, and look le

436
00:18:46,239 --> 00:18:49,270
or hated system D is everywhere. And so we have to deal with it.

437
00:18:49,280 --> 00:18:52,119
Well, and what's interesting to me too is like we talk for example,

438
00:18:52,199 --> 00:18:54,699
but you just mentioned stuff like chef and

439
00:18:54,910 --> 00:18:56,310
Ants, Bull and puppet

440
00:18:56,479 --> 00:18:59,140
and a lot of people don't even know what that is, let alone use it.

441
00:18:59,239 --> 00:19:01,550
Because for example, I have a true scale NAS

442
00:19:01,689 --> 00:19:05,030
Box at home. I'm not going to set up automation to manage it.

443
00:19:05,040 --> 00:19:08,099
I'm just gonna go to the web interface once in a while and click update

444
00:19:08,229 --> 00:19:11,180
and same with the three V MS running on it, like the three V MS running on it.

445
00:19:11,189 --> 00:19:12,430
I'm not going to set up automation.

446
00:19:12,439 --> 00:19:16,140
They're just a bunch of long term support V MS running,

447
00:19:16,390 --> 00:19:17,689
you know, my torrent client,

448
00:19:17,699 --> 00:19:21,010
something to remember is there's a lot of sort of small and medium business or kind

449
00:19:21,020 --> 00:19:24,920
-- of one offs that are not part of a big healthy managed fleet
-- for sure,

450
00:19:24,930 --> 00:19:25,530
for sure.

451
00:19:25,540 --> 00:19:29,349
I mean, I have a bunch of V MS running in my basement that about once a month, I'm like,

452
00:19:29,469 --> 00:19:32,560
I should make answerable work with these and then I start doing and I'm like, hey,

453
00:19:32,569 --> 00:19:36,010
I'm too lazy, I'll just ssh in and update them and

454
00:19:36,280 --> 00:19:39,760
-- then I run pseudo or
-- sue like in cloud terms.

455
00:19:39,770 --> 00:19:41,660
I do this all the time where I back up a lot of our

456
00:19:41,670 --> 00:19:44,810
cloud services and some of them are fully automated because it was really easy.

457
00:19:44,819 --> 00:19:45,650
Like our cloud clerk,

458
00:19:45,920 --> 00:19:46,880
I just have a script that

459
00:19:47,050 --> 00:19:49,410
hits the API gets all the domain names,

460
00:19:49,420 --> 00:19:51,369
then gets all like just grinds through and gets

461
00:19:51,380 --> 00:19:53,290
everything took like an hour to write the script.

462
00:19:53,300 --> 00:19:54,010
So worth it.

463
00:19:54,119 --> 00:19:56,030
I have other systems where

464
00:19:56,420 --> 00:20:00,089
to automate it would take 10 or 20 hours of learning how to use the

465
00:20:00,099 --> 00:20:02,900
API and getting it to work and then I'd still have to monitor it.

466
00:20:03,219 --> 00:20:06,130
So I might as well just do it manually once every two weeks for five minutes.

467
00:20:06,660 --> 00:20:08,569
And so that's the other thing is to keep in mind is,

468
00:20:08,579 --> 00:20:11,050
is asking people to do things air quotes

469
00:20:11,060 --> 00:20:13,530
correctly and automate it and make it robust.

470
00:20:13,589 --> 00:20:14,810
There's that famous X

471
00:20:15,109 --> 00:20:16,229
uh what is it XK,

472
00:20:16,630 --> 00:20:18,160
I'm spacing out XK CD

473
00:20:18,500 --> 00:20:19,000
chart.

474
00:20:19,010 --> 00:20:20,579
You know where it shows like if you do this like 10

475
00:20:20,589 --> 00:20:22,979
times a day and you say five minutes by automating it,

476
00:20:23,300 --> 00:20:27,609
you, you can spend this much time automating it, it breaks even or whatever, right?

477
00:20:28,219 --> 00:20:32,569
And a lot of people forget about, but a lot of this stuff is actually quite shock.

478
00:20:32,579 --> 00:20:35,800
Like it's easy to automate in the sense of it'll probably run

479
00:20:36,199 --> 00:20:37,119
most of the time

480
00:20:37,260 --> 00:20:42,640
but to actually automate something such that it is like five or six nines reliable

481
00:20:42,790 --> 00:20:44,290
for sure is expensive.

482
00:20:44,689 --> 00:20:47,589
Yeah. And sometimes it's easier just to log in and run pseudo

483
00:20:47,770 --> 00:20:54,540
-- app to update or app, get update.
-- I have an amusing anecdote exactly about this. So I

484
00:20:54,699 --> 00:20:58,189
query the ecosystems data now daily,

485
00:20:58,199 --> 00:21:00,910
which I was doing a lot of work by hand and it was running

486
00:21:01,069 --> 00:21:03,949
every now and again and it would take a long time

487
00:21:04,270 --> 00:21:06,530
and the scripts would fail constantly.

488
00:21:06,780 --> 00:21:10,930
And it took me, I bet more than 10 hours to, like,

489
00:21:11,069 --> 00:21:15,380
I basically just rewrote everything because it was, it wasn't worth trying to save.

490
00:21:15,719 --> 00:21:16,449
Yeah, that's,

491
00:21:16,579 --> 00:21:17,449
that's something I've noticed.

492
00:21:17,459 --> 00:21:20,530
If you get an automation solution that's like 80 or 90% of the way there,

493
00:21:20,660 --> 00:21:24,589
it's actually usually faster just to rebuild it from scratch than to try and fix it.

494
00:21:24,599 --> 00:21:26,630
Yeah. And I made it a little more, we'll say

495
00:21:26,819 --> 00:21:29,699
it looks like a real programmer wrote it now as opposed to what it used to be.

496
00:21:29,709 --> 00:21:34,989
But anyway, the point is like, take making it will say I'll, I'll say 90% robust.

497
00:21:35,000 --> 00:21:37,020
There's still some issues I run into now and again.

498
00:21:37,030 --> 00:21:39,339
But like it was an enormous amount of work and

499
00:21:39,349 --> 00:21:41,800
it's definitely one of those situations where it's like,

500
00:21:41,810 --> 00:21:44,280
OK, this is failing every other day.

501
00:21:44,290 --> 00:21:45,250
It's taking up, you know,

502
00:21:45,260 --> 00:21:48,020
10 plus minutes of my time and I had to clean up a mess because I usually

503
00:21:48,030 --> 00:21:52,229
ended up with a process that I didn't die because one of the threads got stuck.

504
00:21:52,390 --> 00:21:54,930
And so I had all this stuff eating up all my memory

505
00:21:54,939 --> 00:21:57,030
and I actually figured it all out when I was like,

506
00:21:57,040 --> 00:21:58,459
where did all my ra m go?

507
00:21:58,469 --> 00:21:58,859
Like

508
00:21:58,969 --> 00:22:01,510
this machine's out of memory and it shouldn't be.

509
00:22:01,689 --> 00:22:05,650
It's like, oh, I have 30 processes running in the background each eating, you know,

510
00:22:05,660 --> 00:22:08,109
20% of the memory that's what happened here.

511
00:22:08,119 --> 00:22:09,910
And so anyway, you get the idea though. Right.

512
00:22:09,920 --> 00:22:13,949
It is easy to talk about automation and is magic and easy. But it's not, it's hard.

513
00:22:13,959 --> 00:22:15,420
-- I get it.
-- Well, and it's funny because

514
00:22:15,550 --> 00:22:19,140
this is the, the, the flip coin of, of security where

515
00:22:19,640 --> 00:22:23,380
in security you have to write it so it's secure but you don't get to

516
00:22:23,510 --> 00:22:27,979
find out what the attacker does until they do it and then they often do something new.

517
00:22:28,310 --> 00:22:31,300
Now there's another piece of this and this is kind of where I want to end.

518
00:22:31,310 --> 00:22:33,180
I want to land this plane on this last idea.

519
00:22:33,709 --> 00:22:34,300
So

520
00:22:34,920 --> 00:22:39,520
we have known for a long time what the drawbacks and difficulties pseudo has

521
00:22:39,770 --> 00:22:39,810
it.

522
00:22:39,819 --> 00:22:42,869
It's just it, it's in the security universe like we get it, it,

523
00:22:42,880 --> 00:22:46,390
cleaning up environment variables, cleaning up library paths,

524
00:22:46,400 --> 00:22:48,060
keeping track of this kind of stuff.

525
00:22:48,069 --> 00:22:51,140
What is going on? Maybe we want to let certain environment variables through.

526
00:22:51,150 --> 00:22:52,979
How do we configure those? It's a lot of,

527
00:22:53,199 --> 00:22:54,800
it's a pain in the butt now.

528
00:22:54,810 --> 00:22:58,349
It is also likely that we can never fix pseudo

529
00:22:58,359 --> 00:23:01,349
because of the just legacy it carries with it.

530
00:23:01,425 --> 00:23:05,244
Well, it has to maintain compa like you can't break pseudo.

531
00:23:05,255 --> 00:23:07,885
-- If you break pseudo,
-- it doesn't have to,

532
00:23:08,084 --> 00:23:10,925
they just don't want to, I want to make that clear.

533
00:23:10,935 --> 00:23:12,444
This comes up all the time where it's like, oh,

534
00:23:12,454 --> 00:23:14,204
we can't break backwards compatibility,

535
00:23:14,314 --> 00:23:19,755
you can do whatever you want, you decided not to break backwards compatibility.

536
00:23:19,765 --> 00:23:24,584
But that now creates future risk based on past decisions.

537
00:23:24,694 --> 00:23:29,260
The challenge though is this is, I always kind of come back the Hippocratic Oath of,

538
00:23:29,270 --> 00:23:32,469
there's a lot of systems running pseudo that do kind of get updates.

539
00:23:32,479 --> 00:23:36,119
But if you break pseudo for them, they won't get pseudo updates anymore.

540
00:23:36,150 --> 00:23:38,900
Maybe, I mean, that's a plausible argument

541
00:23:39,109 --> 00:23:40,660
and, and part of me is kind of like, well,

542
00:23:40,670 --> 00:23:43,449
maybe too bad in those companies need to stump up some money

543
00:23:43,459 --> 00:23:46,390
to manage and maintain a fork of pseudo that they like.

544
00:23:46,500 --> 00:23:49,060
-- But we all know that they're not going to,
-- here's the thing.

545
00:23:49,069 --> 00:23:54,579
System D is an opportunity to just change the way we think about

546
00:23:54,765 --> 00:23:56,104
and do all of this stuff,

547
00:23:56,285 --> 00:23:59,155
right? I think that Greenfield attitude

548
00:23:59,285 --> 00:24:01,314
can be valuable at certain times. Not always.

549
00:24:01,324 --> 00:24:03,734
I'm not saying we should rewrite everything all the time.

550
00:24:03,744 --> 00:24:04,135
And this is,

551
00:24:04,145 --> 00:24:08,635
I think an example of where like pseudo Rust will probably not catch on

552
00:24:08,645 --> 00:24:15,155
because it's trying to mimic an already flawed system versus a new paradigm.

553
00:24:15,275 --> 00:24:17,535
That means we can make new rules.

554
00:24:17,545 --> 00:24:20,635
Well, the challenge always is how do you make something that is

555
00:24:21,270 --> 00:24:25,130
essentially identical in operation and functionality to the existing thing and

556
00:24:25,140 --> 00:24:27,780
yet somehow better enough that people want to switch to it.

557
00:24:27,859 --> 00:24:28,719
You can't,

558
00:24:28,859 --> 00:24:30,770
you have to create a new thing.

559
00:24:30,900 --> 00:24:35,689
The other advantage system D has is it's basically been shoved on all our throats.

560
00:24:35,699 --> 00:24:40,579
So we don't have a decision like we're going to get this, whether we want it or not.

561
00:24:40,589 --> 00:24:43,900
And I love, like, part of me wants to make somebody go get like an old,

562
00:24:43,910 --> 00:24:47,810
an old enough version of Linux that has in it scripts and like, make them do something

563
00:24:48,194 --> 00:24:51,944
no difficult. And it's like, see this is why system D exists.

564
00:24:51,954 --> 00:24:54,545
System five and knit was terrible.

565
00:24:54,555 --> 00:24:57,545
Well, like, I hate the binary logging in system D in the queering,

566
00:24:57,755 --> 00:25:01,625
but it's so much like trying to get your in it scripts to log

567
00:25:02,114 --> 00:25:04,805
properly. Like, no, they failed. They stopped logging.

568
00:25:04,814 --> 00:25:08,185
That's what I and I can't figure it out because the in it script itself failed.

569
00:25:08,194 --> 00:25:09,625
And now no one knows why,

570
00:25:09,974 --> 00:25:10,295
you know

571
00:25:10,405 --> 00:25:14,405
-- magic.
-- I got like, I literally would sit there rebooting the computer watching it

572
00:25:15,000 --> 00:25:18,349
-- and like putting print statements in my in its to like, see,
-- that's right.

573
00:25:18,359 --> 00:25:20,939
-- This is not the world you want to live in people.
-- It is.

574
00:25:20,949 --> 00:25:23,209
That's one of the things that amuses me is

575
00:25:23,410 --> 00:25:26,709
it is very easy for some of us to look back at the past and be like, oh,

576
00:25:26,719 --> 00:25:28,109
it was so much easier back then

577
00:25:28,359 --> 00:25:30,099
and certain things were easier,

578
00:25:30,229 --> 00:25:32,140
but most things were terrible.

579
00:25:32,660 --> 00:25:35,699
Well, but it was easier in the sense of like, oh, I just make a fire,

580
00:25:35,709 --> 00:25:37,339
-- which was
-- a shell script.

581
00:25:37,349 --> 00:25:39,880
But no, like microwaves are way better than fire.

582
00:25:40,300 --> 00:25:40,699
-- I
-- mean,

583
00:25:40,709 --> 00:25:43,089
-- it depends what we're making for
-- purposes of

584
00:25:43,099 --> 00:25:45,540
-- safety and getting your food
-- hot heating water.

585
00:25:45,589 --> 00:25:47,949
Well, I, my electric kettle is the best, but that's another story

586
00:25:48,390 --> 00:25:48,930
anyway.

587
00:25:48,939 --> 00:25:49,880
So I think,

588
00:25:49,890 --> 00:25:52,229
I think what's most interesting to me is there's a

589
00:25:52,239 --> 00:25:54,890
vocal minority that cares very much about this stuff.

590
00:25:54,959 --> 00:25:59,089
But I feel like the vast majority of people really and by vast majority of people,

591
00:25:59,099 --> 00:26:01,569
I don't even mean the vast majority of like regular people.

592
00:26:01,579 --> 00:26:02,619
I mean, the vast majority of like

593
00:26:03,069 --> 00:26:03,390
sins

594
00:26:03,619 --> 00:26:05,969
really don't care as long as it kind of works

595
00:26:05,979 --> 00:26:08,010
and isn't too much of a steep learning curve.

596
00:26:08,020 --> 00:26:10,689
They'll use it just like they switch to system D

597
00:26:11,229 --> 00:26:12,609
not by choice.

598
00:26:13,400 --> 00:26:13,699
Now,

599
00:26:13,709 --> 00:26:17,380
here's the other piece of this that Leonard talks about in his thread is he

600
00:26:17,390 --> 00:26:21,170
wants a world with no set U ID applications on a system ever again.

601
00:26:21,400 --> 00:26:24,180
Yeah, I'm cool with that. I'm, I'm fine with that. I mean, I remember

602
00:26:24,430 --> 00:26:27,729
when I was at elastic, there was some bug in like pseudo

603
00:26:28,150 --> 00:26:32,260
and we took it off all of our, our like container images running in the cloud

604
00:26:32,540 --> 00:26:35,219
and then we were like, wait a minute, what about all this other set U ID stuff?

605
00:26:35,229 --> 00:26:37,089
Do we need any of that? We looked at it and we're like,

606
00:26:37,229 --> 00:26:38,079
no, we don't.

607
00:26:38,229 --> 00:26:40,189
Let's let's get rid of them as long as we're in

608
00:26:40,199 --> 00:26:43,530
-- here
-- back in 98 in the Linux Administrative Security guide.

609
00:26:43,540 --> 00:26:47,020
That's one of the things I talked about was auditing your system for set U ID binaries

610
00:26:47,170 --> 00:26:50,979
and removing them and like mounting temp with no set U ID.

611
00:26:50,989 --> 00:26:53,959
And you know, all these others like mounting slash home with no set U ID.

612
00:26:53,969 --> 00:26:56,689
-- So here's
-- the thing without a system to

613
00:26:57,026 --> 00:26:58,995
execute things in an elevated manner.

614
00:26:59,176 --> 00:27:02,826
What do you, I guess you could ssh to local host and log in his root.

615
00:27:02,836 --> 00:27:04,845
But that creates other problems, I think.

616
00:27:04,995 --> 00:27:05,276
Well,

617
00:27:05,286 --> 00:27:08,125
there were a lot of set U ID binaries people could live without because there was,

618
00:27:08,135 --> 00:27:10,965
there used to be a lot of set U ID binaries,

619
00:27:11,576 --> 00:27:11,875
lots

620
00:27:12,046 --> 00:27:12,885
of weird stuff.

621
00:27:12,895 --> 00:27:16,125
But most people, like when I, when I started auditing for it, I was like,

622
00:27:16,135 --> 00:27:17,286
what is this stuff like?

623
00:27:17,296 --> 00:27:19,245
I don't even know but it comes installed by default.

624
00:27:19,255 --> 00:27:21,465
You know what my favorite that always just like annoyed me

625
00:27:21,511 --> 00:27:23,171
to death was I don't know if they still do it,

626
00:27:23,182 --> 00:27:23,411
but

627
00:27:23,572 --> 00:27:27,651
Debian used to install other games with the set G ID for games so it

628
00:27:27,661 --> 00:27:30,552
could write like high score files and stuff and it like it was just,

629
00:27:30,562 --> 00:27:32,491
it graded on my mind.

630
00:27:32,572 --> 00:27:36,421
-- Like there's got to be a better way to do this
-- shared high score files.

631
00:27:36,432 --> 00:27:38,692
-- Perfect example.
-- Yep. Yep. I remember.

632
00:27:38,702 --> 00:27:42,552
Well, I suppose you don't want people to edit them by hand. So anyway.

633
00:27:42,621 --> 00:27:45,842
-- Well, no, because then they cheat and get the high score.
-- Obviously,

634
00:27:46,609 --> 00:27:49,180
you know what I love is just like the dumb stuff where it's

635
00:27:49,189 --> 00:27:51,540
like what I want to change the system time and I get that,

636
00:27:51,550 --> 00:27:53,010
that's a sensitive thing, potentially,

637
00:27:53,020 --> 00:27:55,219
but it's my workstation and I have physical control of it.

638
00:27:55,229 --> 00:27:56,760
So why are you asking me for my root password?

639
00:27:56,770 --> 00:27:59,339
Like even Lenis Torvalds, you know, fetched about this,

640
00:27:59,349 --> 00:28:01,699
like 10 or 20 years ago where, remember he was like,

641
00:28:01,709 --> 00:28:04,060
trying to set the time on his kid's computer and he's like,

642
00:28:04,069 --> 00:28:06,500
why do I need the root password to reset the clock?

643
00:28:06,750 --> 00:28:09,819
And I just, I feel like one thing I always wanted was like,

644
00:28:09,829 --> 00:28:12,260
I want like a workstation mode where it's like, just

645
00:28:12,500 --> 00:28:13,739
let's like,

646
00:28:13,826 --> 00:28:16,206
like if I'm locally logged in and I'm the user just

647
00:28:16,215 --> 00:28:18,885
let me do whatever the heck I want because let's stop pretending

648
00:28:19,056 --> 00:28:20,485
they work pretty well like that.

649
00:28:20,495 --> 00:28:22,965
Now, I think if you use a modern Linux distribution,

650
00:28:22,975 --> 00:28:25,046
it's nothing like it used to be in the old days.

651
00:28:25,056 --> 00:28:25,286
It's

652
00:28:25,495 --> 00:28:25,625
not

653
00:28:25,796 --> 00:28:27,225
as bad. There's some issues.

654
00:28:27,235 --> 00:28:29,745
But I would say for the most part, it's pretty good because I run,

655
00:28:29,755 --> 00:28:32,485
I run Linux quite a bit and I've not,

656
00:28:32,696 --> 00:28:36,836
I can't think of very many instances where I've had to do something as root.

657
00:28:36,985 --> 00:28:39,446
The, the worst it usually gets is it will be like,

658
00:28:39,456 --> 00:28:42,381
please type in your password to do this thing

659
00:28:42,482 --> 00:28:43,712
you're trying to do.

660
00:28:43,871 --> 00:28:44,921
-- Yeah. No,
-- a lot of that's gone.

661
00:28:44,932 --> 00:28:45,452
But it's still,

662
00:28:45,462 --> 00:28:47,482
I think part of the problem is we keep trying to apply the

663
00:28:47,491 --> 00:28:51,722
same security model to everything from workstations to light bulbs to servers.

664
00:28:51,732 --> 00:28:53,952
We do that often. Yes.

665
00:28:54,261 --> 00:28:56,411
I mean, this goes back to like Greg Khs,

666
00:28:56,421 --> 00:28:58,921
comment about like Linux kernel vulnerabilities.

667
00:28:58,932 --> 00:29:01,641
You know, the thing runs on spaceships and milking machines. It's not,

668
00:29:01,901 --> 00:29:05,171
it's very different paradigms that we're dealing with here.

669
00:29:05,322 --> 00:29:05,871
So.

670
00:29:06,182 --> 00:29:09,387
All right, I'm, I'm honestly, I'm kind of excited to give this one a go.

671
00:29:09,397 --> 00:29:13,297
I'll probably run, run zero a bunch of times, mess around with it.

672
00:29:13,387 --> 00:29:15,657
Enjoy my blinky red background

673
00:29:15,968 --> 00:29:17,887
and then I'll hopefully never have to run it again.

674
00:29:18,008 --> 00:29:18,777
That's my dream.

675
00:29:18,787 --> 00:29:18,817
I,

676
00:29:18,828 --> 00:29:21,657
I would be so ok with not constantly needing to

677
00:29:21,667 --> 00:29:24,177
elevate privilege just to get my daily job done.

678
00:29:24,187 --> 00:29:26,468
I have not needed that in a long time.

679
00:29:26,478 --> 00:29:31,777
I think the biggest thing I do right now is II, I log into my Flex machine to run Pseudo

680
00:29:31,878 --> 00:29:31,897
app

681
00:29:32,098 --> 00:29:32,238
to get

682
00:29:32,397 --> 00:29:33,598
update and APT get

683
00:29:33,838 --> 00:29:33,887
dis

684
00:29:34,228 --> 00:29:34,767
upgrade.

685
00:29:34,958 --> 00:29:39,083
And that's like that's probably one of the few times I run pseudo. So I'm ok with that.

686
00:29:39,093 --> 00:29:41,843
I'll change it to run zero at some point. We'll see.

687
00:29:41,854 --> 00:29:43,923
-- Anyway, I'll give you the final word on this one.
-- Man.

688
00:29:44,114 --> 00:29:47,514
-- I just change is scary, but sometimes it's good. Uh
-- It's

689
00:29:47,524 --> 00:29:48,923
-- usually
-- good but it is scary.

690
00:29:48,933 --> 00:29:51,413
I agree. I agree. I'm gonna call it then. Thank you, Kurt.

691
00:29:51,423 --> 00:29:53,833
Thank you very much for listening. Go to for social security podcast.com.

692
00:29:53,843 --> 00:29:54,463
Hit up the show, not, it's Uy

693
00:29:54,823 --> 00:29:54,894
Pound

694
00:29:55,063 --> 00:29:55,114
Dos

695
00:29:55,223 --> 00:29:57,394
podcast. Hashtag on Mastodon.

696
00:29:57,534 --> 00:30:00,764
Thank you, Kurt. Have a marvelous. Rest of your day. Thanks everybody.

697
00:30:01,173 --> 00:30:02,953
Thanks everyone. Bye bye.