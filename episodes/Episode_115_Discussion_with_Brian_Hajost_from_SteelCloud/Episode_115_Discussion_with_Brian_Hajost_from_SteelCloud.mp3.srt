0
00:00:05,360 --> 00:00:09,500
Hello and welcome to the open source security podcast episode 115

1
00:00:09,510 --> 00:00:11,899
with myself Kurt Siefried and my partner in Thought Crime.

2
00:00:11,909 --> 00:00:12,619
Josh Bresser.

3
00:00:12,760 --> 00:00:17,450
-- Hey, Kurt, and
-- we have a guest today. We have Brian Hajj Jost from Steel Cloud.

4
00:00:17,459 --> 00:00:18,340
Say hello, Brian,

5
00:00:18,510 --> 00:00:23,540
hello. So Brian Haj Jost, I'm the President CEO of Steel Cloud.

6
00:00:23,549 --> 00:00:25,420
And what does Steel Cloud do?

7
00:00:25,430 --> 00:00:28,319
Steel Cloud is a soft security software

8
00:00:28,329 --> 00:00:34,729
company that builds technology around compliance specifically.

9
00:00:35,130 --> 00:00:35,740
Uh the DSA

10
00:00:35,909 --> 00:00:36,529
stig

11
00:00:36,840 --> 00:00:39,110
and CIS controls. Uh D

12
00:00:39,419 --> 00:00:42,840
A is the US federal government organization

13
00:00:43,279 --> 00:00:45,580
that is charged with writing the,

14
00:00:45,880 --> 00:00:49,909
the manuals for implementing um implementing

15
00:00:49,919 --> 00:00:52,759
systems and security controls on systems.

16
00:00:52,770 --> 00:00:55,979
Uh CIS is a not for profit out of upstate New York

17
00:00:56,569 --> 00:00:58,509
that does basically the same thing,

18
00:00:58,520 --> 00:01:04,230
but they involve um state and local governments uh commercial organizations and

19
00:01:04,440 --> 00:01:08,459
other organizations throughout the world to build their security controls.

20
00:01:08,690 --> 00:01:09,709
Ok, cool.

21
00:01:09,800 --> 00:01:10,819
So this is,

22
00:01:10,830 --> 00:01:14,589
this is one of those topics that I guess is kind of near and dear to my heart is because

23
00:01:14,930 --> 00:01:18,870
I, I deal with this and the stig on a regular basis and I guess

24
00:01:19,080 --> 00:01:23,269
why don't we start kind of at the very beginning and, and let's explain

25
00:01:23,580 --> 00:01:28,000
the, the concept of kind of compliance in this us federal sector. Right.

26
00:01:28,010 --> 00:01:31,069
Like, why, why do we have these rules and what does that mean?

27
00:01:31,080 --> 00:01:33,800
And I guess we could, we should even give some of a history lesson because

28
00:01:34,150 --> 00:01:37,040
they've evolved immensely over the years. Right.

29
00:01:37,589 --> 00:01:43,419
Sure. There was somewhat of a war game that went on inside the federal government to

30
00:01:43,540 --> 00:01:47,290
determine how computers, uh, this was probably 20 years ago,

31
00:01:47,300 --> 00:01:49,279
how computers were set up and managed.

32
00:01:49,750 --> 00:01:54,760
And from that, it came, you know, the basic requirement that there,

33
00:01:54,769 --> 00:01:57,029
there needs to be some conformity

34
00:01:57,489 --> 00:02:00,989
and that someone needed to take a charge to determine

35
00:02:01,330 --> 00:02:03,970
how uh computer systems can be effective,

36
00:02:04,120 --> 00:02:05,779
effectively implemented

37
00:02:06,059 --> 00:02:07,949
and how they can be secured. So

38
00:02:08,238 --> 00:02:12,208
um the security technical implementation guides or the

39
00:02:12,218 --> 00:02:14,889
stig s uh grew out of that activity,

40
00:02:15,128 --> 00:02:18,018
the dfso or the um

41
00:02:18,319 --> 00:02:21,458
uh their security office was charged with

42
00:02:21,748 --> 00:02:25,018
creating a set of rules basically

43
00:02:25,360 --> 00:02:30,190
um to uh implement and maintain computer systems. And there are sts

44
00:02:30,940 --> 00:02:35,350
for almost every piece of technology you can imagine from routers and switches.

45
00:02:35,360 --> 00:02:37,750
There are sticks for copying machines, there's sts

46
00:02:37,949 --> 00:02:38,449
for

47
00:02:38,899 --> 00:02:40,940
significant applications

48
00:02:41,660 --> 00:02:46,539
plus the cocoons in which applications live. So this would include things like,

49
00:02:46,960 --> 00:02:50,190
you know, uh Red hat uh +56 and seven

50
00:02:50,490 --> 00:02:57,080
windows server, uh all the workstation uh components, firewall browsers,

51
00:02:57,089 --> 00:02:59,800
databases, iis Apache.

52
00:03:00,210 --> 00:03:04,440
So almost all of the components you can imagine there's a stig for

53
00:03:05,059 --> 00:03:08,149
and there's also on the CIS as a corresponding

54
00:03:08,929 --> 00:03:13,009
a set of controls that have been developed by that organization that,

55
00:03:13,309 --> 00:03:15,360
that pretty much parallel the stags,

56
00:03:15,889 --> 00:03:19,149
right? You just said something that I'd never realized before.

57
00:03:19,160 --> 00:03:21,649
The copy machines have stig.

58
00:03:23,190 --> 00:03:24,360
That's crazy.

59
00:03:24,649 --> 00:03:25,729
Well, they're computers now.

60
00:03:26,309 --> 00:03:27,100
It, well,

61
00:03:27,419 --> 00:03:31,509
well, if you can imagine, let me, uh, that's an interesting story. Um

62
00:03:31,850 --> 00:03:33,820
You say, why would a copying machine have sts?

63
00:03:34,029 --> 00:03:36,490
Well, most, you know, copy machines are printers

64
00:03:36,830 --> 00:03:40,570
and you send a print job to a printer and it's, it's multiple people send them,

65
00:03:40,580 --> 00:03:42,210
they get cashed on the hard drive.

66
00:03:42,699 --> 00:03:47,179
So, um those get uh deleted uh once they're printed,

67
00:03:47,470 --> 00:03:49,589
but think about why they're being stored,

68
00:03:50,220 --> 00:03:53,410
there is a need for them to be encrypted. So in case a uh

69
00:03:53,720 --> 00:03:57,330
um a repairman has to come in and replace that

70
00:03:57,339 --> 00:03:59,470
hard drive when they walk out with the hard drive,

71
00:03:59,479 --> 00:04:03,050
we wanna make sure that they don't walk out with any information that they can view.

72
00:04:03,619 --> 00:04:04,050
And so,

73
00:04:04,320 --> 00:04:08,770
and so the other thing is once um a file is deleted off that hard drive,

74
00:04:08,779 --> 00:04:10,149
there's very specific

75
00:04:10,639 --> 00:04:13,570
uh you know, triple wipe, industrial

76
00:04:13,750 --> 00:04:15,949
um deletion of that file.

77
00:04:15,960 --> 00:04:20,709
So those are, those are kind of the stig that come into play with, with a copy machine.

78
00:04:21,548 --> 00:04:22,390
That's awesome.

79
00:04:22,600 --> 00:04:24,119
Well, I would assume fax machines too.

80
00:04:24,130 --> 00:04:27,920
Now, since it's all sort of the same organism, blob of printer and scanner.

81
00:04:28,119 --> 00:04:30,890
Sure. And, and again that the,

82
00:04:31,010 --> 00:04:36,910
any of these controls, either stig or cis basically look at the vulnerabilities,

83
00:04:37,059 --> 00:04:43,179
look at how a bad actor uh might be able to take over the device and access the network

84
00:04:43,529 --> 00:04:46,440
um or access data on that device.

85
00:04:46,820 --> 00:04:52,000
So if, if you, you think about or imagine how these would

86
00:04:52,299 --> 00:04:54,019
uh grow over time.

87
00:04:54,339 --> 00:04:57,899
Um throughout both the federal government, the commercial organizations,

88
00:04:57,910 --> 00:05:00,519
they look at vulnerabilities, things that they've experienced

89
00:05:01,390 --> 00:05:03,290
in the recent past. they look at

90
00:05:03,559 --> 00:05:07,440
their operating systems and the operating system components and say,

91
00:05:07,529 --> 00:05:11,359
how could we manage these or how could we harden these

92
00:05:11,609 --> 00:05:14,959
so that that particular thing would be hard to do

93
00:05:15,170 --> 00:05:18,089
uh or, or we could prevent it all together.

94
00:05:18,269 --> 00:05:22,040
And so there's a constant march toward looking at vulnerabilities,

95
00:05:22,049 --> 00:05:23,329
looking at hacks

96
00:05:23,630 --> 00:05:27,260
and determine if there are things within the operating system that

97
00:05:27,480 --> 00:05:28,209
may be,

98
00:05:28,529 --> 00:05:30,750
you know, fully reasonable for

99
00:05:30,970 --> 00:05:36,630
uh you know, a gas station or someone's bookstore, but unreasonable for, you know,

100
00:05:36,640 --> 00:05:40,920
a government computer or a large corporation that has sensitive data on it.

101
00:05:41,720 --> 00:05:44,869
And so, um the stig themselves, they come out

102
00:05:45,209 --> 00:05:52,070
um uh every 90 days, they are a new set of stig which correspond to something like um

103
00:05:52,450 --> 00:05:55,470
10 or 20,000 individual controls.

104
00:05:55,760 --> 00:05:58,000
Now, what, what do we mean when we say controls?

105
00:05:58,010 --> 00:06:00,059
Because I have a feeling there's some of the audience

106
00:06:00,070 --> 00:06:02,579
members who aren't quite familiar with some of this lingo.

107
00:06:03,190 --> 00:06:04,100
Yes.

108
00:06:04,109 --> 00:06:04,339
And,

109
00:06:04,350 --> 00:06:06,309
and one of the things that exists and it

110
00:06:06,320 --> 00:06:09,820
doesn't matter whether you're deeply embedded in the it,

111
00:06:09,829 --> 00:06:09,940
uh,

112
00:06:09,950 --> 00:06:12,200
organizations within the federal government or you're

113
00:06:12,209 --> 00:06:14,410
a complete neophyte in this area,

114
00:06:14,649 --> 00:06:17,869
there's a real fog around the stig and what they mean. So

115
00:06:18,440 --> 00:06:22,100
a simple example would be minimum password length.

116
00:06:22,959 --> 00:06:26,510
So minimum password is, it's in the federal government.

117
00:06:26,519 --> 00:06:29,200
That's, um, I believe 15 characters now.

118
00:06:29,339 --> 00:06:33,940
So you can have a password, a computer that is less than that password complexity.

119
00:06:34,429 --> 00:06:40,149
Uh The most interesting ones I think that that uh most people can relate to are

120
00:06:40,390 --> 00:06:44,989
there's over 1000 controls just in Microsoft Office across

121
00:06:45,220 --> 00:06:46,940
Excel and Word

122
00:06:47,160 --> 00:06:49,329
and basically those controls

123
00:06:49,649 --> 00:06:52,040
uh control how Microsoft

124
00:06:52,309 --> 00:06:53,410
Office operates,

125
00:06:53,420 --> 00:06:58,739
they'll gray out menu selections that they're viewed as dangerous or could be

126
00:06:58,910 --> 00:07:00,720
uh hacked or taken over.

127
00:07:00,989 --> 00:07:05,059
So it's very detailed esoteric things down

128
00:07:05,165 --> 00:07:07,045
to a very understandable things,

129
00:07:07,054 --> 00:07:10,804
but there are literally on an operating system level somewhere, right?

130
00:07:10,815 --> 00:07:13,855
Around 300 different controls for a

131
00:07:14,084 --> 00:07:16,135
Microsoft operating system

132
00:07:17,244 --> 00:07:21,035
on a ST a little more than that on CIS and, and

133
00:07:21,265 --> 00:07:22,644
about the same for Red Hat.

134
00:07:23,410 --> 00:07:26,290
So here's a random question because coming from the cloud space

135
00:07:26,500 --> 00:07:29,350
has stig looked at sort of cloud providers yet

136
00:07:29,359 --> 00:07:33,089
and started making maybe recommendations or adding controls.

137
00:07:33,100 --> 00:07:36,390
So for example, like Amazon web services, right? They have like

138
00:07:36,709 --> 00:07:39,029
good Lord several 100 services now,

139
00:07:39,220 --> 00:07:43,600
you know, is there a stig for kind of graying out some of the more dangerous things or,

140
00:07:43,609 --> 00:07:44,309
you know, maybe

141
00:07:44,649 --> 00:07:47,750
people should try to avoid, you know, um like with the S3 buckets, you know,

142
00:07:47,760 --> 00:07:49,799
now Amazon has a policy where you can,

143
00:07:49,880 --> 00:07:51,899
you can set a global policy so that your

144
00:07:51,910 --> 00:07:54,779
S3 buckets can't be made publicly available because apparently

145
00:07:55,100 --> 00:07:58,010
people have been doing that, you know, banks and what not.

146
00:07:58,920 --> 00:07:59,549
Well,

147
00:07:59,649 --> 00:08:03,899
probably what I should try to and we're kind of getting deep in the weeds here.

148
00:08:03,910 --> 00:08:07,130
When you look at compliance, it happens at multiple levels. So,

149
00:08:07,290 --> 00:08:09,720
stig S and CIS flow under

150
00:08:09,980 --> 00:08:14,720
uh nist uh 853 and 801 71 controls.

151
00:08:14,730 --> 00:08:17,399
So you have higher level organization controls,

152
00:08:17,410 --> 00:08:22,350
you have high level kind of network controls like how networks are administered,

153
00:08:22,799 --> 00:08:24,950
locked rooms, um

154
00:08:25,290 --> 00:08:30,970
um and other types of things. So when you look at uh Aws and Azure,

155
00:08:31,459 --> 00:08:33,719
they have fed ramp controls.

156
00:08:33,729 --> 00:08:38,659
So there's a whole set of federal us, federal controls that determine whether a

157
00:08:39,479 --> 00:08:43,578
hypervisors and a cloud service

158
00:08:44,049 --> 00:08:48,059
um, is uh protected. You know, one of the things that,

159
00:08:48,559 --> 00:08:49,718
um fed

160
00:08:49,879 --> 00:08:53,268
ramp calls for is that all of the endpoints,

161
00:08:53,278 --> 00:08:56,718
all of the OS s the instances within the cloud

162
00:08:56,989 --> 00:09:03,508
um are hardened to a recognized standard which generally is stig or CIS.

163
00:09:04,650 --> 00:09:08,250
So it's kind of one paragraph and a very large, very large document.

164
00:09:08,260 --> 00:09:10,890
So when you look at most of the cloud services,

165
00:09:11,510 --> 00:09:14,219
um the cloud providers responsible

166
00:09:14,320 --> 00:09:17,309
above a certain altitude. So

167
00:09:17,539 --> 00:09:21,229
they're responsible for the network, they're responsible for the hypervisor.

168
00:09:21,239 --> 00:09:24,460
They're responsible for the basic operation, the cloud,

169
00:09:24,700 --> 00:09:28,609
but the customer is responsible for the hardening of actual

170
00:09:28,619 --> 00:09:31,530
endpoints and that's not the responsibility of uh of,

171
00:09:31,539 --> 00:09:33,299
of any of the cloud providers.

172
00:09:33,309 --> 00:09:33,580
So,

173
00:09:34,179 --> 00:09:38,409
um, we have worked extensively in the commercial cloud.

174
00:09:38,419 --> 00:09:42,119
We, uh we, our product was used to harden the first

175
00:09:42,309 --> 00:09:46,679
department of Defense application to get an authorization to operate,

176
00:09:46,880 --> 00:09:47,760
meaning the

177
00:09:47,909 --> 00:09:52,760
authorization to actually go live in the Amazon cloud and back in 2014.

178
00:09:53,830 --> 00:09:54,390
So

179
00:09:54,570 --> 00:09:58,140
that application assumed all of the controls

180
00:09:58,150 --> 00:10:00,989
that existed within the AWS environment.

181
00:10:01,140 --> 00:10:05,690
But each of the end points in that application had to be hardened to, to the sticks.

182
00:10:06,289 --> 00:10:08,630
So hopefully that clarifies it a little bit.

183
00:10:08,919 --> 00:10:11,609
So it'd be fair to say the stig basically apply to sort

184
00:10:11,619 --> 00:10:14,549
of the actual hardware software that you're running on your end.

185
00:10:14,559 --> 00:10:17,830
Yeah, it's actually the cocoon that the software lives in

186
00:10:18,039 --> 00:10:22,000
and then there's again, other compliance controls that rise, you know,

187
00:10:22,010 --> 00:10:24,340
above that as an umbrella over that.

188
00:10:24,349 --> 00:10:26,510
But at the, at the Coalface,

189
00:10:26,940 --> 00:10:27,809
uh ST

190
00:10:28,000 --> 00:10:28,719
es are the

191
00:10:29,049 --> 00:10:33,840
-- lowest level operating system controls that have to be implemented.
-- Nice.

192
00:10:34,099 --> 00:10:37,799
No, that, that's perfect. I, I love the cocoon analogy

193
00:10:38,179 --> 00:10:39,440
that I'm gonna steal that.

194
00:10:39,650 --> 00:10:39,960
So.

195
00:10:43,090 --> 00:10:44,059
Well, when you, when you,

196
00:10:44,200 --> 00:10:48,559
yeah, when you think about it, that cocoon is made up of a whole bunch of components.

197
00:10:48,570 --> 00:10:50,909
I mean, it could be antivirus, it could be

198
00:10:51,130 --> 00:10:54,719
a browser is database and operating system,

199
00:10:54,729 --> 00:10:58,309
all of those components probably have their own stig

200
00:10:58,590 --> 00:11:02,750
and so to be compliant, each of the components within that cocoon

201
00:11:02,979 --> 00:11:04,729
or that app stack,

202
00:11:04,849 --> 00:11:08,469
uh have to be have to be hardened and, and literally,

203
00:11:08,840 --> 00:11:10,799
you know, in many applications,

204
00:11:10,809 --> 00:11:15,150
there's over 1000 controls that have to be individually done.

205
00:11:15,330 --> 00:11:20,619
Now, now you mentioned there can be over 1000 controls and a long time ago,

206
00:11:21,119 --> 00:11:24,869
a human literally sat down and verified

207
00:11:25,049 --> 00:11:26,520
all those controls.

208
00:11:26,859 --> 00:11:28,950
That's not quite how it, right?

209
00:11:29,409 --> 00:11:31,869
That's not quite how it works anymore. Is it?

210
00:11:32,750 --> 00:11:39,900
Well, uh actually tradition, when I say traditionally, that's how it's still done.

211
00:11:39,909 --> 00:11:40,700
I mean, the

212
00:11:41,049 --> 00:11:45,080
uh I believe there are estimates the the US federal government spends about $4

213
00:11:45,090 --> 00:11:48,729
billion on stick hardening and the initial hardening is typically done by hand.

214
00:11:48,739 --> 00:11:51,390
I say, why would that be

215
00:11:51,690 --> 00:11:54,280
the issue with, with the controls?

216
00:11:54,289 --> 00:11:56,250
And I'm, I'm gonna use, I use sticks a lot,

217
00:11:56,260 --> 00:12:00,020
but it's synonymous with CIS too because of the, the,

218
00:12:00,030 --> 00:12:02,669
the types of controls are almost exactly the same

219
00:12:03,409 --> 00:12:03,840
sts

220
00:12:03,969 --> 00:12:05,260
break applications

221
00:12:05,390 --> 00:12:08,989
doesn't matter whether the application is custom built for the organization

222
00:12:09,210 --> 00:12:09,890
or the app

223
00:12:10,010 --> 00:12:13,960
or, or the application is a, is a large, um

224
00:12:14,309 --> 00:12:16,869
you know, a large software company,

225
00:12:17,119 --> 00:12:19,390
um their applications have not been developed

226
00:12:19,400 --> 00:12:21,500
or tested in these hardened environments.

227
00:12:21,510 --> 00:12:23,549
So when they get into a hard environment, they break

228
00:12:23,960 --> 00:12:26,630
and every application breaks in a different way.

229
00:12:27,000 --> 00:12:29,010
Um If you could just harden

230
00:12:29,200 --> 00:12:30,890
to the stig book

231
00:12:31,130 --> 00:12:32,349
an environment

232
00:12:32,799 --> 00:12:37,049
and that was it, there would be no reason for our software because it would be

233
00:12:37,200 --> 00:12:40,390
a cookie cutter operation where you just harden everything the same.

234
00:12:40,750 --> 00:12:41,979
Unfortunately,

235
00:12:41,989 --> 00:12:45,940
every application reacts differently and all the state controls

236
00:12:45,950 --> 00:12:48,809
have to be hardened around an individual app stack.

237
00:12:49,109 --> 00:12:55,340
So not just the application that's running, but the complexion of, of other support

238
00:12:55,460 --> 00:12:58,739
systems that, that are on are on that app stack.

239
00:12:59,440 --> 00:13:00,159
And so

240
00:13:00,580 --> 00:13:03,679
the real issue starting what you have to do

241
00:13:03,780 --> 00:13:07,820
is you have to be able to determine which controls have to be turned

242
00:13:07,830 --> 00:13:11,500
off which ones have to be adjusted and which ones could be implemented,

243
00:13:11,840 --> 00:13:14,239
then you have to waiver those controls or

244
00:13:14,250 --> 00:13:17,239
provide documentation as to why we're not uh uh

245
00:13:17,530 --> 00:13:19,299
enacting that control

246
00:13:19,609 --> 00:13:25,599
manually. Which, which again is the, the vast predominance of how this is done

247
00:13:25,979 --> 00:13:27,719
across the US federal government

248
00:13:28,190 --> 00:13:28,849
um

249
00:13:29,010 --> 00:13:30,460
that's done by hand

250
00:13:30,619 --> 00:13:32,090
and for an APP stack,

251
00:13:32,099 --> 00:13:34,409
it would normally take between two weeks and two

252
00:13:34,419 --> 00:13:36,960
months to do that for every single application.

253
00:13:37,750 --> 00:13:38,289
Um

254
00:13:38,989 --> 00:13:41,200
with the average being around a month,

255
00:13:41,260 --> 00:13:46,330
um that same work can be done using config Os in 60 minutes.

256
00:13:47,400 --> 00:13:48,030
Um

257
00:13:48,369 --> 00:13:51,729
The other benefit to using an automated tool to

258
00:13:51,739 --> 00:13:54,760
do this hardening work is when you are done,

259
00:13:54,770 --> 00:13:57,919
you have a secure signature that you can replicate

260
00:13:57,929 --> 00:14:00,619
that work in 90 seconds anywhere in the world

261
00:14:01,109 --> 00:14:05,340
versus doing it manually. When you are done, you have a pile of notes

262
00:14:05,679 --> 00:14:08,380
that you have to write work instructions,

263
00:14:08,390 --> 00:14:11,250
maybe you're going to develop custom scripts

264
00:14:11,469 --> 00:14:14,330
or do something else with you aren't done.

265
00:14:14,340 --> 00:14:17,059
So there, there may be another week's worth of work to do

266
00:14:17,400 --> 00:14:19,179
just to take your output and put it

267
00:14:19,190 --> 00:14:21,659
into some form that's useful for the organization.

268
00:14:22,640 --> 00:14:26,719
Sure. OK. OK. So, so I guess I'm, I'm curious then

269
00:14:27,280 --> 00:14:32,119
what uh how does XC CD F relate to all this and kind of to fill people in?

270
00:14:32,369 --> 00:14:38,039
So the stig these days is transformed into an XML format called XC CD F

271
00:14:38,150 --> 00:14:40,700
which then defines a lot of text but also rules

272
00:14:40,710 --> 00:14:42,520
that can be kind of run against a system,

273
00:14:42,530 --> 00:14:45,940
right, to kind of the check fix text to say that this, this is,

274
00:14:46,330 --> 00:14:49,080
this is configured wrong or this is configured, right. Right.

275
00:14:50,280 --> 00:14:53,400
Right. There's, there's two types of um

276
00:14:53,919 --> 00:14:58,039
open standards for compliance testing.

277
00:14:58,049 --> 00:15:02,099
Uh XC CD F is one of those and SAP is the other one.

278
00:15:02,130 --> 00:15:05,489
Scap is a language that was defined by NIST.

279
00:15:06,460 --> 00:15:06,559
Uh

280
00:15:06,729 --> 00:15:07,609
and it's for

281
00:15:07,849 --> 00:15:10,789
vulnerability scanning. The shortcoming of both

282
00:15:10,890 --> 00:15:13,409
XC CD F and cap

283
00:15:13,780 --> 00:15:17,940
is that neither one has any content for remediation

284
00:15:17,950 --> 00:15:20,679
or neither one has any content for fixing.

285
00:15:21,390 --> 00:15:23,390
So, whereas there are

286
00:15:23,609 --> 00:15:24,349
um

287
00:15:24,539 --> 00:15:29,679
a plethora of scanning technologies that exist in the Cyber world,

288
00:15:30,429 --> 00:15:34,599
Steel Cloud in our config Os system, we are the fixers,

289
00:15:35,030 --> 00:15:38,080
our value that we provide um

290
00:15:38,539 --> 00:15:42,099
our customers, the fact that not only do we scan

291
00:15:42,820 --> 00:15:46,320
but we fix things. So we have enhanced um

292
00:15:46,739 --> 00:15:48,219
our content,

293
00:15:48,229 --> 00:15:53,640
our security content to include all of the rules for detailed level fixing.

294
00:15:54,039 --> 00:15:55,929
So I can press the button,

295
00:15:56,419 --> 00:16:01,880
I can fix an app stack, all of the controls that need to be fixed.

296
00:16:02,200 --> 00:16:05,559
Um I can skip all the controls that would break that app stack

297
00:16:05,570 --> 00:16:08,799
and I can produce all the output from everything I just did.

298
00:16:09,650 --> 00:16:13,229
So the the the real differentiation there is

299
00:16:13,799 --> 00:16:14,380
um

300
00:16:14,729 --> 00:16:19,989
you know, pure scanning that we're checking for things versus

301
00:16:20,119 --> 00:16:25,229
remediation where I'm going in and I'm fixing the non compliances.

302
00:16:26,179 --> 00:16:29,229
So just for our listeners to put something in perspective, so for example,

303
00:16:29,239 --> 00:16:31,679
like SC or XC CD F can make a statement like

304
00:16:31,859 --> 00:16:33,070
the password must be.

305
00:16:33,119 --> 00:16:33,820
Well, like you said,

306
00:16:33,830 --> 00:16:36,780
F is it 15 or more characters long now for the federal government?

307
00:16:36,789 --> 00:16:38,280
Right? For the US, federal government.

308
00:16:38,770 --> 00:16:42,320
And so for example, that sounds pretty simple, but then you have a Linux machine

309
00:16:42,669 --> 00:16:45,890
and for example, how is it actually processing, you know, passwords?

310
00:16:45,900 --> 00:16:48,760
Is it a local password file? Is it using LDA? Is it using?

311
00:16:50,030 --> 00:16:54,130
Oh God forbid Nis or NS plus, hopefully, you know, and so there's,

312
00:16:54,140 --> 00:16:57,409
there's different ways for the remediation to happen

313
00:16:57,419 --> 00:16:58,890
depending on how that system is configured.

314
00:16:58,900 --> 00:16:59,109
And

315
00:16:59,250 --> 00:17:02,169
so I'm assuming that Steel Cloud is able to deal

316
00:17:02,179 --> 00:17:04,449
with this to some degree or fully in some cases.

317
00:17:04,660 --> 00:17:05,770
Yes.

318
00:17:05,780 --> 00:17:11,520
And, and usually the compliance, you know, the base level compliance documents

319
00:17:11,729 --> 00:17:14,130
species specifically what has to happen

320
00:17:15,020 --> 00:17:18,719
and es especially scap is very sensitive to

321
00:17:19,160 --> 00:17:23,160
um the order in which things happen. So you can have a compliance system.

322
00:17:23,170 --> 00:17:25,500
But if you didn't do in the exact order that scap

323
00:17:25,680 --> 00:17:26,589
is expecting

324
00:17:26,819 --> 00:17:28,770
a will read, a compliance system is non

325
00:17:28,920 --> 00:17:29,560
compliant.

326
00:17:30,260 --> 00:17:33,609
So not only do we have to tune our content

327
00:17:33,819 --> 00:17:38,060
to allow systems to, for us to remediate systems,

328
00:17:38,069 --> 00:17:42,329
but we also have to do it in a way that any other tool

329
00:17:42,449 --> 00:17:46,219
that the customer use might use to double check

330
00:17:46,530 --> 00:17:50,219
or to validate that they will get the same results that we do.

331
00:17:50,650 --> 00:17:52,880
Um But yes, in the, in the

332
00:17:53,400 --> 00:17:54,239
uh in the

333
00:17:54,619 --> 00:17:55,189
Linux

334
00:17:55,300 --> 00:17:56,050
world

335
00:17:56,589 --> 00:18:00,000
compliance is typically cracking configuration files

336
00:18:00,010 --> 00:18:01,880
and doing very detailed editing,

337
00:18:02,160 --> 00:18:05,709
starting and stopping Damon's loading and unloading software.

338
00:18:05,719 --> 00:18:07,010
So that's kind of the

339
00:18:07,510 --> 00:18:11,770
the job that uh if you look at bringing a system in compliance.

340
00:18:11,780 --> 00:18:14,170
Those are the things that you have to be able to do

341
00:18:14,750 --> 00:18:19,579
on the window side. Um a little different um because you have a registry.

342
00:18:19,589 --> 00:18:21,250
So for many systems,

343
00:18:21,640 --> 00:18:23,089
uh um the

344
00:18:23,310 --> 00:18:27,300
the security controls are kept in registries. So it is

345
00:18:27,410 --> 00:18:30,680
creating or updating registry entries,

346
00:18:30,689 --> 00:18:35,030
but it's also local audit policy and local security policy.

347
00:18:35,589 --> 00:18:36,260
Um

348
00:18:36,630 --> 00:18:41,420
in databases, it's data specific database queries and updates

349
00:18:41,959 --> 00:18:44,180
in things like uh IIS.

350
00:18:44,189 --> 00:18:48,410
Um There are other configuration files as well as registry keys. So it's ver

351
00:18:48,880 --> 00:18:51,969
it can get quite complex, especially

352
00:18:52,619 --> 00:18:55,030
when you're doing remediation, which is why

353
00:18:55,560 --> 00:18:56,869
um every other,

354
00:18:57,000 --> 00:19:01,010
every other vendor has really shied away from fixing systems.

355
00:19:01,020 --> 00:19:02,550
They just want to produce reports.

356
00:19:03,599 --> 00:19:09,050
Sure. Sure. And, and I know, II I don't, I think it was maybe answerable scripts.

357
00:19:09,060 --> 00:19:09,589
There was,

358
00:19:09,810 --> 00:19:11,520
there was somebody I knew that had kind

359
00:19:11,530 --> 00:19:13,989
of developed their own remediation scripts to like,

360
00:19:14,000 --> 00:19:15,859
deploy an instance of Linux

361
00:19:15,959 --> 00:19:20,900
that would be Sted. And every time they, they ran it, it, it broke the system

362
00:19:21,229 --> 00:19:21,469
because

363
00:19:22,369 --> 00:19:25,380
it did a bunch of crazy things. Like, like you're saying, you can,

364
00:19:25,739 --> 00:19:28,849
anytime you have a deployment, you can turn on some things and,

365
00:19:28,859 --> 00:19:32,160
and you can't others because it either doesn't make sense or it,

366
00:19:32,170 --> 00:19:34,849
it breaks it for some bizarre reason, which, I mean,

367
00:19:34,859 --> 00:19:36,180
that's kind of one of the challenges, right?

368
00:19:36,189 --> 00:19:38,400
When you're dealing with this insane,

369
00:19:38,719 --> 00:19:42,239
just list of controls, you have to figure out what matters and what doesn't.

370
00:19:43,099 --> 00:19:45,479
Well, I mean, I don't know if anybody remembers, but even going,

371
00:19:45,489 --> 00:19:47,459
like while going back a few years, we have, you know,

372
00:19:47,469 --> 00:19:50,390
Se Linux and trying to craft se Linux policy that didn't, you know,

373
00:19:50,400 --> 00:19:52,199
break your system horrifically,

374
00:19:52,449 --> 00:19:56,189
uh going back even further, you know, firewalls, even state full firewalls,

375
00:19:56,199 --> 00:19:58,449
you know, it's still very easy to break stuff and,

376
00:19:58,459 --> 00:20:00,780
and before when we had stateless firewalls, like,

377
00:20:00,989 --> 00:20:02,310
I don't know if anybody tries to remember

378
00:20:02,319 --> 00:20:05,060
making passive FTP work through a stateless firewall,

379
00:20:05,329 --> 00:20:08,469
but it essentially involved taking a sledgehammer to your rule set.

380
00:20:09,550 --> 00:20:12,219
You know, it's, it's, uh the the

381
00:20:12,329 --> 00:20:16,339
thing to make this, you have to start from kind of the right position

382
00:20:16,560 --> 00:20:20,209
understanding that everything breaks, everything needs to be customized.

383
00:20:20,219 --> 00:20:22,290
It has to be easy and simple.

384
00:20:22,469 --> 00:20:26,989
If you start from that point and you develop software around that

385
00:20:27,489 --> 00:20:28,270
you recognize.

386
00:20:28,280 --> 00:20:31,319
So we have built in roll back anytime we update a system,

387
00:20:31,329 --> 00:20:33,250
we build a synchronous rollback file.

388
00:20:33,260 --> 00:20:36,890
So in one mouse click, I can roll everything back

389
00:20:37,300 --> 00:20:40,300
because this process, when you look at the entire DEV

390
00:20:40,510 --> 00:20:41,619
ops process,

391
00:20:42,329 --> 00:20:49,839
you it is it is hunt and search break and fix. There are lots of processes along the way

392
00:20:50,089 --> 00:20:52,119
that aren't really contemplated in,

393
00:20:52,530 --> 00:20:54,520
I'm going to write a script

394
00:20:54,869 --> 00:20:56,859
because the only way you can write a script

395
00:20:56,869 --> 00:20:59,270
is if someone's already done the break and fix,

396
00:20:59,280 --> 00:21:00,680
if somebody is already

397
00:21:01,310 --> 00:21:03,750
uh defined at a very detailed level,

398
00:21:03,760 --> 00:21:07,880
what needs to be done and all you're doing is translating into some language.

399
00:21:08,050 --> 00:21:08,540
Well,

400
00:21:09,280 --> 00:21:11,439
that's about 5% of the job.

401
00:21:11,589 --> 00:21:15,959
You know, you, you have the 90% prior to that

402
00:21:16,569 --> 00:21:20,880
and then these things change every 90 days. So then you have a sustainment issue.

403
00:21:21,199 --> 00:21:24,140
As software applications are updated,

404
00:21:24,150 --> 00:21:28,020
they may react differently with the security controls.

405
00:21:28,430 --> 00:21:29,180
And as new sts

406
00:21:29,339 --> 00:21:31,979
are released, they have to be tested and released

407
00:21:32,250 --> 00:21:34,219
and all this has to be done easily

408
00:21:34,670 --> 00:21:35,670
and quickly.

409
00:21:35,910 --> 00:21:36,489
And

410
00:21:37,030 --> 00:21:38,800
you know, most many of

411
00:21:39,069 --> 00:21:44,099
the many of our customers are people that have tried writing scripts

412
00:21:44,109 --> 00:21:47,650
or tried managing their own GPO s and they've just found that

413
00:21:48,650 --> 00:21:51,160
the work is, um,

414
00:21:51,420 --> 00:21:53,369
it is, it is

415
00:21:53,810 --> 00:21:55,050
unsustainable

416
00:21:55,839 --> 00:21:57,709
-- and, yeah.
-- No, I've run into this.

417
00:21:57,719 --> 00:21:59,810
So, for example, if you take something quote unquote,

418
00:21:59,819 --> 00:22:02,060
as simple as a PHP application like wordpress,

419
00:22:02,199 --> 00:22:05,219
you can very easily write, you know, a security lockdown for it

420
00:22:05,569 --> 00:22:07,099
and then you try and update it and it has to

421
00:22:07,109 --> 00:22:09,160
do a bunch of new stuff that it didn't do before,

422
00:22:09,170 --> 00:22:10,469
you know, so you fix that and then

423
00:22:11,020 --> 00:22:12,750
you want to, you know, back it up

424
00:22:13,030 --> 00:22:15,709
and then all of a sudden that's doing a whole bunch of new stuff. So

425
00:22:15,939 --> 00:22:16,099
yeah,

426
00:22:16,109 --> 00:22:18,349
that's something I think a lot of people forget is when

427
00:22:18,359 --> 00:22:21,260
you write these sort of security policies to wrap around apps.

428
00:22:22,089 --> 00:22:27,150
Uh ideally, you need to account for every action that app needs to do

429
00:22:27,290 --> 00:22:28,109
to live.

430
00:22:28,119 --> 00:22:28,449
And, you know,

431
00:22:28,459 --> 00:22:30,329
obviously there's longer term things that are not

432
00:22:30,339 --> 00:22:32,069
day to day like backups and updates.

433
00:22:32,530 --> 00:22:35,589
Uh And I've, you know, I inevitably people seem to forget about that

434
00:22:38,060 --> 00:22:38,900
you mentioned.

435
00:22:38,910 --> 00:22:40,140
Uh Wordpress,

436
00:22:40,150 --> 00:22:46,060
Wordpress was probably the hardest application that we had to harden around.

437
00:22:46,650 --> 00:22:51,500
Um It took about 70 minutes as opposed to our normal 45 to 60 minutes.

438
00:22:52,130 --> 00:22:54,469
Reason is there are three

439
00:22:55,609 --> 00:22:59,869
uh contingent controls. You could set any two of the three

440
00:23:00,160 --> 00:23:03,189
in the application would run, you set all three of them

441
00:23:03,449 --> 00:23:05,250
and it would not run. And

442
00:23:07,500 --> 00:23:08,560
so the, the job

443
00:23:09,349 --> 00:23:10,430
I sorry

444
00:23:11,079 --> 00:23:11,449
that makes

445
00:23:11,550 --> 00:23:11,729
no sense.

446
00:23:12,530 --> 00:23:15,670
-- So
-- the job is out of the 300 controls in the

447
00:23:15,680 --> 00:23:20,060
operating environment to find those three controls and set them correctly.

448
00:23:20,579 --> 00:23:21,469
And

449
00:23:21,829 --> 00:23:23,630
without our application

450
00:23:24,310 --> 00:23:27,209
that literally could have taken, you know, weeks or months

451
00:23:27,550 --> 00:23:29,449
and it took 7 70 minutes.

452
00:23:29,890 --> 00:23:30,400
Um,

453
00:23:30,910 --> 00:23:32,930
as an aside, we, we,

454
00:23:32,939 --> 00:23:36,510
we did the same thing for Webex for a federal integrator

455
00:23:36,520 --> 00:23:38,329
and they wanted to see the hardening in front of them.

456
00:23:38,339 --> 00:23:41,469
So we'd never done it before. We did webex in front of them. It took

457
00:23:41,660 --> 00:23:47,410
45 minutes and there were six controls that had to be adjusted to allow Webex to, uh,

458
00:23:47,420 --> 00:23:49,890
operate on a dod computer.

459
00:23:51,099 --> 00:23:53,739
Ok. So can I ask when you say it took 45 minutes?

460
00:23:53,750 --> 00:23:57,630
Do you mean it took your staff 45 minutes to write the rules or it takes 45

461
00:23:57,640 --> 00:24:01,739
minutes kind of from the time you click like deploy or Harden or whatever until it's,

462
00:24:01,750 --> 00:24:02,589
it's done?

463
00:24:03,010 --> 00:24:09,719
No, the, the deploying harden takes about 30 or 45 seconds.

464
00:24:10,319 --> 00:24:10,939
No,

465
00:24:11,300 --> 00:24:11,880
the,

466
00:24:12,550 --> 00:24:13,750
so it's building the profile.

467
00:24:13,760 --> 00:24:18,530
You have to test, you have to, our application breaks the sticks down into pieces,

468
00:24:18,540 --> 00:24:19,989
it applies and roll back the,

469
00:24:20,280 --> 00:24:21,959
it rolls back the pieces

470
00:24:22,150 --> 00:24:26,030
so you can find the pieces that are causing the application not to operate.

471
00:24:26,239 --> 00:24:28,420
You adjust those you test and,

472
00:24:28,689 --> 00:24:33,339
uh, basically that uh, 45 to 60 minutes allows you to step through every C

473
00:24:33,469 --> 00:24:34,550
one C two and C

474
00:24:34,650 --> 00:24:35,630
three, which are the,

475
00:24:36,160 --> 00:24:39,739
the levels of severity with inside of the state controls

476
00:24:39,910 --> 00:24:42,530
and determine which controls have to be adjusted.

477
00:24:43,239 --> 00:24:48,439
Once you have that done, once you've spent that 45 or 60 minutes,

478
00:24:48,599 --> 00:24:51,349
I can replicate that anywhere in the world in, uh,

479
00:24:51,510 --> 00:24:53,280
30 to 90 seconds

480
00:24:53,430 --> 00:24:56,020
because I have the rules built. Then I know what's waivered.

481
00:24:56,030 --> 00:24:58,229
I've documented the waivers and the reason

482
00:24:58,500 --> 00:25:00,119
so that I push the button,

483
00:25:00,130 --> 00:25:03,640
nothing breaks and it sets up the machine exactly

484
00:25:03,650 --> 00:25:06,359
what would be necessary to run that application.

485
00:25:07,430 --> 00:25:09,209
Nice. That's really cool.

486
00:25:09,369 --> 00:25:10,050
Good deal.

487
00:25:11,189 --> 00:25:12,420
OK. OK.

488
00:25:12,920 --> 00:25:17,339
II I like that. I, I keep thinking of, I've, I've written Stig before

489
00:25:17,550 --> 00:25:18,199
and

490
00:25:18,510 --> 00:25:20,290
it doesn't take 45 minutes,

491
00:25:22,420 --> 00:25:27,699
you generally measure it in days or weeks in, in many cases just because it's,

492
00:25:27,709 --> 00:25:29,599
it's a ton of work

493
00:25:29,880 --> 00:25:33,949
to go through all of the rules. And I guess there's, there's one other thing that,

494
00:25:34,329 --> 00:25:36,489
that we should probably clarify is

495
00:25:36,760 --> 00:25:39,270
so I, I know we talked about kind of all, all these different sts

496
00:25:39,479 --> 00:25:41,599
and if you stick a database to an operating system,

497
00:25:41,609 --> 00:25:43,660
but really a lot of this builds on each other

498
00:25:43,670 --> 00:25:45,640
also where you have to deploy the operating system,

499
00:25:45,650 --> 00:25:46,510
you stig that,

500
00:25:46,609 --> 00:25:48,689
then you deploy the application on top and you stig

501
00:25:48,699 --> 00:25:50,250
that and if you have something on top of that,

502
00:25:50,260 --> 00:25:51,530
even you might have to stick that.

503
00:25:51,540 --> 00:25:54,109
And so it's not even just like one stig in some cases you

504
00:25:54,119 --> 00:25:56,599
can be talking about dealing with three or four of these things.

505
00:25:57,020 --> 00:26:02,900
Um, generally best practices would be that you get everything loaded and running

506
00:26:03,170 --> 00:26:04,760
and then you stick around it.

507
00:26:04,930 --> 00:26:07,540
Yes, you describe the traditional thing where the,

508
00:26:07,550 --> 00:26:09,560
it department gives the organization,

509
00:26:09,780 --> 00:26:10,910
here's the end product.

510
00:26:10,920 --> 00:26:16,089
We want you to deliver a fully sticked image, load your application on it

511
00:26:16,329 --> 00:26:17,800
and, and give it back to us.

512
00:26:18,219 --> 00:26:23,719
Uh, the problem with that is, um, some applications won't even load.

513
00:26:24,040 --> 00:26:27,270
So starting with something that's already pre hardened

514
00:26:27,719 --> 00:26:29,680
that you have to tear it down

515
00:26:29,790 --> 00:26:31,349
just to get it to load

516
00:26:31,540 --> 00:26:35,079
and then you have to tear it down and build it up and test to get it to run

517
00:26:35,520 --> 00:26:39,829
is, is, is counterproductive. Let me give you an example. We had a customer,

518
00:26:40,709 --> 00:26:42,040
uh navy customer

519
00:26:42,479 --> 00:26:45,579
uh that we had just, they just implemented our system

520
00:26:45,859 --> 00:26:48,599
and they stood up a new app stack and it didn't work.

521
00:26:49,339 --> 00:26:52,280
Um They got it loaded but it wouldn't work. And they said,

522
00:26:52,530 --> 00:26:53,199
you know,

523
00:26:53,359 --> 00:26:56,050
Steel Cloud told us this technique

524
00:26:56,369 --> 00:26:59,310
and they called us up and we said yes, use the unstick signature.

525
00:26:59,319 --> 00:27:01,839
So we have signatures specifically to

526
00:27:02,099 --> 00:27:04,329
if your it department gives you a presti

527
00:27:04,770 --> 00:27:05,319
image

528
00:27:05,750 --> 00:27:07,520
to unstick the image

529
00:27:07,770 --> 00:27:10,079
because again, you wanna get the software loaded,

530
00:27:10,089 --> 00:27:12,130
you don't wanna be wrestling with drivers,

531
00:27:12,140 --> 00:27:15,689
install programs and stig and not know where you're at.

532
00:27:15,839 --> 00:27:18,130
So they unstick it, it still didn't work.

533
00:27:18,140 --> 00:27:19,780
So it had nothing to do with the stig they

534
00:27:19,790 --> 00:27:23,469
would have spent 2 to 3 weeks wrestling with the stig

535
00:27:24,010 --> 00:27:28,505
when it wasn't that they reloaded. The endpoint security took them 10 minutes,

536
00:27:28,645 --> 00:27:32,045
reapplied the stig everything's up and running. They're 20 minutes.

537
00:27:32,055 --> 00:27:35,244
They were done. They would have spent weeks on that kind of thing. So,

538
00:27:35,364 --> 00:27:40,885
best practices, get the software working, all the components, databases,

539
00:27:40,994 --> 00:27:46,064
applications, all the other, get it working and then stig aro around it.

540
00:27:46,494 --> 00:27:47,734
That is best practice.

541
00:27:47,744 --> 00:27:51,025
And that's kind of the philosophy that we brought to the market.

542
00:27:52,050 --> 00:27:52,270
Yeah,

543
00:27:52,280 --> 00:27:54,630
I think that's something a lot of people forget is there's a lot

544
00:27:54,640 --> 00:27:58,849
of software out there that doesn't actually easily work out of the box.

545
00:27:58,859 --> 00:27:59,790
-- It's
-- like none.

546
00:28:01,390 --> 00:28:05,489
Awesome. So, I, I think it's time to kind of wrap this one up. So

547
00:28:06,160 --> 00:28:08,609
I'm gonna give you the last word Brian.

548
00:28:08,619 --> 00:28:11,380
Do you have, do you have any parting thoughts for the, the audience?

549
00:28:12,010 --> 00:28:13,030
Yeah, I, I do.

550
00:28:13,040 --> 00:28:13,150
II,

551
00:28:13,160 --> 00:28:15,260
I think a lot of the audience may look

552
00:28:15,270 --> 00:28:17,270
at this and they're not in the federal government.

553
00:28:17,280 --> 00:28:19,699
It hadn't been dictated by any of their industries.

554
00:28:19,709 --> 00:28:22,150
And they said, well, this is kind of nice to have. And

555
00:28:22,609 --> 00:28:25,589
how does, how does this affect us? Um

556
00:28:26,339 --> 00:28:28,719
II, I think it's coming, I mean, we see it,

557
00:28:28,729 --> 00:28:34,599
the FBI is enforcing compliance and stig on state and local governments.

558
00:28:34,609 --> 00:28:39,050
We've seen the IRS do a flow down to state and local governments

559
00:28:39,060 --> 00:28:42,579
and the state and local governments have done a flow down to tax preparers

560
00:28:42,910 --> 00:28:45,119
that their environments get Sted up.

561
00:28:45,770 --> 00:28:48,000
Um So whether it's from DH S,

562
00:28:48,199 --> 00:28:51,479
whether it's the SEC, the banking regulators,

563
00:28:51,819 --> 00:28:54,599
um The Nuclear Regulatory Commission,

564
00:28:54,869 --> 00:28:59,689
I think all of the major infrastructure in America eventually gonna be failed are,

565
00:28:59,699 --> 00:29:05,500
are going to be uh required to comply with standards

566
00:29:05,829 --> 00:29:10,329
and also public companies. It could be, the SEC comes out and says that uh

567
00:29:10,650 --> 00:29:12,869
um if you are, um

568
00:29:13,030 --> 00:29:16,739
if you're going to be on these exchanges that you have to like they did with,

569
00:29:16,750 --> 00:29:19,489
with Sarbanes Oxley, that you have to be compliant.

570
00:29:20,060 --> 00:29:24,910
So, uh it is coming uh Steel Cloud, certainly preparing for it. And um,

571
00:29:25,130 --> 00:29:29,099
we're gonna be ready when our, when our customers, future customers need it.

572
00:29:29,109 --> 00:29:30,859
Um Thanks so much today.

573
00:29:31,349 --> 00:29:35,760
Ok, cool, fantastic. So, I guess thank you, everyone. Thank you, Kurt.

574
00:29:35,770 --> 00:29:36,719
Thank you, Brian.

575
00:29:37,369 --> 00:29:40,290
It, it has been a fantastic conversation. I really appreciate it.

576
00:29:40,300 --> 00:29:41,790
We'll have to have you back someday to

577
00:29:42,000 --> 00:29:43,540
talk about the new and exciting

578
00:29:43,800 --> 00:29:44,969
things happening.

579
00:29:44,979 --> 00:29:47,270
So I guess if, if anyone wants to show notes,

580
00:29:47,280 --> 00:29:49,500
you can go to open source security podcast.com

581
00:29:50,000 --> 00:29:52,670
where you can hit up links to.

582
00:29:52,680 --> 00:29:55,150
We have links to some of the things Brian talked about as well as kind of

583
00:29:55,160 --> 00:29:58,420
some of the information on the stig you can use the Pound Os S podcast.

584
00:29:58,430 --> 00:30:00,709
Hashtag to hit us up on social media

585
00:30:01,089 --> 00:30:07,430
-- and you two have fantastic rest of your days.
-- Ok. Thanks so much. Bye now. Thanks.