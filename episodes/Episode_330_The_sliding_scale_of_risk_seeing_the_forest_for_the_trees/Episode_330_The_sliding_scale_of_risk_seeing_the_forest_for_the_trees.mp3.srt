0
00:00:00,330 --> 00:00:04,070
What is it now? Day 862 of January 2020.

1
00:00:09,859 --> 00:00:13,050
Hello and welcome to the open source security podcast with myself,

2
00:00:13,060 --> 00:00:15,770
Kurt Siefried and my partner in Thought Crime, Josh Bresser.

3
00:00:15,920 --> 00:00:18,059
So, what's new and exciting with you?

4
00:00:18,389 --> 00:00:21,590
Well, I, I'm actually going to watch over the next

5
00:00:21,780 --> 00:00:26,399
month or two, the highest grossing franchise movie of all time.

6
00:00:26,489 --> 00:00:29,280
I don't even know what it is anymore. It used to be Star Wars but,

7
00:00:29,829 --> 00:00:33,610
well, no, not anymore. I know it's not. Then it was Titanic. What is it now?

8
00:00:33,659 --> 00:00:34,319
Sharknado?

9
00:00:34,970 --> 00:00:36,790
-- They made six of them.
-- Wow.

10
00:00:37,139 --> 00:00:37,830
-- I
-- know.

11
00:00:37,840 --> 00:00:43,509
-- Right. I'm like
-- what I mean? I appreciate when trolls win.

12
00:00:44,049 --> 00:00:46,709
And this is a fine example of that when it's harmless wins because

13
00:00:46,720 --> 00:00:51,110
there are dangerous trolls and there's hilarious trolls and this is hilarious.

14
00:00:51,119 --> 00:00:52,590
Yeah, we're not going to talk about your elections.

15
00:00:52,819 --> 00:00:55,139
But what I love is the Sharknado budgets for these

16
00:00:55,150 --> 00:00:57,889
films are like between two and 3 million each.

17
00:00:57,900 --> 00:00:59,830
I mean, I believe that, I mean, this

18
00:01:00,020 --> 00:01:02,240
reminds me of what was it called Cubed? The movie Cubed.

19
00:01:02,250 --> 00:01:05,400
-- It was made in Montreal for like 300 grand.
-- I, I don't even know what that is?

20
00:01:05,410 --> 00:01:08,650
It's like a horror film that's stuck in a cube. There's puzzles. Yeah. Sorry. Cube.

21
00:01:08,660 --> 00:01:09,319
Not cubed.

22
00:01:09,489 --> 00:01:12,480
And, like, it cost a couple 100 grand to make and it, it grossed

23
00:01:12,650 --> 00:01:15,779
hundreds of millions of dollars. So, you know, 1000 like, what is that?

24
00:01:15,809 --> 00:01:19,040
1000 times what it cost? You know, and, and, yeah, like,

25
00:01:19,279 --> 00:01:21,269
I don't want to call it a troll, but like, at the same time,

26
00:01:21,279 --> 00:01:24,440
Sharknado does have a slightly trolly element to it.

27
00:01:24,449 --> 00:01:25,000
I think

28
00:01:25,529 --> 00:01:26,279
I would agree.

29
00:01:26,529 --> 00:01:27,410
Yeah, I'm fine with that.

30
00:01:27,839 --> 00:01:31,220
But, you know, I think it boils down to if you find a formula that works

31
00:01:31,430 --> 00:01:34,680
and it's like, ok, so we make this crappy film for 3 million bucks and then, like,

32
00:01:34,690 --> 00:01:35,809
it makes several

33
00:01:36,139 --> 00:01:40,139
hundreds of millions at the box office. Like you kind of be saying not to,

34
00:01:40,250 --> 00:01:43,440
I, I agree. I like pet rocks, man. Pet rocks.

35
00:01:43,449 --> 00:01:45,019
Like, if you want to argue against Sharknado,

36
00:01:45,169 --> 00:01:46,790
you have to argue against pet rocks

37
00:01:46,970 --> 00:01:50,699
and Pokemon cards and all sorts of stuff that's not needed.

38
00:01:50,800 --> 00:01:53,519
I mean, I'm always torn over

39
00:01:53,720 --> 00:01:55,580
deciding what is

40
00:01:56,419 --> 00:01:59,209
good or bad when it comes to things like entertainment,

41
00:01:59,220 --> 00:02:01,599
especially because you always get people that are like, oh,

42
00:02:01,610 --> 00:02:05,260
-- like reality TV is garbage and like video
-- games are not art

43
00:02:05,589 --> 00:02:08,320
well, actually. Yeah. Yeah. Yeah, they kind of are now,

44
00:02:08,720 --> 00:02:10,399
that's hard to argue now.

45
00:02:10,410 --> 00:02:14,589
I mean, I think you could make some plausible arguments, like 3040 years ago. But

46
00:02:14,910 --> 00:02:17,750
what, what I always come back to with all of this is,

47
00:02:18,509 --> 00:02:20,929
it's, it's, it's also subjective. Right.

48
00:02:20,940 --> 00:02:24,630
Where, like, I think one thing you think another, I'm sure we have, I mean,

49
00:02:24,639 --> 00:02:27,330
I know we have many, many tastes that are in common and we have many that,

50
00:02:27,339 --> 00:02:28,259
that aren't necessarily,

51
00:02:28,490 --> 00:02:28,770
but the

52
00:02:28,880 --> 00:02:33,250
superior alternative, they're so good. I need to find, I wish I could buy them.

53
00:02:33,259 --> 00:02:35,050
Actually, I'm glad I can't buy them here.

54
00:02:35,190 --> 00:02:38,089
So, for anyone who doesn't know cheesy are these like Canadian Cheetos,

55
00:02:38,100 --> 00:02:39,619
except they are so good.

56
00:02:39,820 --> 00:02:42,300
And if I, if I could buy them I would like, we

57
00:02:42,600 --> 00:02:45,820
million pounds because they're like, so good. And I eat way too many of them.

58
00:02:45,990 --> 00:02:49,289
They're actually better because it's, it's this company called Hawkins,

59
00:02:49,300 --> 00:02:50,419
the Hawkins Family.

60
00:02:50,470 --> 00:02:54,429
And they make cheesy. That's all they make their websites from like 1990.

61
00:02:54,440 --> 00:02:55,779
It's like three or four pages

62
00:02:56,020 --> 00:02:58,639
-- and
-- the packaging looks like it's from the seventies because

63
00:02:58,649 --> 00:02:59,259
it is.

64
00:02:59,559 --> 00:02:59,779
But,

65
00:02:59,789 --> 00:03:01,419
and it's funny because there's some subtle things like

66
00:03:01,429 --> 00:03:03,259
the front of the package is yellowy plastic,

67
00:03:03,270 --> 00:03:04,119
the back is white.

68
00:03:04,130 --> 00:03:06,580
So that the cheesy look more orangey.

69
00:03:06,899 --> 00:03:08,529
I don't know. They're amazing. They're so good.

70
00:03:08,539 --> 00:03:12,839
And it was funny because, so Kurt at one point sent me this huge box of cheesy and

71
00:03:13,130 --> 00:03:16,419
some other candy, but I can get the, the other candy you sent me, I can get.

72
00:03:16,429 --> 00:03:17,000
What were they?

73
00:03:17,250 --> 00:03:20,369
Uh, I think it was, um, I'm totally spacing out. Now. What's the Canadian one?

74
00:03:20,380 --> 00:03:21,279
You guys? Coffee Crisp.

75
00:03:21,729 --> 00:03:23,029
-- Yes.
-- Coffee Crisp. Thank you.

76
00:03:23,179 --> 00:03:27,740
The cheesy I can't get here. But the, the other things I, I, they, I can get at stores

77
00:03:27,979 --> 00:03:28,479
and

78
00:03:28,750 --> 00:03:31,470
it was funny because you sent me this huge box and I opened the cheese and I'm like,

79
00:03:31,479 --> 00:03:31,940
holy crap.

80
00:03:31,949 --> 00:03:33,399
These are like the best things I've ever had

81
00:03:33,639 --> 00:03:35,720
and then my kids come home and they're like, what is this?

82
00:03:35,729 --> 00:03:37,919
I'm like, Kurt sent us some stuff and they looked at the box,

83
00:03:37,929 --> 00:03:39,330
uh the package of the cheesy.

84
00:03:39,339 --> 00:03:40,800
They're like, I'm not eating those. Like

85
00:03:41,360 --> 00:03:44,009
you need to eat these. These are the best in hindsight.

86
00:03:44,020 --> 00:03:47,580
I should have let them not eat them because then I would have more for me. No.

87
00:03:47,589 --> 00:03:51,100
Yeah, I do, I do this all the time with my kids where it's like, oh, you're,

88
00:03:51,110 --> 00:03:52,759
you're probably not going to like the Swiss chocolate.

89
00:03:52,770 --> 00:03:53,380
It's pretty,

90
00:03:55,660 --> 00:03:56,270
I know.

91
00:03:56,279 --> 00:03:56,919
I know, man,

92
00:03:56,929 --> 00:03:58,750
I used to have that with my kids where they wouldn't eat

93
00:03:58,759 --> 00:04:00,630
a lot of the snacks I like and now they like them.

94
00:04:00,639 --> 00:04:03,550
It's like, I'll like open a bag of chips or something and,

95
00:04:03,710 --> 00:04:05,750
and an hour later they're gone. I'm like, what happened?

96
00:04:05,759 --> 00:04:09,110
I ate three chips and now they're gone and the kids are like, oh we, we were hungry

97
00:04:09,270 --> 00:04:11,080
goodness freaking parasites.

98
00:04:11,210 --> 00:04:13,929
Anyway. Anyway, we have a real topic we're talking about today.

99
00:04:14,259 --> 00:04:17,869
Forest and trees, forest and trees. Kurt forest and the trees,

100
00:04:17,980 --> 00:04:19,470
forest and trees. So, ok,

101
00:04:19,600 --> 00:04:20,190
so

102
00:04:21,130 --> 00:04:24,600
some history, some background first. So I was at

103
00:04:24,809 --> 00:04:25,609
the

104
00:04:25,730 --> 00:04:27,179
Open Source Summit

105
00:04:27,679 --> 00:04:28,709
last week

106
00:04:28,959 --> 00:04:31,260
which due to the magic of podcasting,

107
00:04:31,269 --> 00:04:34,350
we still released an episode even though we didn't record an episode last week.

108
00:04:34,359 --> 00:04:36,390
And now we are recording an episode the week after.

109
00:04:36,399 --> 00:04:38,390
And funny enough, I'm also on vacation next week.

110
00:04:38,399 --> 00:04:41,190
So there will be an episode released even though

111
00:04:42,089 --> 00:04:43,470
we're not recording anyway.

112
00:04:43,679 --> 00:04:44,230
So

113
00:04:44,519 --> 00:04:46,230
one of the things at the Open source summit

114
00:04:46,239 --> 00:04:49,000
was something called the Global Security Vulnerability Summit,

115
00:04:49,010 --> 00:04:50,459
I think is the name of it G SBS.

116
00:04:51,279 --> 00:04:51,970
And

117
00:04:52,880 --> 00:04:55,160
we talked all about vulnerabilities and obviously,

118
00:04:55,170 --> 00:04:58,109
uh Josh Bucher and myself talked about the GSD,

119
00:04:58,119 --> 00:05:01,100
-- the Global Security Database project at
-- GSD dot ID.

120
00:05:01,220 --> 00:05:03,119
That's true. We is that domain live now.

121
00:05:03,130 --> 00:05:06,049
-- It will be by the time this comes out, I'm sure it was
-- live like two days ago.

122
00:05:06,059 --> 00:05:06,839
Oh, ok.

123
00:05:06,850 --> 00:05:10,339
-- Well, I pay attention, you
-- clicked on it and complained and then I fixed it.

124
00:05:10,350 --> 00:05:13,929
Oh, that's right. I did, I did complain. See, I, I'm old, I forget things, man.

125
00:05:14,040 --> 00:05:15,320
I have no regrets anyway.

126
00:05:15,429 --> 00:05:16,100
Anyway,

127
00:05:16,220 --> 00:05:16,940
so

128
00:05:17,380 --> 00:05:19,339
one of the things that kept coming up

129
00:05:19,350 --> 00:05:22,179
was this how we deal with vulnerabilities today.

130
00:05:22,489 --> 00:05:23,070
And

131
00:05:23,329 --> 00:05:28,070
there is, I think this obsession with individual ideas where we focus

132
00:05:28,390 --> 00:05:28,459
for

133
00:05:28,579 --> 00:05:29,019
JB

134
00:05:29,200 --> 00:05:29,559
BB,

135
00:05:30,359 --> 00:05:31,209
that one's special,

136
00:05:31,399 --> 00:05:32,970
but that's the problem is people then

137
00:05:33,510 --> 00:05:34,750
apply that to everything.

138
00:05:35,019 --> 00:05:36,220
-- That's
-- right. Exactly.

139
00:05:36,519 --> 00:05:38,679
And so I think especially in the vulnerability space.

140
00:05:38,690 --> 00:05:42,029
And we have some examples because this open SSL thing that just came out

141
00:05:42,399 --> 00:05:44,820
and there's even a comment in there from the vim people.

142
00:05:44,929 --> 00:05:48,980
-- The one that has a CV, or the new one that does not have a CV, as of this time,
-- the,

143
00:05:48,989 --> 00:05:50,709
the new one that does not have a CV,

144
00:05:50,720 --> 00:05:53,100
that they're claiming is maybe not a vulnerability,

145
00:05:53,109 --> 00:05:54,429
but that's part of the discussion,

146
00:05:54,700 --> 00:05:55,899
right. So anyway,

147
00:05:56,170 --> 00:05:59,480
and, and part of the discussion that came up is like in the, in the GSD,

148
00:06:00,339 --> 00:06:01,350
I think it's like he's a bit

149
00:06:01,910 --> 00:06:02,019
confidence.

150
00:06:02,480 --> 00:06:03,720
I want to bring up one thing for you.

151
00:06:04,239 --> 00:06:04,940
One thing for us.

152
00:06:04,989 --> 00:06:06,779
So like in the GSD project,

153
00:06:06,790 --> 00:06:10,000
we file all of these issues from the Linux kernel where

154
00:06:10,010 --> 00:06:12,739
Sasha Levin sends us a mail that's basically like I ran,

155
00:06:12,750 --> 00:06:14,510
he has an ML job that looks at kernel

156
00:06:14,519 --> 00:06:16,869
commits for things that are maybe security related.

157
00:06:16,980 --> 00:06:18,320
And so we take all these I DS from him,

158
00:06:18,329 --> 00:06:20,880
we do zero verification and we assign them a bunch of I DS

159
00:06:20,890 --> 00:06:24,779
and then those go into OS V and Google does whatever Google does.

160
00:06:24,839 --> 00:06:25,920
I like how you say we do

161
00:06:26,089 --> 00:06:28,619
zero verification. Like it's a new thing. Like,

162
00:06:28,799 --> 00:06:30,149
I mean, a little hint, folks,

163
00:06:30,160 --> 00:06:33,970
I didn't assign 6000 CV S by actually researching every single one of them.

164
00:06:34,369 --> 00:06:39,559
We admit though that our data has zero verification instead of pretending it does.

165
00:06:39,570 --> 00:06:43,170
-- That's
-- actually
-- not true that one the QR code for Android and iphone, I did verify

166
00:06:43,609 --> 00:06:45,089
because only because I had my phone sitting on my,

167
00:06:45,200 --> 00:06:48,149
-- no,
-- not the kernel, not the kernel stuff, the kernel stuff get zero verification,

168
00:06:48,160 --> 00:06:48,380
right?

169
00:06:48,390 --> 00:06:49,839
I don't look at any of these and say, oh,

170
00:06:49,850 --> 00:06:52,109
maybe this isn't a vulnerability because I don't care.

171
00:06:52,850 --> 00:06:55,350
The point is the purpose behind this isn't

172
00:06:55,359 --> 00:06:58,470
to identify like individual literal security issues.

173
00:06:58,480 --> 00:06:59,589
It's to gain

174
00:06:59,980 --> 00:07:01,269
a corpus of data

175
00:07:01,420 --> 00:07:05,700
that you can then use in a data analysis like environment to make decisions, right?

176
00:07:05,709 --> 00:07:06,549
That's the intent.

177
00:07:06,940 --> 00:07:10,040
And what I boil this down to is is log for JAY is

178
00:07:10,049 --> 00:07:13,049
a good example of something like you should definitely pay attention to this.

179
00:07:13,059 --> 00:07:18,140
Like this specific issue warrants all of your cognitive function at this time.

180
00:07:18,329 --> 00:07:24,880
Versus let's say you have a random node package that has 17 low vulnerabilities.

181
00:07:24,890 --> 00:07:27,640
Do you care about those individually? Absolutely not.

182
00:07:27,890 --> 00:07:30,519
Well, let's, let's be more specific. You have a Linux kernel.

183
00:07:31,010 --> 00:07:35,109
What are you going to do? Like patch it yourself and test it and deploy it?

184
00:07:35,440 --> 00:07:36,609
Well, Google will, yes

185
00:07:37,559 --> 00:07:40,850
and like literally what they do. But that's the thing like, so there's like

186
00:07:40,989 --> 00:07:44,200
a literal handful of organizations that do that globally

187
00:07:44,510 --> 00:07:45,619
actually. No, that's not true.

188
00:07:45,630 --> 00:07:48,230
There's quite a few organizations doing custom Linux kernels,

189
00:07:48,239 --> 00:07:49,790
most of them do not do it very well.

190
00:07:50,690 --> 00:07:51,679
I think you would agree.

191
00:07:51,959 --> 00:07:55,720
Um And we worked at Red Hat. So we've seen the sausage being made for many, many years.

192
00:07:55,970 --> 00:08:00,109
And the reality is like for a Linux kernel, unless you have

193
00:08:00,390 --> 00:08:03,230
millions to tens of millions of dollars per year to

194
00:08:03,239 --> 00:08:05,500
spend on keeping that Linux kernel up to date,

195
00:08:05,799 --> 00:08:07,420
you just use somebody else's.

196
00:08:07,769 --> 00:08:08,730
That's right. That's right.

197
00:08:09,100 --> 00:08:12,239
And, but, but so I think the kernel is a bad example in this context.

198
00:08:12,250 --> 00:08:13,910
I want, let's, let's pick on a note package,

199
00:08:14,299 --> 00:08:15,149
but everybody runs it.

200
00:08:15,160 --> 00:08:18,670
-- It's a great example because it's so universal
-- what they can't do anything with it.

201
00:08:18,679 --> 00:08:21,369
Exactly. So this kind of proves our point. It's a forest.

202
00:08:21,649 --> 00:08:24,619
Well, I mean, in that case, yes, but, but I, I don't,

203
00:08:25,459 --> 00:08:26,690
you're ruining my talking

204
00:08:26,790 --> 00:08:26,829
point.

205
00:08:28,329 --> 00:08:29,559
I agree.

206
00:08:31,260 --> 00:08:33,010
We violently agree at that

207
00:08:33,239 --> 00:08:33,869
point.

208
00:08:34,520 --> 00:08:40,049
OK? So I want to focus on, let's pick on a node package, right? So you could have uh

209
00:08:40,539 --> 00:08:41,869
no, let's pick out Java because log

210
00:08:42,000 --> 00:08:43,219
for J is Java, right? So you've got log

211
00:08:43,349 --> 00:08:44,099
for J, right?

212
00:08:44,309 --> 00:08:44,820
And

213
00:08:45,049 --> 00:08:47,580
you're going to say log for J is

214
00:08:47,969 --> 00:08:49,820
a very important thing and it, it,

215
00:08:49,830 --> 00:08:51,880
it is something I'm going to care about and I'm

216
00:08:51,890 --> 00:08:54,219
going to individually like go seek out and pick on.

217
00:08:54,229 --> 00:08:57,590
Now, let's say you also have 30 other Java libraries

218
00:08:57,809 --> 00:08:58,340
and

219
00:08:58,539 --> 00:09:01,809
there's a variety of vulnerabilities affecting all of them.

220
00:09:02,080 --> 00:09:05,219
And Java actually Java is another good example because upgrading Java

221
00:09:05,580 --> 00:09:07,500
Jars, Java Jars, that's a word.

222
00:09:07,710 --> 00:09:10,099
Um That's hard to do sometimes because of the way

223
00:09:10,109 --> 00:09:12,830
dependencies are kind of intertwined in the Java ecosystem.

224
00:09:12,840 --> 00:09:16,020
It's not quite like node where you can kind of yellow it a little more.

225
00:09:16,340 --> 00:09:19,330
Well, you don't necessarily have access to the original stuff like as

226
00:09:20,109 --> 00:09:20,489
well.

227
00:09:20,500 --> 00:09:21,960
Le let's be real, like at Red Hat,

228
00:09:21,969 --> 00:09:24,650
we shipped a lot of jars for which the source code for that jar.

229
00:09:24,659 --> 00:09:28,130
Like no, that jar got pulled out of some maven thing somewhere. Like

230
00:09:28,479 --> 00:09:29,150
that's true.

231
00:09:30,429 --> 00:09:33,369
No one does it. right. No one does it outside a red hat. No one does it.

232
00:09:33,570 --> 00:09:36,169
So here's where I think things start getting weird.

233
00:09:36,179 --> 00:09:37,789
So I've got this collection of, of

234
00:09:37,960 --> 00:09:38,890
jars.

235
00:09:39,070 --> 00:09:41,020
I have a collection of vulnerabilities

236
00:09:41,219 --> 00:09:41,770
and

237
00:09:41,900 --> 00:09:44,929
upgrading any one of them takes a certain amount of effort.

238
00:09:45,369 --> 00:09:46,950
So now I have to decide

239
00:09:47,200 --> 00:09:51,030
which ones do I care about. What one should I put at the top of the list?

240
00:09:51,080 --> 00:09:52,549
-- It's
-- actually worse than that,

241
00:09:53,200 --> 00:09:54,419
I think. No, it's not worse than that.

242
00:09:54,429 --> 00:09:58,070
This is where I think data analysis becomes important versus saying I'm

243
00:09:58,080 --> 00:10:02,419
going to look at each individual CV E versus saying I'm going to

244
00:10:02,570 --> 00:10:03,859
collect some data.

245
00:10:04,000 --> 00:10:08,719
I'm going to process the data based upon a certain group of heuristics I

246
00:10:08,849 --> 00:10:10,229
care about. And then

247
00:10:10,330 --> 00:10:12,950
I'm going to make my decisions based on the outcome of that.

248
00:10:13,140 --> 00:10:13,369
Well,

249
00:10:13,380 --> 00:10:17,070
and what I was gonna say is it's worse because it's a variable amount of work and risk.

250
00:10:17,210 --> 00:10:20,219
Like you might update one jar massively and like, oh cool,

251
00:10:20,229 --> 00:10:21,590
just works and another jar,

252
00:10:21,599 --> 00:10:24,429
you might like tweak one little thing and the whole thing catches fire

253
00:10:24,650 --> 00:10:26,989
and you have no idea what's gonna happen until you try.

254
00:10:28,229 --> 00:10:32,200
You know, because, and, and to speak to what is important, like, we've had many,

255
00:10:32,210 --> 00:10:32,549
you know,

256
00:10:32,570 --> 00:10:36,479
uh attempts at which of these packages are important versus not important, right?

257
00:10:36,489 --> 00:10:36,750
Like,

258
00:10:37,099 --> 00:10:39,909
you know, there's things that run the internet and things that run on

259
00:10:40,070 --> 00:10:41,799
end points that are not as important.

260
00:10:42,409 --> 00:10:43,679
And then as I always say,

261
00:10:43,690 --> 00:10:46,690
it's kind of the final coffin in the nail or nail in the coffin.

262
00:10:46,900 --> 00:10:49,239
You and I have combined like going on

263
00:10:49,250 --> 00:10:51,969
40 or 50 years of experience handling vulnerabilities

264
00:10:52,330 --> 00:10:53,200
and you and I

265
00:10:53,369 --> 00:10:54,619
given a vulnerability

266
00:10:54,780 --> 00:10:57,000
cannot say if it's going to matter or not.

267
00:10:57,299 --> 00:11:01,510
Like there are vulnerabilities that I like when I worked at Red Hat that I was like,

268
00:11:01,520 --> 00:11:03,820
oh my God, we're going to spend the next six months dealing with this

269
00:11:03,989 --> 00:11:05,840
and it was like a two day thing and gone.

270
00:11:06,070 --> 00:11:07,440
And then there's other things where I'm like,

271
00:11:07,919 --> 00:11:11,119
this is the stupidest thing ever and it ends up eating like two months.

272
00:11:11,869 --> 00:11:16,289
Yeah, I mean, ok, so let's, let's shift our conversation to this open SSL issue now,

273
00:11:16,299 --> 00:11:18,210
which the one that doesn't have

274
00:11:18,549 --> 00:11:19,849
a CD E ID,

275
00:11:19,979 --> 00:11:24,809
we got to back it up a bit because Open SSL three is like a massive rewrite, yay.

276
00:11:25,250 --> 00:11:27,340
And so it is backwards compatible and that they have like

277
00:11:27,349 --> 00:11:30,950
these massive remote code execution and remote command execution flaws,

278
00:11:30,960 --> 00:11:31,190
right?

279
00:11:31,200 --> 00:11:34,929
Like open SSL one hat. Yes, I'm throwing open SSL under the bus a bit because

280
00:11:35,440 --> 00:11:35,690
like

281
00:11:35,820 --> 00:11:37,690
it's open SSL, it should be better than this

282
00:11:38,750 --> 00:11:39,250
really.

283
00:11:39,880 --> 00:11:40,340
You know,

284
00:11:40,559 --> 00:11:43,260
it's not like it runs on public facing internet

285
00:11:43,979 --> 00:11:46,460
everywhere. Yeah, like all of it and your TV.

286
00:11:46,719 --> 00:11:47,340
And so

287
00:11:48,070 --> 00:11:52,090
they released 301302303303 is found to have

288
00:11:52,099 --> 00:11:54,500
a command injection flaw like really bad.

289
00:11:55,150 --> 00:11:56,710
So they released 304 to fix it.

290
00:11:57,200 --> 00:11:57,359
Cool

291
00:11:57,659 --> 00:11:58,770
304

292
00:11:58,940 --> 00:11:59,880
has

293
00:11:59,989 --> 00:12:04,880
a heap buffer overflow and more fun doesn't want to compile properly.

294
00:12:04,890 --> 00:12:07,559
And people can't, basically, people can't ship 304.

295
00:12:07,650 --> 00:12:10,080
So now you have a situation where not only do you have

296
00:12:10,090 --> 00:12:12,640
a new flaw in like you have a flaw in 304,

297
00:12:12,650 --> 00:12:13,530
that's exploitable,

298
00:12:13,909 --> 00:12:18,909
but people aren't shipping 304 updates to fix the 303 security update,

299
00:12:19,210 --> 00:12:19,450
right?

300
00:12:19,599 --> 00:12:21,599
Because it's broken. So I would actually argue at this point.

301
00:12:21,609 --> 00:12:22,739
I'm kind of thinking it needs

302
00:12:23,119 --> 00:12:23,880
two.

303
00:12:24,679 --> 00:12:27,780
Maybe like I already assigned it one vulnerability identifier for the

304
00:12:27,789 --> 00:12:31,739
heat buffer overflow because it's pretty clear that it's probably exploitable.

305
00:12:31,750 --> 00:12:32,320
Well, ok.

306
00:12:32,380 --> 00:12:33,380
And I love that people like, oh,

307
00:12:33,390 --> 00:12:37,580
it only affects systems with a VX support and I'm like, cool, I look it up.

308
00:12:37,590 --> 00:12:40,609
-- Yeah, that's everything since like 2013.
-- It's, it's a lot.

309
00:12:40,619 --> 00:12:41,979
Well, they've discontinued it.

310
00:12:41,989 --> 00:12:43,330
So the brand new things don't,

311
00:12:43,340 --> 00:12:45,880
-- but it doesn't matter
-- because we all have brand new servers.

312
00:12:46,030 --> 00:12:46,359
Yeah.

313
00:12:46,650 --> 00:12:47,070
Yeah.

314
00:12:47,080 --> 00:12:47,700
But here's,

315
00:12:47,710 --> 00:12:50,510
here's where I think this gets dicey is I will

316
00:12:50,520 --> 00:12:53,469
put a link to the register story that's very good.

317
00:12:53,479 --> 00:12:59,669
And the actual issue from open SSL and one of the developers basically said,

318
00:12:59,750 --> 00:13:01,710
I don't think this is a security issue

319
00:13:01,869 --> 00:13:02,950
with no

320
00:13:03,099 --> 00:13:04,500
evidence at, at

321
00:13:04,659 --> 00:13:05,380
all.

322
00:13:05,679 --> 00:13:10,429
It has no CV E because UPSTREAM said we don't think this is a security issue

323
00:13:10,890 --> 00:13:14,030
and I think that's problematic. What, what is the saying?

324
00:13:14,039 --> 00:13:17,190
Extraordinary claims require extraordinary evidence.

325
00:13:17,390 --> 00:13:20,250
Yeah, I, I don't know why they haven't assigned it A CV because in my mind,

326
00:13:20,260 --> 00:13:22,630
if it gets a CV E and it gets some attention,

327
00:13:23,739 --> 00:13:24,400
then

328
00:13:24,729 --> 00:13:25,760
I mean, it's open a cell.

329
00:13:25,770 --> 00:13:29,770
It is one of those sort of special packages because it is so public facing, right?

330
00:13:29,780 --> 00:13:30,229
Like it's,

331
00:13:30,539 --> 00:13:30,840
it's,

332
00:13:30,849 --> 00:13:33,030
you can't hide it behind a proxy because while your

333
00:13:33,039 --> 00:13:35,520
proxy is going to be running open SSL probably.

334
00:13:35,530 --> 00:13:36,159
Exactly.

335
00:13:36,260 --> 00:13:37,890
And so I get, you know, um

336
00:13:38,000 --> 00:13:42,599
without going into detail, we kind of know how the open SSL sausage culture is made

337
00:13:42,919 --> 00:13:45,320
and they kind of don't like these things, you know,

338
00:13:45,330 --> 00:13:48,520
they want to have a nice crypto library that's secure and

339
00:13:48,690 --> 00:13:49,729
doesn't have a lot of CV S.

340
00:13:50,130 --> 00:13:51,479
You know, I come from

341
00:13:52,059 --> 00:13:52,559
like,

342
00:13:52,739 --> 00:13:58,070
OK, to put this in perspective, I have a list of like 200 projects,

343
00:13:58,080 --> 00:14:01,330
home renovations to do around my house, most of which will probably never get done,

344
00:14:01,369 --> 00:14:03,960
but I've documented them and put them in my, to do system

345
00:14:04,320 --> 00:14:06,960
so that I don't forget them and that they're there. So I kind of have an idea.

346
00:14:06,969 --> 00:14:08,200
Like, oh, fun fact.

347
00:14:08,210 --> 00:14:11,330
Last week I learned because I had all my lines marked, my power line

348
00:14:11,520 --> 00:14:13,900
goes straight under the big tree in front of my house.

349
00:14:13,909 --> 00:14:16,080
And Josh, of course, is very helpful. Like, oh, don't worry about it.

350
00:14:16,090 --> 00:14:19,390
It's at least 8 ft down and the roots won't touch it. I'm like, fun fact.

351
00:14:19,400 --> 00:14:21,119
That's not what the line marker guy said.

352
00:14:22,130 --> 00:14:23,580
It's only four feet down.

353
00:14:23,710 --> 00:14:26,780
I mean, trees generally don't break.

354
00:14:27,530 --> 00:14:28,849
No, no, no, it's, it's my

355
00:14:29,619 --> 00:14:32,020
-- line go under the tree also,
-- but it's plastic.

356
00:14:32,229 --> 00:14:34,190
But the concern was I might have to at some

357
00:14:34,200 --> 00:14:36,580
point remove the tree because it's not doing very well.

358
00:14:36,590 --> 00:14:38,340
I had it trimmed. So hopefully it's a bit healthier.

359
00:14:38,349 --> 00:14:41,580
It's the one that the pickup truck hit. Right. So the tree took a lot of damage,

360
00:14:42,289 --> 00:14:45,659
you know. And so anyway, it's like I would rather

361
00:14:46,109 --> 00:14:46,900
know,

362
00:14:47,469 --> 00:14:51,109
like I have a list of like all these stupid niggly little details.

363
00:14:51,119 --> 00:14:54,179
Like there's cracked grout between the transition of the bathroom and

364
00:14:54,190 --> 00:14:55,640
the floor that I need to fix at some point.

365
00:14:55,650 --> 00:14:57,020
Like all these stupid little things

366
00:14:57,200 --> 00:15:00,450
that I'll probably never fix, but I know about them and I, I don't have to like, like,

367
00:15:00,460 --> 00:15:02,809
I don't have a lot of mystery and unknown problems in

368
00:15:02,820 --> 00:15:05,330
my house because I've basically found them all undocumented them.

369
00:15:05,479 --> 00:15:07,119
And that's kind of how I feel about software.

370
00:15:07,169 --> 00:15:10,419
I would much rather you come to me and be like, Kurt, here's a list of like, well,

371
00:15:10,429 --> 00:15:11,539
like the Linux kernel people,

372
00:15:11,549 --> 00:15:15,460
here's a list of like 5000 possible defects versus like, that's probably fine.

373
00:15:15,469 --> 00:15:16,820
You should just run it, don't worry.

374
00:15:16,950 --> 00:15:18,549
And, and I, I agree with that.

375
00:15:18,590 --> 00:15:22,140
People have successfully ignored this stuff up until now by definition.

376
00:15:22,710 --> 00:15:23,500
OK?

377
00:15:23,909 --> 00:15:24,820
I think

378
00:15:25,109 --> 00:15:29,419
they have ignored it. But the why is where we will probably disagree a little bit.

379
00:15:29,429 --> 00:15:30,099
I think,

380
00:15:30,630 --> 00:15:33,010
I don't think people are ignoring this stuff on purpose.

381
00:15:33,020 --> 00:15:34,729
I think there is a perception

382
00:15:34,960 --> 00:15:38,570
that the quality of existing vulnerability data

383
00:15:38,729 --> 00:15:40,450
is a very high bar

384
00:15:40,669 --> 00:15:42,479
and it somehow comes with

385
00:15:42,599 --> 00:15:45,359
some sort of, I guess assertion of truth.

386
00:15:46,119 --> 00:15:48,080
And I think anyone who's done investigating into

387
00:15:48,090 --> 00:15:50,330
this data understands that's definitely not true.

388
00:15:50,549 --> 00:15:51,809
So many people seem to think of

389
00:15:52,059 --> 00:15:54,919
the e means miter validates it in some way and it's like, right

390
00:15:55,190 --> 00:15:55,789
or no. Right.

391
00:15:55,890 --> 00:15:59,219
Well, I mean, there's, again, this is, I think part of the,

392
00:15:59,330 --> 00:16:02,909
the, the legend turns to myth sort of problem where

393
00:16:03,090 --> 00:16:07,250
over the years there's been a complete lack of transparency in education.

394
00:16:07,260 --> 00:16:10,960
And so a lot of this is taken on myth like qualities.

395
00:16:11,239 --> 00:16:11,440
Yeah.

396
00:16:11,669 --> 00:16:12,599
So let's first a myth

397
00:16:12,719 --> 00:16:13,400
number one,

398
00:16:13,659 --> 00:16:15,820
-- you can't test all the vulnerabilities.
-- Ok?

399
00:16:15,830 --> 00:16:17,500
Look, I don't want to talk about vulnerabilities.

400
00:16:17,510 --> 00:16:20,750
I think there's a better conversation here instead of

401
00:16:20,760 --> 00:16:23,020
hashing out why everything we do today is terrible.

402
00:16:23,250 --> 00:16:24,400
So which it is.

403
00:16:24,549 --> 00:16:24,960
But

404
00:16:25,229 --> 00:16:27,719
OK, so here's where I think it gets really interesting, right?

405
00:16:27,729 --> 00:16:31,289
So open SSL says, I don't think this is an issue, no evidence.

406
00:16:31,580 --> 00:16:34,510
And then there's a comment in here

407
00:16:34,650 --> 00:16:37,520
that says this is from uh a vim developer.

408
00:16:37,530 --> 00:16:39,369
I believe it says I'm gonna read it verbatim.

409
00:16:39,380 --> 00:16:39,989
Actually,

410
00:16:40,000 --> 00:16:41,770
I don't like the idea of marking every

411
00:16:41,780 --> 00:16:44,429
heat vulnerability overflow as a security vulnerability.

412
00:16:44,679 --> 00:16:47,179
Them has started to do such thing in this year.

413
00:16:47,190 --> 00:16:49,919
Actually, he might not be uh a developer. I don't know, I I shouldn't say that.

414
00:16:49,929 --> 00:16:50,359
Anyway,

415
00:16:50,479 --> 00:16:55,150
di has started to do such thing that's like as as written such thing in this year.

416
00:16:55,250 --> 00:16:57,179
Now we are being noised

417
00:16:57,489 --> 00:17:02,859
about 10 high severity vim CV ES per month without any exploit in practice.

418
00:17:03,179 --> 00:17:06,479
I think we shouldn't mark bugs as security vulnerability unless we have

419
00:17:06,489 --> 00:17:09,680
some evidence showing it can or at least may be exploitable.

420
00:17:09,689 --> 00:17:10,108
Well,

421
00:17:10,118 --> 00:17:13,449
and we have some evidence and some suggestion

422
00:17:13,459 --> 00:17:16,030
of exploit ability by the fact that somebody reported

423
00:17:16,699 --> 00:17:16,829
AAA

424
00:17:17,020 --> 00:17:18,680
heat puff overflow.

425
00:17:19,060 --> 00:17:19,719
I mean, but

426
00:17:20,130 --> 00:17:21,608
overflows are

427
00:17:22,098 --> 00:17:23,880
they very likely don't matter?

428
00:17:23,890 --> 00:17:26,739
True and well, same thing with null point or D references. But you know what?

429
00:17:26,750 --> 00:17:27,400
There's also,

430
00:17:27,410 --> 00:17:29,280
I remember there were all these classes

431
00:17:29,290 --> 00:17:31,380
of vulnerabilities that could not be exploited.

432
00:17:31,390 --> 00:17:32,920
And then somebody invented like what,

433
00:17:33,189 --> 00:17:34,250
you know, return oriented

434
00:17:34,469 --> 00:17:36,859
point or D references, you can do anything with those

435
00:17:37,219 --> 00:17:40,729
like or I remember this one again, you know, there was this,

436
00:17:40,739 --> 00:17:43,339
it was a Microsoft vulnerably probably 1015 years ago.

437
00:17:43,349 --> 00:17:44,560
I think it was an internet explorer

438
00:17:44,780 --> 00:17:49,780
and it was like, literally you could write one or two bytes of memory. So like

439
00:17:49,939 --> 00:17:50,819
we fixed it,

440
00:17:51,010 --> 00:17:51,510
we can't do that,

441
00:17:51,839 --> 00:17:52,859
like really come on

442
00:17:53,420 --> 00:17:57,239
and like, oh no, like 24 hours later we had exploit code for it.

443
00:17:57,569 --> 00:18:01,400
Uh Tavis did that once with a vulnerability in something where I think

444
00:18:01,410 --> 00:18:04,390
it was a one bite buffer overflow and we were all like whatever,

445
00:18:04,400 --> 00:18:08,290
this isn't exploitable and he was like challenge accepted and he totally hit it.

446
00:18:08,300 --> 00:18:10,750
Did get Lotus 123 running on Linux. It's

447
00:18:11,060 --> 00:18:15,319
true like the guy is he's a legend for sure. But, but anyway,

448
00:18:15,520 --> 00:18:16,010
so

449
00:18:16,319 --> 00:18:20,189
I think there's two pieces to this conversation specifically in the

450
00:18:20,489 --> 00:18:21,750
github. One thing I don't understand is

451
00:18:22,199 --> 00:18:24,400
when they say being noised that like so OK,

452
00:18:24,410 --> 00:18:29,060
so there's like if I get 1000 CV S pouring out for stuff I use, how does that matter?

453
00:18:29,069 --> 00:18:32,380
More than 10? Well, that the implication is I'm handling this manually.

454
00:18:32,800 --> 00:18:35,619
Well, right. OK. So here's, here's how this happens.

455
00:18:35,640 --> 00:18:37,400
Let me explain how this works because I,

456
00:18:37,410 --> 00:18:39,569
I literally am in the middle of this all the time.

457
00:18:39,910 --> 00:18:40,500
And

458
00:18:40,790 --> 00:18:41,439
so

459
00:18:41,670 --> 00:18:43,329
this person is probably running a

460
00:18:43,339 --> 00:18:46,250
vulnerability scanner against general often containers

461
00:18:46,579 --> 00:18:49,189
and it's going to report all the findings and

462
00:18:49,430 --> 00:18:52,030
they're using usually the CV SS scores which

463
00:18:52,040 --> 00:18:54,500
are hilariously wrong for a million reasons.

464
00:18:55,150 --> 00:18:55,910
And

465
00:18:56,479 --> 00:19:02,790
so I've got this list of vulnerabilities and it is very common for customers or your,

466
00:19:02,800 --> 00:19:06,449
your security team or whoever to literally show up with the list,

467
00:19:06,459 --> 00:19:09,290
the verbatim list and say, fix all of these issues.

468
00:19:09,300 --> 00:19:15,329
And then as a software developer, you're often just fix them because like,

469
00:19:15,339 --> 00:19:17,449
uh if you can upgrade components or whatever that,

470
00:19:17,459 --> 00:19:19,969
that quite often makes the problems go away

471
00:19:20,290 --> 00:19:21,930
versus saying

472
00:19:22,290 --> 00:19:24,640
here is a list of vulnerabilities

473
00:19:25,040 --> 00:19:27,209
and I'm going to use this data to

474
00:19:27,219 --> 00:19:30,260
make intelligent decisions about what I should be doing

475
00:19:30,400 --> 00:19:33,739
with my underlying dependencies and no one does that today.

476
00:19:33,750 --> 00:19:36,020
But that's like that's what we need to do. And so instead

477
00:19:36,290 --> 00:19:39,020
we end up in these situations where you have people saying,

478
00:19:39,229 --> 00:19:42,109
oh, we should only be filing vulnerabilities for things.

479
00:19:42,119 --> 00:19:47,089
We can 100% prove our vulnerabilities versus saying this is like a dial of risk,

480
00:19:47,099 --> 00:19:47,560
right?

481
00:19:47,569 --> 00:19:49,180
Where if, if I have

482
00:19:49,319 --> 00:19:55,569
100 buffer overflows and no evidence of exploit ability like that dial isn't a 10,

483
00:19:55,579 --> 00:19:56,550
but it's probably around

484
00:19:56,650 --> 00:19:57,709
five, you know,

485
00:19:57,849 --> 00:20:01,020
it's worse than that because there are vulnerabilities that

486
00:20:01,030 --> 00:20:04,709
are provably exploitable like Jackson data bind data de

487
00:20:04,810 --> 00:20:07,250
serialization, like those things are always exploitable.

488
00:20:07,319 --> 00:20:11,380
And for example, red hat satellite server uses Jackson data bind but does not.

489
00:20:11,390 --> 00:20:15,109
And my understanding is probably will never use that de serialization stuff.

490
00:20:15,199 --> 00:20:16,910
And so that's where I would spend time

491
00:20:17,540 --> 00:20:21,250
trying to educate customers as to why we didn't have to immediately fix this.

492
00:20:21,459 --> 00:20:22,839
You know, I'd be like, I'm like,

493
00:20:23,250 --> 00:20:27,989
like we number like here's the function that's affected, here's our source code,

494
00:20:28,000 --> 00:20:29,109
we don't use that function

495
00:20:29,609 --> 00:20:30,010
and

496
00:20:30,130 --> 00:20:33,640
it was often easier to just be like with the devs like, yeah, we're just,

497
00:20:33,650 --> 00:20:36,640
we're gonna have to upgrade that because man, like these finance people are just

498
00:20:37,069 --> 00:20:39,640
they, they got all the CV, they got like the hole.

499
00:20:39,939 --> 00:20:43,420
And I think this also speaks to how people fix security flaws, which is

500
00:20:43,630 --> 00:20:45,640
they don't have good management systems.

501
00:20:45,650 --> 00:20:46,510
They can't say, oh,

502
00:20:46,520 --> 00:20:50,849
we for sure have this configuration setting enabled to cross the board 100%

503
00:20:50,989 --> 00:20:53,270
because there's been a lot of bad vulnerabilities where

504
00:20:53,280 --> 00:20:54,619
it's like a simple config change of boop.

505
00:20:54,630 --> 00:20:55,079
You're done.

506
00:20:55,449 --> 00:21:00,300
Like a great example being that windows, remote data, telemetry, MS DT something,

507
00:21:00,310 --> 00:21:03,079
something, something where you know, you have like you click a URL and

508
00:21:03,739 --> 00:21:07,319
like code execution or command execution, sorry, command execution.

509
00:21:07,660 --> 00:21:10,800
And there's you remove one key from the registry hive

510
00:21:11,020 --> 00:21:11,400
that

511
00:21:11,630 --> 00:21:13,489
provides that protocol handler and just,

512
00:21:14,010 --> 00:21:15,099
well, you're safe, right?

513
00:21:15,109 --> 00:21:17,880
So I ran that on my computer, my son's computer, my son's other computer

514
00:21:18,079 --> 00:21:19,089
and I'm like, cool, we're done.

515
00:21:19,130 --> 00:21:22,739
But I have no idea if that register key is like magically reappeared. I hope not.

516
00:21:22,750 --> 00:21:25,260
I should check, but most people can't do that.

517
00:21:25,270 --> 00:21:28,760
So their response is the only way the only tool I have is to, I

518
00:21:29,130 --> 00:21:30,510
can check software versions.

519
00:21:31,199 --> 00:21:35,199
So. Right. Right. All I got is a big hammer. Everything better be a nail.

520
00:21:35,209 --> 00:21:36,209
And so they can't,

521
00:21:36,449 --> 00:21:37,699
they can't do these clever,

522
00:21:37,709 --> 00:21:40,420
like how much traffic on Twitter do you see where they're talking about?

523
00:21:40,430 --> 00:21:43,140
These clever GPO fixes where you can change group policy

524
00:21:43,150 --> 00:21:46,229
objects and windows to close all sorts of security flaws.

525
00:21:46,619 --> 00:21:47,010
Right.

526
00:21:47,130 --> 00:21:47,569
And

527
00:21:47,699 --> 00:21:49,180
people just can't

528
00:21:49,380 --> 00:21:53,040
like they just don't have the tooling or the process to do that at their company.

529
00:21:53,199 --> 00:21:57,010
And so they have to update software or buy third party software to do it or whatever.

530
00:21:57,609 --> 00:21:59,170
And I think that's a big part of the problem is

531
00:21:59,319 --> 00:22:01,579
the industry traditionally

532
00:22:01,770 --> 00:22:05,560
like management and orchestration tools are only really available

533
00:22:05,750 --> 00:22:06,819
in the last 10 years

534
00:22:06,930 --> 00:22:07,609
prior to that.

535
00:22:07,619 --> 00:22:09,869
It was all commercial stuff that was horrifically expensive,

536
00:22:09,880 --> 00:22:11,229
complicated and terrible,

537
00:22:12,130 --> 00:22:12,589
right?

538
00:22:13,319 --> 00:22:15,949
But stuff like Kubernetes, Anzel Salt Puppet,

539
00:22:15,959 --> 00:22:18,930
that's all kind of recent in the last 10 years.

540
00:22:19,209 --> 00:22:20,819
And a lot of people still don't use them.

541
00:22:21,500 --> 00:22:24,969
-- I mean, but I, I don't think this is necessarily,
-- well, it's,

542
00:22:24,979 --> 00:22:27,479
it's the culture of how we got to, why do we,

543
00:22:27,489 --> 00:22:31,000
why is the only solution to fix a vulnerability to upgrade the software?

544
00:22:31,060 --> 00:22:35,589
-- I mean, in because in a lot of cases it is the only solution
-- true but not always,

545
00:22:35,599 --> 00:22:36,170
always,

546
00:22:36,329 --> 00:22:38,079
not always, not always. But again,

547
00:22:38,250 --> 00:22:40,739
I think this is where we come back to

548
00:22:40,859 --> 00:22:43,869
that whole concept of forest versus trees where I think

549
00:22:44,079 --> 00:22:45,849
when you're looking at a tree,

550
00:22:46,089 --> 00:22:47,079
a log for Jay

551
00:22:47,709 --> 00:22:49,780
like there were mitigations for that, right?

552
00:22:49,790 --> 00:22:54,239
And I'm perfectly comfortable saying go deploy these mitigations while we wait for

553
00:22:54,250 --> 00:22:57,560
an update because there's a million reasons you can't update something right away

554
00:22:57,829 --> 00:23:00,520
like this is where always like it takes time,

555
00:23:01,130 --> 00:23:02,329
right? I mean, right.

556
00:23:02,339 --> 00:23:02,719
It, it,

557
00:23:02,729 --> 00:23:07,079
it's not instantaneous or you have to go to your vendor or you have to do your test,

558
00:23:07,089 --> 00:23:08,560
whatever there's a million reasons, right?

559
00:23:08,569 --> 00:23:12,920
Blog for J is a tree and anything that deserves a mitigation is kind of it,

560
00:23:12,930 --> 00:23:15,864
it needs to be important enough to earn mitigation,

561
00:23:16,035 --> 00:23:19,314
not everything does not, everything will in upgrading is the only answer.

562
00:23:19,324 --> 00:23:22,665
But again, this is where I think we come back to this concept of like zooming out

563
00:23:23,324 --> 00:23:26,984
looking at the data and saying I'm going to use this data as part of a

564
00:23:26,994 --> 00:23:30,234
risk calculation to decide what packages should I

565
00:23:30,244 --> 00:23:32,275
update first and what packages will I up?

566
00:23:32,305 --> 00:23:32,625
I mean,

567
00:23:33,089 --> 00:23:36,890
in all seriousness, we did this at Red Hat when we were working on

568
00:23:37,119 --> 00:23:39,650
all of the Linuxes because we had more

569
00:23:39,819 --> 00:23:43,569
vulnerabilities than we could fix just because of resources.

570
00:23:43,579 --> 00:23:45,890
So we would rank them in order and say

571
00:23:46,209 --> 00:23:48,069
this is the stuff we're going to fix now,

572
00:23:48,099 --> 00:23:50,729
this is the stuff we'll probably never get to.

573
00:23:51,079 --> 00:23:51,670
But

574
00:23:51,869 --> 00:23:53,130
but if we do

575
00:23:53,250 --> 00:23:57,109
-- it will be
-- last and like, it would be funny too because once in a while, like a,

576
00:23:57,119 --> 00:23:59,369
a DEV team would bump a component like

577
00:24:00,150 --> 00:24:02,680
a lot because new features and stuff

578
00:24:02,819 --> 00:24:03,209
and,

579
00:24:03,560 --> 00:24:05,550
you know, they'd be like, well, Red Hat did this.

580
00:24:05,560 --> 00:24:08,969
If you look at the Red Hat log for Jrh Sas,

581
00:24:09,140 --> 00:24:11,800
there's a couple of them that have like over 100 CV ES

582
00:24:12,239 --> 00:24:14,689
because they bumped some Java component, like from

583
00:24:15,459 --> 00:24:18,060
basically from 2010 to 2020

584
00:24:18,170 --> 00:24:18,569
right?

585
00:24:18,930 --> 00:24:21,949
Like it had like 10 years of security fixes all of a sudden applied

586
00:24:22,290 --> 00:24:22,750
and

587
00:24:23,310 --> 00:24:25,239
well, obviously it didn't matter that much because it,

588
00:24:25,369 --> 00:24:27,760
but that's another great example, right? Of where

589
00:24:28,209 --> 00:24:30,569
if you bump a really old component that had a lot

590
00:24:30,579 --> 00:24:33,800
of really lame problems or problems that didn't even affect you.

591
00:24:33,910 --> 00:24:37,160
But then Red Hat would do the right thing and add them to their advisory.

592
00:24:37,170 --> 00:24:39,520
But then they'd look like crap because people were like, oh my goodness,

593
00:24:39,530 --> 00:24:42,290
Red Hat just fixed 500 issues and 11 advisory.

594
00:24:42,300 --> 00:24:43,869
What a bunch of clowns it's like, no,

595
00:24:44,040 --> 00:24:47,719
they're just giving you the metadata. You need to understand what's going on here.

596
00:24:47,729 --> 00:24:48,859
Like they're not bad,

597
00:24:48,869 --> 00:24:51,280
they're actually doing the right thing and they're getting punished for it.

598
00:24:51,729 --> 00:24:53,709
And I feel like all this vulnerability stuff,

599
00:24:53,719 --> 00:24:58,609
if you assign enough vulnerabilities to your product for things that are maybe

600
00:24:58,770 --> 00:25:00,709
you will be punished versus someone who

601
00:25:00,719 --> 00:25:03,550
purposely hides vulnerabilities today and that's wrong.

602
00:25:03,560 --> 00:25:04,550
Look, at how

603
00:25:04,729 --> 00:25:07,050
you were on the receiving end of all these scan reports.

604
00:25:07,060 --> 00:25:10,770
And the problem was less the scan reports and more the solution they wanted,

605
00:25:10,780 --> 00:25:12,439
which is I want a clean CV scan,

606
00:25:12,839 --> 00:25:14,810
right? They want to clean scan. And II

607
00:25:14,969 --> 00:25:18,939
I keep telling people if your scan is clean, you're either lying

608
00:25:19,160 --> 00:25:20,459
or the scanner is broken.

609
00:25:20,520 --> 00:25:24,670
-- And,
-- and but, but that's a very immature way to view security.

610
00:25:24,680 --> 00:25:27,030
Like a great example being your your home inspection story,

611
00:25:27,040 --> 00:25:27,920
you know where it's like,

612
00:25:28,280 --> 00:25:28,770
no,

613
00:25:29,260 --> 00:25:31,550
like we're not fixing like you buy the house. We don't

614
00:25:31,760 --> 00:25:32,420
and, and that's the

615
00:25:32,650 --> 00:25:36,660
like I had a house inspection. Well, and now I have a list of 200 projects.

616
00:25:36,670 --> 00:25:37,560
Some of which are like

617
00:25:37,760 --> 00:25:38,979
my roof leaks

618
00:25:39,660 --> 00:25:40,449
like the roof,

619
00:25:40,739 --> 00:25:40,819
that

620
00:25:40,969 --> 00:25:43,839
one. Ok. Leaky roof like that, that's

621
00:25:43,949 --> 00:25:43,959
a

622
00:25:44,180 --> 00:25:44,839
-- tree
-- when I had,

623
00:25:45,400 --> 00:25:46,770
when I had the roofing guy go up there.

624
00:25:46,780 --> 00:25:48,689
He's like, oh yeah, so your shingles aren't sealing properly like, yeah,

625
00:25:48,699 --> 00:25:49,920
I noticed a couple of them flapping in the wind,

626
00:25:49,930 --> 00:25:53,040
but I didn't realize it was like three rows of shingles, right?

627
00:25:53,050 --> 00:25:55,109
It's like really bad. And I'm like, again,

628
00:25:55,310 --> 00:25:56,750
house inspector, like

629
00:25:57,410 --> 00:25:58,310
how did you miss that?

630
00:25:59,319 --> 00:26:00,560
Because he literally he stuck his hand.

631
00:26:01,989 --> 00:26:02,359
I mean,

632
00:26:02,489 --> 00:26:06,160
some of them are incompetent. Some of them just miss it because they, they miss it.

633
00:26:06,170 --> 00:26:06,630
And,

634
00:26:06,859 --> 00:26:09,579
and that's part of the game though, right? Is

635
00:26:10,130 --> 00:26:11,630
any time you're

636
00:26:12,060 --> 00:26:14,619
trying to look for really any sort of

637
00:26:14,630 --> 00:26:17,030
data and this is true of vulnerability landscapes

638
00:26:17,040 --> 00:26:18,579
like you're going to miss things or going

639
00:26:18,589 --> 00:26:20,250
to be false negatives where they get missed.

640
00:26:20,319 --> 00:26:22,099
You know, I just realized here's, here's the challenge.

641
00:26:22,109 --> 00:26:26,430
-- Proving a negative is basically impossible.
-- It is logically impossible.

642
00:26:26,619 --> 00:26:26,770
But

643
00:26:27,439 --> 00:26:30,810
it follows that proving that you found all the positives,

644
00:26:30,819 --> 00:26:34,505
like all the real positives proving that you found all of them, meaning thus

645
00:26:34,785 --> 00:26:37,555
proving the negative of there are no more remaining ones

646
00:26:37,755 --> 00:26:38,984
is basically impossible.

647
00:26:39,665 --> 00:26:40,064
Impossible.

648
00:26:40,125 --> 00:26:40,405
Yes,

649
00:26:40,415 --> 00:26:42,805
I I think it boils down to a lot of people don't

650
00:26:42,814 --> 00:26:47,194
have mature management of their it systems and by mature management,

651
00:26:47,204 --> 00:26:49,805
I mean basic stuff like inventorying like what all do you have?

652
00:26:50,114 --> 00:26:51,324
Because for example,

653
00:26:51,334 --> 00:26:53,864
something very simple like doing SPF center

654
00:26:53,875 --> 00:26:55,655
policy framework for your email servers.

655
00:26:55,805 --> 00:26:58,084
That should be trivial because you should know

656
00:26:58,369 --> 00:27:02,910
every single system you have set up to send email like from your domains, right?

657
00:27:03,000 --> 00:27:04,719
You should have that as part of your it

658
00:27:05,160 --> 00:27:05,900
inventory

659
00:27:06,359 --> 00:27:06,829
and

660
00:27:07,479 --> 00:27:08,420
most people don't.

661
00:27:08,430 --> 00:27:09,989
And so they have like a tilda all or even

662
00:27:10,000 --> 00:27:12,079
a question mark all policy of like whatever man,

663
00:27:12,089 --> 00:27:13,800
like just let

664
00:27:13,930 --> 00:27:16,199
it like if you don't even have basic inventory,

665
00:27:16,209 --> 00:27:18,540
if you don't even know what systems you have all.

666
00:27:19,160 --> 00:27:20,300
But how can you secure them?

667
00:27:21,079 --> 00:27:25,780
It's like, oh that building in my backyard is, oh, it's mine. I'm responsible for it.

668
00:27:25,790 --> 00:27:26,300
Whoops.

669
00:27:27,000 --> 00:27:29,000
Like that's literally where a lot of it is.

670
00:27:29,010 --> 00:27:33,640
They have entire, you know, shadow it Right. That's a phrase because it's a thing.

671
00:27:33,709 --> 00:27:34,699
-- I,
-- OK,

672
00:27:34,709 --> 00:27:40,380
I think you've gone too far down the path for this conversation because I think I,

673
00:27:40,390 --> 00:27:44,300
I want to focus on, like, I think the big problem today we have in the,

674
00:27:44,310 --> 00:27:47,219
the security space specifically vulnerabilities is that

675
00:27:48,040 --> 00:27:50,589
we don't have this concept of,

676
00:27:50,599 --> 00:27:55,150
of risk as like a floating point number between zero and one.

677
00:27:55,430 --> 00:28:01,280
We have this infantile view of risk often as binary of risk or not risk.

678
00:28:01,430 --> 00:28:03,869
And that that doesn't, that's not real, right?

679
00:28:03,880 --> 00:28:06,550
And also how it applies to different parts of your systems

680
00:28:07,099 --> 00:28:07,130
in

681
00:28:07,300 --> 00:28:07,709
different aspects.

682
00:28:08,810 --> 00:28:10,530
You know, like the CS A is a great example.

683
00:28:10,540 --> 00:28:13,689
We have some sensitive pi I in sales force and I,

684
00:28:13,699 --> 00:28:18,050
I do my best to make sure that it's only in sales force and it never goes anywhere else

685
00:28:18,800 --> 00:28:20,930
because then I only have the one system to worry about

686
00:28:21,869 --> 00:28:26,130
or like a great example. If I have a system on the internet running

687
00:28:26,300 --> 00:28:28,369
open SSL three R four,

688
00:28:28,849 --> 00:28:31,530
that's a very different story than if I have a system in my basement

689
00:28:31,750 --> 00:28:35,250
running open SSL three da 0.4 like both have risk.

690
00:28:35,390 --> 00:28:35,810
But

691
00:28:36,020 --> 00:28:39,010
if you just treat it as binary risk, they're even, they're both one.

692
00:28:39,290 --> 00:28:42,439
But the reality is the one on the internet is probably like 0.9

693
00:28:42,449 --> 00:28:44,359
and the one in my basement is going to be like a 0.3

694
00:28:44,900 --> 00:28:46,709
I care. I'll get to it eventually.

695
00:28:46,719 --> 00:28:48,469
-- So with CV
-- SS scoring there is that

696
00:28:48,479 --> 00:28:51,530
aspect of temporal and environmental risk that you're

697
00:28:52,189 --> 00:28:53,339
uses. And that's my question.

698
00:28:53,349 --> 00:28:57,910
Does anybody actually apply that internally to get the full score?

699
00:28:58,170 --> 00:28:59,670
-- I
-- mean, I'm sure there are,

700
00:28:59,680 --> 00:29:02,349
there are probably organizations that you're going to have to be

701
00:29:02,589 --> 00:29:04,630
comically mature to do that.

702
00:29:04,640 --> 00:29:07,589
Well, at a minimum, you have to know what you have, what versions.

703
00:29:08,050 --> 00:29:08,900
Right. Absolutely.

704
00:29:09,069 --> 00:29:11,319
-- Absolutely.
-- Already put you in the 1%

705
00:29:11,790 --> 00:29:13,540
-- 1
-- percent.

706
00:29:14,500 --> 00:29:14,689
It's

707
00:29:15,310 --> 00:29:18,449
probably like 0.1% is my suspicion.

708
00:29:18,910 --> 00:29:20,500
And, and so, I mean, I guess

709
00:29:20,650 --> 00:29:21,380
all of this,

710
00:29:21,390 --> 00:29:24,349
this whole conversation and the reason I even wanted to talk about this

711
00:29:24,359 --> 00:29:26,579
because we actually were going to talk about something I've forgotten already.

712
00:29:26,699 --> 00:29:27,060
But,

713
00:29:27,310 --> 00:29:31,209
and, and we kind of threw this one out um a a day or two ago. But

714
00:29:31,410 --> 00:29:34,650
it's just like, I think in the security space,

715
00:29:34,949 --> 00:29:37,930
we have to start putting significant effort into

716
00:29:38,170 --> 00:29:41,969
getting away from this binary one or zero risk concept.

717
00:29:41,979 --> 00:29:44,910
And this, I mean, this is so true of vulnerabilities where like

718
00:29:45,130 --> 00:29:47,489
vulnerability does not equal bad.

719
00:29:47,500 --> 00:29:49,770
Like you have to look at the data and there's a lot

720
00:29:49,780 --> 00:29:52,969
of pieces to this and just vulnerabilities isn't even the whole story

721
00:29:53,329 --> 00:29:53,969
because

722
00:29:54,270 --> 00:29:55,849
there's so many other pieces to this.

723
00:29:55,859 --> 00:29:58,089
Like how many components are in your application?

724
00:29:58,300 --> 00:29:59,729
How are you using your application?

725
00:29:59,739 --> 00:30:01,599
How many developers are using your application?

726
00:30:01,609 --> 00:30:03,540
When was the last time things were updated? I mean,

727
00:30:03,849 --> 00:30:05,650
one of my favorite examples is when

728
00:30:05,839 --> 00:30:08,880
someone's like, oh, can I use this component? They're like, oh, there's no CV ES.

729
00:30:08,890 --> 00:30:12,250
It's fine. I'm like this actually, I just, actually, I just had this conversation.

730
00:30:12,260 --> 00:30:13,810
I forget who this was with now.

731
00:30:13,979 --> 00:30:14,050
Uh

732
00:30:14,150 --> 00:30:16,250
Like no CV. S that's the,

733
00:30:16,550 --> 00:30:18,229
well, there were no CV ES

734
00:30:18,479 --> 00:30:19,380
and I looked at the github

735
00:30:19,550 --> 00:30:23,780
history. I'm like, this hasn't been updated in seven years.

736
00:30:23,890 --> 00:30:23,910
I

737
00:30:24,079 --> 00:30:27,380
don't care if there's no CV ES. We should not run this thing.

738
00:30:28,130 --> 00:30:32,229
I don't remember who I was talking to about that, but it was like, oh, my goodness,

739
00:30:32,239 --> 00:30:34,420
no part of the prompt too is, is

740
00:30:34,589 --> 00:30:37,099
the scale has crept up on people without them realizing it.

741
00:30:37,109 --> 00:30:39,719
Like, if you have a web application with 1000 dependencies,

742
00:30:39,920 --> 00:30:43,900
you're now into the scale of 1000 packages times between probably

743
00:30:43,910 --> 00:30:46,689
one in 100 vulnerabilities per year are being fixed in them.

744
00:30:47,520 --> 00:30:51,229
You're into the suddenly thousands to 100,000

745
00:30:51,239 --> 00:30:53,069
vulnerabilities per year for your web app.

746
00:30:53,209 --> 00:30:54,079
You're not though

747
00:30:54,209 --> 00:30:55,540
because, well, you're ignoring it.

748
00:30:55,550 --> 00:30:58,140
-- It's, there's no CV ES and you're just not
-- even that

749
00:30:58,410 --> 00:31:01,099
there's node has like 2000

750
00:31:01,390 --> 00:31:03,040
CV ES for the whole node

751
00:31:03,310 --> 00:31:08,130
system ever of all time, like 2000 out of 1.9 million packages. Like,

752
00:31:08,939 --> 00:31:09,229
hm,

753
00:31:09,869 --> 00:31:11,739
maybe we're missing

754
00:31:12,130 --> 00:31:17,170
-- a couple of million
-- per year. Well, I'm not saying it's a couple million per year.

755
00:31:18,020 --> 00:31:20,849
Probably. It's, it's a terrifying number for sure.

756
00:31:20,859 --> 00:31:23,849
It's, well, and that's the thing. And it's terrifying. So people just

757
00:31:24,189 --> 00:31:26,130
put their hands over their ears and ignore it.

758
00:31:26,589 --> 00:31:29,729
We say this is too much work, it's too big

759
00:31:29,900 --> 00:31:33,530
and we have no way to deal with this data. So we're just not going to

760
00:31:33,750 --> 00:31:36,449
versus saying we have to start thinking about this different.

761
00:31:36,459 --> 00:31:40,219
And, and I think this after the, the Global Security Vulnerability summit G SBS,

762
00:31:40,569 --> 00:31:42,459
like I think this is the thing I want to start

763
00:31:42,469 --> 00:31:46,969
hammering home is we need to stop obsessing over individual CBES

764
00:31:47,390 --> 00:31:49,500
generally, not always usually.

765
00:31:49,869 --> 00:31:51,380
And, and it's more about

766
00:31:51,609 --> 00:31:56,319
looking at the data in aggregate than it is about looking at individual flock.

767
00:31:56,430 --> 00:31:57,819
You need to start having data

768
00:31:57,920 --> 00:31:59,780
to aggregate and look at and that's,

769
00:31:59,790 --> 00:32:02,160
we're working on that and that's exactly what the GST is doing.

770
00:32:02,170 --> 00:32:03,619
We're trying to make it easy enough to

771
00:32:03,890 --> 00:32:06,010
like we want to have a corpus of ham.

772
00:32:06,829 --> 00:32:08,290
Exactly. Exactly.

773
00:32:08,430 --> 00:32:13,560
Well, yeah, I mean, there's varying degrees of ham, like some of it will be ham in a can

774
00:32:13,790 --> 00:32:17,130
that was made from grinding up scary parts of, of meat,

775
00:32:17,280 --> 00:32:18,760
-- but at least
-- that's better than delicious.

776
00:32:19,040 --> 00:32:23,130
Well, the, the current system is here's N PM Js or here's github.com.

777
00:32:25,219 --> 00:32:25,689
No, that's it.

778
00:32:25,699 --> 00:32:28,890
Like go, go read the issues and the, the change logs and,

779
00:32:28,900 --> 00:32:31,739
and some projects do great change logs with, you know, security full

780
00:32:31,969 --> 00:32:32,689
and space bla bla

781
00:32:32,920 --> 00:32:32,949
bla

782
00:32:33,160 --> 00:32:33,189
bla

783
00:32:33,790 --> 00:32:36,369
and some just sort of sneak them in or, or

784
00:32:36,849 --> 00:32:39,689
don't really like in the issue it might be mentioned. And it's,

785
00:32:40,839 --> 00:32:42,609
yeah, we have no idea. And it's,

786
00:32:43,660 --> 00:32:44,359
yeah,

787
00:32:45,050 --> 00:32:47,449
and I, I think again, it kind of boils down to, is that Dev,

788
00:32:47,459 --> 00:32:50,390
sort of implicitly know that stuff is getting fixed silently

789
00:32:50,630 --> 00:32:54,209
and hence, again, back to this mantra of keeping stuff up to date and not, you know,

790
00:32:54,750 --> 00:32:56,790
because what else you're gonna do? Like, it's just, it's like

791
00:32:57,089 --> 00:32:58,810
you're crossing the road blindfolded.

792
00:32:59,489 --> 00:32:59,829
That's what

793
00:33:00,030 --> 00:33:00,099
it's

794
00:33:00,209 --> 00:33:00,239
like.

795
00:33:01,040 --> 00:33:01,339
Ok.

796
00:33:01,349 --> 00:33:04,900
No, no, I, I think that's, that's too simple and, and we need to cut this off soon,

797
00:33:04,910 --> 00:33:06,880
but I think just saying, keep it up to date,

798
00:33:07,260 --> 00:33:09,069
no one thing is they don't have like, what are the choice?

799
00:33:09,079 --> 00:33:10,790
-- Like they have no other strategy. Currently,
-- I

800
00:33:10,890 --> 00:33:12,989
understand what you're saying in many instances. You're right.

801
00:33:13,000 --> 00:33:17,099
Like this is one of those cases of we're just going to like update things as,

802
00:33:17,109 --> 00:33:19,410
as fast as we can versus saying,

803
00:33:19,530 --> 00:33:21,359
I'm going to build a strategy

804
00:33:21,520 --> 00:33:26,000
and part of the strategy is making sure that we obviously want to reduce risk

805
00:33:26,119 --> 00:33:29,354
and like, like application churn and bugs are risk.

806
00:33:29,364 --> 00:33:32,425
Like that's something you have to think about like jumping from open SSL one to open

807
00:33:32,435 --> 00:33:36,594
SSL three is going to generate a lot of work and probably bugs in your application,

808
00:33:36,604 --> 00:33:37,074
right?

809
00:33:37,084 --> 00:33:38,314
Versus so you could say, OK,

810
00:33:38,324 --> 00:33:40,974
I need to make this jump because there's these security vulnerabilities.

811
00:33:40,984 --> 00:33:42,025
But then you also have to say, well,

812
00:33:42,035 --> 00:33:44,045
what are the odds of introducing bugs and breaking my app.

813
00:33:44,055 --> 00:33:46,775
And now let's compare those things and say,

814
00:33:46,915 --> 00:33:47,915
what should I do in the me?

815
00:33:47,925 --> 00:33:50,035
You know, which one is more important right now and,

816
00:33:50,045 --> 00:33:51,594
and it's very hard to answer that today.

817
00:33:51,890 --> 00:33:53,209
You know, one thing I've just noticed, sorry,

818
00:33:53,219 --> 00:33:55,459
I was at N PM js.org just looking around,

819
00:33:55,589 --> 00:33:56,859
I did a quick search and it's,

820
00:33:56,869 --> 00:33:59,810
it's suggesting packages that haven't been updated in 10 years.

821
00:34:00,280 --> 00:34:01,310
That's bananas.

822
00:34:01,959 --> 00:34:05,689
And this one still has a weekly downloads of 3830.

823
00:34:06,599 --> 00:34:08,020
I have all this data.

824
00:34:08,719 --> 00:34:10,750
Well, and that's, I'm kind of like, I didn't realize,

825
00:34:10,760 --> 00:34:12,340
like I knew there'd be stuff in there that's stale,

826
00:34:12,350 --> 00:34:16,010
like an even one or two years stale or like American date, like very stale,

827
00:34:16,060 --> 00:34:18,110
but like 10 years,

828
00:34:19,550 --> 00:34:20,918
there's probably some older than that.

829
00:34:20,929 --> 00:34:23,629
I could, I'm sure I'm not, I can't do it at this moment,

830
00:34:23,639 --> 00:34:26,100
but I could definitely find you something way older than that, I

831
00:34:26,280 --> 00:34:26,409
thought.

832
00:34:26,510 --> 00:34:28,370
Well, but way older and in use

833
00:34:29,219 --> 00:34:31,520
and I'm looking at some of the stuff six years. Ok.

834
00:34:31,530 --> 00:34:35,500
Four months, a month, a year, two months, but six years, you know,

835
00:34:35,510 --> 00:34:37,770
there's stuff that's more than half a decade old

836
00:34:37,889 --> 00:34:40,550
and this sort of also goes back to the forest trees argument of like,

837
00:34:40,840 --> 00:34:41,438
uh what was it?

838
00:34:41,449 --> 00:34:43,909
The Apple App Store was getting rid of apps that hadn't

839
00:34:43,918 --> 00:34:45,699
been updated in like two or three years or something.

840
00:34:45,708 --> 00:34:46,478
And people are losing their minds.

841
00:34:46,489 --> 00:34:47,699
I kind of agree because like,

842
00:34:47,708 --> 00:34:50,620
there's a lot of games in there that my kids like that haven't been updated forever

843
00:34:51,149 --> 00:34:52,790
and they're not like a security risk.

844
00:34:52,800 --> 00:34:56,510
But on the flip side, like N PM, gs.org is a little different, I feel.

845
00:34:57,009 --> 00:34:57,358
And

846
00:34:57,479 --> 00:34:58,499
for example, there's,

847
00:34:58,509 --> 00:35:01,069
there's a conversation that we can't really have

848
00:35:01,079 --> 00:35:02,059
because we don't have good data for it.

849
00:35:02,069 --> 00:35:03,958
But like, kind of what are the metrics around?

850
00:35:04,148 --> 00:35:07,779
When should we maybe remove stuff from N PM, js.org and make it break?

851
00:35:07,789 --> 00:35:08,479
Because like,

852
00:35:08,489 --> 00:35:10,868
it's widely used and hasn't been updated in five years

853
00:35:10,878 --> 00:35:13,168
or 10 years or something or is that worse?

854
00:35:13,178 --> 00:35:16,759
Like if we like left shift, like we suddenly break everything on the internet,

855
00:35:17,120 --> 00:35:17,320
left

856
00:35:17,429 --> 00:35:21,219
hand, left pad, sorry. You know, and, and that's kind of where like

857
00:35:21,370 --> 00:35:24,300
you have the state of like, oh, you know, this library is used,

858
00:35:24,310 --> 00:35:25,780
it's pulled down like 10 times a week.

859
00:35:25,790 --> 00:35:29,189
So if we break it probably not the end of the world versus, you know,

860
00:35:29,199 --> 00:35:31,750
it's used 10,000 or 10 million times a week

861
00:35:32,030 --> 00:35:35,540
-- and
-- there's some that get like literally millions of downloads a week. Like it's,

862
00:35:35,870 --> 00:35:37,149
I agree and, and

863
00:35:37,270 --> 00:35:40,750
you know what though, here's, here's the thing and here's what I want to end this on is

864
00:35:41,020 --> 00:35:45,530
like, step one is always just like admitting you have a problem. And I feel like

865
00:35:45,879 --> 00:35:50,500
I feel like we're getting closer to understanding the problem exists.

866
00:35:50,510 --> 00:35:52,199
Not even understanding the problem.

867
00:35:52,419 --> 00:35:54,459
But I think for a long time

868
00:35:54,919 --> 00:35:58,419
it was just, oh, open source is free. I'm just gonna take what I need and run with it.

869
00:35:58,429 --> 00:36:02,840
And now we're starting to say like, OK, this is like a living breathing organism.

870
00:36:03,149 --> 00:36:08,100
It needs food, it needs care. And if we don't do any of those things, it dies.

871
00:36:08,110 --> 00:36:12,020
And now we have this horrible rotten animal living inside of

872
00:36:12,030 --> 00:36:13,820
our product and we don't know what to do with it.

873
00:36:13,979 --> 00:36:15,370
Yeah. Ok. There's an M PM Js

874
00:36:16,199 --> 00:36:18,370
uh thing called safe dash buffer.

875
00:36:18,750 --> 00:36:25,179
82,690,778 weekly downloads

876
00:36:25,750 --> 00:36:27,340
hasn't been updated in two years.

877
00:36:27,909 --> 00:36:28,610
Interesting

878
00:36:28,770 --> 00:36:33,199
and it, it does buffer, it does some buffer handling stuff like supposedly safely

879
00:36:33,550 --> 00:36:35,189
buffer. It's no J si

880
00:36:35,340 --> 00:36:36,600
know but still man, it's,

881
00:36:36,919 --> 00:36:36,929
I

882
00:36:37,340 --> 00:36:41,419
don't know. I mean we should look at it and see like it but is it, is it two lines of code?

883
00:36:41,479 --> 00:36:42,139
I don't know. It's

884
00:36:42,719 --> 00:36:42,729
uh

885
00:36:43,850 --> 00:36:45,439
how do you see the code?

886
00:36:46,020 --> 00:36:46,610
But again,

887
00:36:46,719 --> 00:36:48,129
there there should be a link to get out.

888
00:36:48,439 --> 00:36:49,729
There usually is not always,

889
00:36:50,070 --> 00:36:51,010
but again,

890
00:36:51,139 --> 00:36:55,090
this is where we have to start collecting this data and using it

891
00:36:55,270 --> 00:37:00,570
as part of like the meat grinder of data comes in, risk decision comes out,

892
00:37:00,679 --> 00:37:03,610
but it's also different for everybody. So it's complicated,

893
00:37:03,899 --> 00:37:06,360
you know, it's 60 lines, it's a bunch of buffer handling.

894
00:37:06,370 --> 00:37:08,310
It's just whenever I see buffer handling, I get nerve

895
00:37:08,469 --> 00:37:11,500
because you know, only in C I know, but still,

896
00:37:11,929 --> 00:37:12,760
well, no, if you, like,

897
00:37:12,770 --> 00:37:15,620
if you look for Python buffer overflow and other language buffer overflows,

898
00:37:15,629 --> 00:37:18,739
-- there have been stuff in the back and
-- that's, that's different though.

899
00:37:19,100 --> 00:37:19,770
It definitely,

900
00:37:20,320 --> 00:37:22,820
maybe this library is done. I hope it's done.

901
00:37:23,090 --> 00:37:23,610
Maybe

902
00:37:23,750 --> 00:37:24,699
that's the thing we don't know.

903
00:37:24,810 --> 00:37:25,239
We don't know.

904
00:37:25,770 --> 00:37:26,540
How do you tell

905
00:37:26,860 --> 00:37:29,760
it'd be great if there was a tag that was like, functionally complete.

906
00:37:29,770 --> 00:37:33,209
Like, I'm never updating this again unless someone reports a terrible one.

907
00:37:33,350 --> 00:37:33,760
Well, and,

908
00:37:33,770 --> 00:37:35,129
and there are ones like I remember looking at

909
00:37:35,139 --> 00:37:36,600
one that was called American Date and it literally,

910
00:37:36,610 --> 00:37:40,280
all it did was take a date and spit out the stupid American month, day, year format.

911
00:37:40,290 --> 00:37:42,620
-- And I'm like, cool and it was
-- like five months ago,

912
00:37:42,760 --> 00:37:42,949
right?

913
00:37:43,179 --> 00:37:43,479
Sorry,

914
00:37:43,745 --> 00:37:47,004
is functionally complete until someone finds bugs in it and then they fix bugs.

915
00:37:47,014 --> 00:37:48,145
But it's not uncommon for Z

916
00:37:48,264 --> 00:37:50,745
lip to not get updates for a decade. And that's great.

917
00:37:50,905 --> 00:37:53,445
Like it doesn't need them. Well, except for that last thing we talked about.

918
00:37:53,455 --> 00:37:54,854
But anyway, I'm ending this,

919
00:37:55,044 --> 00:37:55,685
I'm ending this.

920
00:37:56,294 --> 00:37:59,774
That was, that was another Tavis bug. No, no. Tavis did Tavis do that one.

921
00:37:59,784 --> 00:38:00,604
There's been multiple,

922
00:38:00,915 --> 00:38:02,834
I don't remember. Anyway, it doesn't matter. All right. Thank you, Kurt.

923
00:38:02,844 --> 00:38:05,165
Thank you everyone for listening. Go to up on social security podcast.com.

924
00:38:05,175 --> 00:38:05,554
Head up our show

925
00:38:05,705 --> 00:38:08,495
at TZ Pound Os S podcast. Hashtag hit us up on social media.

926
00:38:08,504 --> 00:38:11,645
-- Kurt, have a lovely rest of your day. You too.
-- Thanks everybody.

927
00:38:11,979 --> 00:38:13,669
Thanks everyone. Bye bye

928
00:38:18,300 --> 00:38:18,429
that.