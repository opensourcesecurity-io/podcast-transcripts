0
00:00:05,340 --> 00:00:08,050
Hello and welcome to the open source security podcast

1
00:00:08,180 --> 00:00:08,859
with myself,

2
00:00:08,869 --> 00:00:12,010
Kurt Siefried and my partner in knowing what to set up and what not to set up.

3
00:00:12,020 --> 00:00:12,729
Josh Presser.

4
00:00:12,930 --> 00:00:14,819
What, what does that even mean?

5
00:00:14,829 --> 00:00:15,859
Well, just that conversation,

6
00:00:15,869 --> 00:00:17,760
we were having a few moments ago with sort of the whole

7
00:00:17,770 --> 00:00:21,040
how operations have and have not changed in the last 20 years.

8
00:00:21,120 --> 00:00:21,739
But

9
00:00:21,920 --> 00:00:24,979
you have the perfect set up for a plumbing joke

10
00:00:25,110 --> 00:00:27,940
and you, you blew it. We're talking about dirty pipe.

11
00:00:27,950 --> 00:00:30,379
-- That is not something to joke about
-- dirty pipes.

12
00:00:30,389 --> 00:00:33,669
Plumbing is not plumbing is serious business.

13
00:00:33,930 --> 00:00:36,659
I mean, I'm a talented amateur plumber. I would say

14
00:00:38,290 --> 00:00:41,700
any actual plumber just like shriek in terror.

15
00:00:41,830 --> 00:00:44,139
Well, and in fairness, part of it though is like, for example,

16
00:00:44,150 --> 00:00:45,540
my solder joints are god awful.

17
00:00:45,549 --> 00:00:49,090
-- Like they are horrifically ugly but they don't leak. It's hard
-- to solder

18
00:00:49,099 --> 00:00:49,580
pipe.

19
00:00:49,590 --> 00:00:51,860
Well, it's hard to solder it properly and elegantly

20
00:00:52,240 --> 00:00:54,580
-- but shark bite
-- man, I don't trust

21
00:00:54,665 --> 00:00:55,674
shark bite. You know what?

22
00:00:55,685 --> 00:00:57,555
There's a, I, I used to not trust them either

23
00:00:57,705 --> 00:01:01,625
and then it's been 10 years and there's been, for example,

24
00:01:01,634 --> 00:01:03,084
many youtube videos where they've, you know,

25
00:01:03,095 --> 00:01:05,084
put a shark bite on and like tried to pull it

26
00:01:05,095 --> 00:01:07,885
off or froze the water in it to see what happens.

27
00:01:07,894 --> 00:01:08,205
And

28
00:01:08,334 --> 00:01:11,205
mechanically, they are strong as

29
00:01:11,455 --> 00:01:12,565
very strong

30
00:01:12,944 --> 00:01:13,565
and

31
00:01:13,785 --> 00:01:14,675
they don't leak.

32
00:01:15,040 --> 00:01:18,260
-- I mean, II I know
-- that's kind of what you want in plumbing.

33
00:01:18,470 --> 00:01:20,120
That's literally its only job

34
00:01:20,470 --> 00:01:22,739
unless it's copper and you're using it for ground bonding.

35
00:01:22,750 --> 00:01:27,660
-- In which case you need copper. I mean,
-- yeah, grounding is can be important,

36
00:01:27,930 --> 00:01:28,309
I mean,

37
00:01:28,660 --> 00:01:29,309
whatever,

38
00:01:29,620 --> 00:01:30,769
-- whatever.
-- So,

39
00:01:31,050 --> 00:01:34,120
no, so the dirty pipe vulnerability and this is the perfect example of

40
00:01:34,309 --> 00:01:37,290
having an in depth knowledge of sort of how to do system

41
00:01:37,300 --> 00:01:40,430
forensics and look at the Linux kernel doesn't matter until it does.

42
00:01:40,480 --> 00:01:41,589
I read

43
00:01:41,860 --> 00:01:44,949
the blog post from the person who discovered this.

44
00:01:45,199 --> 00:01:45,279
Yeah,

45
00:01:45,480 --> 00:01:45,699
that's

46
00:01:45,819 --> 00:01:48,550
-- smarter than me.
-- I'm confident I couldn't have done this.

47
00:01:48,779 --> 00:01:49,790
I mean, it is

48
00:01:50,220 --> 00:01:56,760
an amazing recap of events and the bug is remarkably esoteric

49
00:01:57,069 --> 00:02:00,559
and hilariously simple. I mean, it ticks so many boxes.

50
00:02:00,569 --> 00:02:01,809
It's, it's even more than that.

51
00:02:01,819 --> 00:02:05,019
It's, I, I love the fact where he's, well, it's kind of like Sherlock Holmes,

52
00:02:05,029 --> 00:02:06,319
you know, once you've eliminated

53
00:02:06,449 --> 00:02:09,288
everything possible, it must be the impossible,

54
00:02:09,899 --> 00:02:10,169
right?

55
00:02:10,179 --> 00:02:13,500
Because like if I had a situation like this, like, yeah, it's probably my fault.

56
00:02:13,509 --> 00:02:14,380
That's just,

57
00:02:14,759 --> 00:02:17,020
it's not the Linux Colonel's fault. Are you insane

58
00:02:17,669 --> 00:02:17,740
like

59
00:02:18,110 --> 00:02:19,539
20 years ago? Sure. My Linux

60
00:02:19,639 --> 00:02:21,610
machine crashed every 15 minutes and then I got a

61
00:02:21,619 --> 00:02:24,419
driver update once and it started crashing every 20 minutes.

62
00:02:24,429 --> 00:02:26,899
And that was amazing. But that was 20 years ago.

63
00:02:26,910 --> 00:02:29,639
-- Let's
-- explain this bug because it's so mind. But

64
00:02:30,059 --> 00:02:30,229
IIII

65
00:02:31,429 --> 00:02:33,800
I want to do it. I I

66
00:02:34,479 --> 00:02:38,419
it is the most amazing bug I've read about in a long time. And so

67
00:02:38,970 --> 00:02:42,559
I will put a link in the show notes to the actual blog post.

68
00:02:42,570 --> 00:02:45,779
I would highly encourage you to go read it because it's so well written.

69
00:02:45,970 --> 00:02:46,470
But

70
00:02:46,779 --> 00:02:49,320
what it basically comes down to is so

71
00:02:49,630 --> 00:02:50,199
in

72
00:02:50,639 --> 00:02:54,210
the Linux kernel, there's this concept called a memory page, right?

73
00:02:54,220 --> 00:02:57,440
You might have heard of this. It's four, it's a four K block of memory.

74
00:02:57,449 --> 00:03:01,809
And basically everything the Linux kernel does happens in these four K blocks.

75
00:03:01,820 --> 00:03:03,919
Like if you ask for a megabyte of memory,

76
00:03:03,929 --> 00:03:07,800
you just get a whole bunch of four K blocks all squished together, right?

77
00:03:08,759 --> 00:03:12,500
And when you're doing really any sort of file operation,

78
00:03:12,639 --> 00:03:16,110
it maps a page of memory, a four K page of memory

79
00:03:16,220 --> 00:03:18,220
to a file on disk.

80
00:03:18,570 --> 00:03:20,710
And then the kernel will do things like watch

81
00:03:20,720 --> 00:03:22,779
the page of memory for changes and then it

82
00:03:22,789 --> 00:03:27,320
knows it has to copy the changes from the block of memory into the file on disk,

83
00:03:27,330 --> 00:03:28,179
for example.

84
00:03:28,190 --> 00:03:28,600
OK.

85
00:03:28,789 --> 00:03:31,979
That seems pretty straightforward. And obviously there's

86
00:03:32,360 --> 00:03:35,740
a bunch of weird permissions rules and stuff and those all get handled in the kernel.

87
00:03:35,750 --> 00:03:39,580
But fundamentally at the end of the day, if it sees a change to the page,

88
00:03:39,589 --> 00:03:40,699
it writes it to the file.

89
00:03:40,710 --> 00:03:48,619
OK. Now what this person found was the, if you have the ability to modify

90
00:03:49,130 --> 00:03:53,619
a page of memory that points to a say file, you don't have, right?

91
00:03:53,630 --> 00:03:58,509
Access to your changes, get written to the file, which of course is like a that's like

92
00:03:58,660 --> 00:04:03,240
that break the fundamental rule of file access, right? If a read only file,

93
00:04:03,360 --> 00:04:04,619
you can't write to it,

94
00:04:04,630 --> 00:04:07,789
you know what this reminds me of is direct memory access back in the day.

95
00:04:07,800 --> 00:04:09,759
Remember when people found out about D MA and it's like,

96
00:04:09,770 --> 00:04:13,339
wait a minute if I can plug it because you know, Max had D MA over hardware.

97
00:04:13,350 --> 00:04:14,919
And so if you could physically plug something into

98
00:04:15,259 --> 00:04:15,270
a,

99
00:04:15,470 --> 00:04:18,260
yes, you could just do anything to memory.

100
00:04:18,269 --> 00:04:20,600
And that's actually how some forensics products worked.

101
00:04:20,608 --> 00:04:24,420
For example, you know, bypassing all the safeties and security controls.

102
00:04:24,429 --> 00:04:25,709
It still works that way.

103
00:04:25,720 --> 00:04:29,739
-- I mean, this is why like when you plug in a thunderbolt device,
-- yeah,

104
00:04:29,750 --> 00:04:30,679
-- you better
-- trust it.

105
00:04:30,690 --> 00:04:32,429
You have to like basically say like yes,

106
00:04:32,440 --> 00:04:36,220
I trust this device because you could build a thunderbolt device that could

107
00:04:36,230 --> 00:04:40,220
modify memory on the system because thunderbolt devices have access to D MA.

108
00:04:40,459 --> 00:04:41,059
Yeah. And

109
00:04:41,160 --> 00:04:43,739
it's kind of a, it's very similar in that regard.

110
00:04:43,880 --> 00:04:46,390
And so anyway, the way this bug worked was

111
00:04:46,510 --> 00:04:52,549
this person was doing some wild streaming of data using pipes. The the li

112
00:04:52,660 --> 00:04:56,500
like you do like cat pipe to you know, sort or whatever

113
00:04:56,779 --> 00:04:57,399
in the, in the,

114
00:04:57,549 --> 00:04:58,970
on the shell.

115
00:04:59,109 --> 00:05:06,380
And basically the way the pipe was working is it was managing to put some data in a page

116
00:05:06,489 --> 00:05:07,100
that

117
00:05:07,570 --> 00:05:12,269
the kernel incorrectly or no. How was it? No, no, it's, this is really complicated.

118
00:05:12,279 --> 00:05:13,410
I'm probably gonna screw this up.

119
00:05:13,420 --> 00:05:16,670
But it sounds like what happened was you filled the page with data,

120
00:05:17,000 --> 00:05:19,109
you drained all the data out of the page

121
00:05:19,339 --> 00:05:22,630
and then you managed to write in a read only file

122
00:05:22,640 --> 00:05:25,390
into the page and then you could change some of it.

123
00:05:25,589 --> 00:05:29,589
And when you changed it, that data ended up getting written back into the file,

124
00:05:29,600 --> 00:05:29,910
right?

125
00:05:29,920 --> 00:05:33,470
And so fundamentally, a normal user could modify

126
00:05:33,790 --> 00:05:39,079
the a a read or, or a read only binary for example, or a script or whatever.

127
00:05:39,089 --> 00:05:42,029
And so obviously, from the perspective of an attack,

128
00:05:42,190 --> 00:05:47,649
you modify like a set U ID binary and now you can do crazy things.

129
00:05:49,239 --> 00:05:51,929
I like how you go, you can modify a set I DB

130
00:05:52,170 --> 00:05:53,070
and then you know,

131
00:05:53,459 --> 00:05:55,279
yeah, like what? Right, exactly.

132
00:05:55,290 --> 00:06:00,809
Now where, where this one gets even kind of more wild though is generally speaking,

133
00:06:00,820 --> 00:06:03,000
a lot of people say, oh, it's just

134
00:06:03,290 --> 00:06:06,160
local users, whatever. I trust my local users.

135
00:06:06,170 --> 00:06:08,820
No, you don't because you have a web server that executes code.

136
00:06:08,829 --> 00:06:10,079
-- We're
-- gonna
-- get to that.

137
00:06:10,250 --> 00:06:14,570
I actually have a funny story too. I, I have a friend who got a hold of me who's a cis

138
00:06:14,700 --> 00:06:16,519
edin and their security person was like,

139
00:06:16,529 --> 00:06:19,559
you have to fix this on all your machines and they're like, we're gonna fix it.

140
00:06:19,709 --> 00:06:24,565
But, uh, most of our machines, all the people who can log in already have root access,

141
00:06:24,575 --> 00:06:26,725
so we don't consider it a high priority there.

142
00:06:26,954 --> 00:06:28,625
And the security person, like, well, yes, it is.

143
00:06:28,635 --> 00:06:30,184
And they're like, please explain why.

144
00:06:30,434 --> 00:06:33,635
-- And of course, the security person couldn't, which I laughed at. But anyway,
-- the

145
00:06:33,785 --> 00:06:36,494
funny thing is there is one minor reason which is

146
00:06:36,765 --> 00:06:39,765
it breaks logging. You don't know who did what anymore?

147
00:06:39,774 --> 00:06:43,984
Well, not only that look, I think the real sell to this is

148
00:06:44,125 --> 00:06:48,095
you can modify container base image files with

149
00:06:48,105 --> 00:06:50,464
this which are in the container world.

150
00:06:50,475 --> 00:06:51,464
Like that's,

151
00:06:51,869 --> 00:06:54,450
that, that's the holy grail like that's immutable.

152
00:06:54,459 --> 00:06:57,959
You can't edit that, which means if you could modify a base image,

153
00:06:58,059 --> 00:06:59,929
you can affect all of the containers

154
00:07:00,529 --> 00:07:02,950
everywhere running on that system, which is terrifying.

155
00:07:02,959 --> 00:07:05,899
It's not a direct container escape. Like you can't say,

156
00:07:06,160 --> 00:07:09,750
you know, modify some set U ID outside the container or something,

157
00:07:09,760 --> 00:07:10,859
but you can mess with

158
00:07:11,200 --> 00:07:13,760
enough stuff in a container that I'm confident

159
00:07:13,970 --> 00:07:18,459
a good attacker could leverage this to get out of your container environment

160
00:07:18,730 --> 00:07:21,839
-- well, or just pivot to other stuff in the, you know. Right.
-- Right.

161
00:07:21,850 --> 00:07:22,820
That's what I mean,

162
00:07:22,829 --> 00:07:26,940
like find a container that's running privileged and then it's game over, you know.

163
00:07:26,950 --> 00:07:29,559
And one lovely thing about the the Linux kernel patch for this,

164
00:07:30,140 --> 00:07:33,869
his two lines are changed and it's literally buff flakes equals zero.

165
00:07:34,170 --> 00:07:35,019
Like it's just,

166
00:07:35,140 --> 00:07:35,260
yeah.

167
00:07:35,570 --> 00:07:39,000
-- Oops. I mean,
-- that's what makes it such a, an amazing bug though.

168
00:07:39,019 --> 00:07:44,239
It's hilariously simple. It's amazingly complicated. It's just, I love it.

169
00:07:44,250 --> 00:07:46,429
It's one of those things that, where this is what I, this is,

170
00:07:46,440 --> 00:07:49,239
I think one of the fundamental differences between security bugs and normal

171
00:07:49,250 --> 00:07:54,660
bugs is normal bugs tend to bubble up and surface relatively quickly.

172
00:07:54,670 --> 00:07:55,369
Like, oh,

173
00:07:55,480 --> 00:07:58,100
you know, the, the color is wrong or the,

174
00:07:58,350 --> 00:08:00,279
it just doesn't work like I type in an

175
00:08:00,290 --> 00:08:02,320
email address with more than five characters and it

176
00:08:02,429 --> 00:08:03,440
doesn't send the email.

177
00:08:04,119 --> 00:08:05,940
Most security bugs

178
00:08:06,130 --> 00:08:08,760
are almost never gonna be triggered accidentally.

179
00:08:08,769 --> 00:08:11,179
And it's wild to me that this person actually

180
00:08:11,529 --> 00:08:13,540
not only did this bug trigger accidentally

181
00:08:13,549 --> 00:08:15,829
in the wild under like normal circumstances,

182
00:08:15,839 --> 00:08:20,709
someone smart enough to notice it and understand it dealt with it because story time

183
00:08:20,839 --> 00:08:22,269
I have been guilty of this

184
00:08:22,500 --> 00:08:25,760
way back in the day I started using Amazon web services

185
00:08:25,769 --> 00:08:28,750
with the Fedora images and I would fire one up.

186
00:08:29,109 --> 00:08:32,450
-- Yes, I know this story
-- and there's no rude password and I'm like, well,

187
00:08:32,460 --> 00:08:35,289
that's stupid, but also kind of makes sense because,

188
00:08:35,820 --> 00:08:38,729
well, you could set a root password, but it would be the same on all the images.

189
00:08:38,739 --> 00:08:39,590
So that's silly.

190
00:08:40,058 --> 00:08:43,200
And you could sort of set one randomly at first run.

191
00:08:43,210 --> 00:08:45,320
But how do I know what the password is.

192
00:08:45,330 --> 00:08:47,159
So kind of the whole point is that you, you know,

193
00:08:47,169 --> 00:08:49,640
Amazon shoves an SSH key in there and you SSH N

194
00:08:50,099 --> 00:08:52,409
and I'm like, and then you log in and set a root password,

195
00:08:52,419 --> 00:08:56,440
which is what I did for years and then somebody reports it and it becomes a huge,

196
00:08:56,719 --> 00:08:57,049
you know,

197
00:08:57,059 --> 00:09:00,080
massive security kerfuffle with like daily calls with

198
00:09:00,090 --> 00:09:01,979
major vendors and it was just a disaster.

199
00:09:01,989 --> 00:09:04,359
And I'm like, I kind of wish I'd spoken up sooner, but oops,

200
00:09:04,650 --> 00:09:05,309
and that's the thing.

201
00:09:05,320 --> 00:09:05,479
Like,

202
00:09:05,489 --> 00:09:07,570
I just noticed it and kind of thought it was

203
00:09:07,580 --> 00:09:09,510
intentional and more to the point I was like,

204
00:09:09,520 --> 00:09:14,049
well, this is so trivial to fix and deal with why, why am I worried?

205
00:09:14,059 --> 00:09:16,150
You know, like, even better story.

206
00:09:16,280 --> 00:09:19,390
The first security vulnerability, the real one I ever found was the,

207
00:09:19,559 --> 00:09:19,580
is

208
00:09:19,760 --> 00:09:20,989
cuzzy.com file

209
00:09:21,260 --> 00:09:21,580
was what

210
00:09:21,690 --> 00:09:26,190
really kind of contains your password? And man, I'm gonna name names Cisco Law.

211
00:09:26,409 --> 00:09:27,390
Their mind

212
00:09:27,530 --> 00:09:28,570
when I went public with this.

213
00:09:28,580 --> 00:09:29,700
And I was like, because I was like, what,

214
00:09:29,710 --> 00:09:33,630
like you just ch mod minus R like you just make it not world readable,

215
00:09:33,960 --> 00:09:35,809
change the password probably because it might have been read

216
00:09:36,250 --> 00:09:36,789
and you're done.

217
00:09:37,000 --> 00:09:40,590
That's it. And like Cisco lost their damn full mind. This is like 20 years ago.

218
00:09:40,640 --> 00:09:44,789
Well, and that was back in the days when you just didn't talk about security issues,

219
00:09:44,799 --> 00:09:45,219
like,

220
00:09:45,330 --> 00:09:47,989
shoot the messenger. Well, exactly. And so,

221
00:09:48,460 --> 00:09:51,169
yeah, I mean? And that's part of the problem is if you see something,

222
00:09:51,369 --> 00:09:52,309
say something.

223
00:09:52,320 --> 00:09:55,650
-- But then the second part of the problem is, but who do you say something to?
-- Well.

224
00:09:55,659 --> 00:09:56,650
Right. Right.

225
00:09:56,989 --> 00:09:57,969
And, and look,

226
00:09:58,559 --> 00:10:02,030
I think what makes this bug so special is

227
00:10:02,340 --> 00:10:02,609
it?

228
00:10:02,619 --> 00:10:06,409
It only appears under a very certain set of circumstances that I,

229
00:10:06,419 --> 00:10:08,450
I don't think are going to be very common.

230
00:10:08,460 --> 00:10:11,809
You know what I mean? And it's, it's such a minor thing

231
00:10:11,989 --> 00:10:15,130
that I, I think the odds of most people think

232
00:10:15,234 --> 00:10:17,815
bring this out is nearly zero.

233
00:10:17,825 --> 00:10:21,695
I bet you this bug has been exploit, not exploited but triggered many,

234
00:10:21,705 --> 00:10:24,335
many times and no one noticed or they were just like, oh,

235
00:10:24,344 --> 00:10:25,854
whatever the disc is corrupt.

236
00:10:25,864 --> 00:10:26,794
Well, here's the other problem.

237
00:10:26,804 --> 00:10:30,695
You don't need to just be technically savvy to do the forensics and, you know,

238
00:10:30,705 --> 00:10:31,815
take this bug apart.

239
00:10:32,114 --> 00:10:34,335
You have to have the curiosity and the time.

240
00:10:34,755 --> 00:10:35,054
Right.

241
00:10:35,065 --> 00:10:37,715
This is, I think this is one of the biggest problem with security people is security.

242
00:10:37,724 --> 00:10:41,455
People forget that the majority of the mins have 17 printers to fix.

243
00:10:41,960 --> 00:10:42,030
Yeah.

244
00:10:42,169 --> 00:10:46,130
Right. They don't have time to, oh, this, like, one file keeps getting corrupt.

245
00:10:46,140 --> 00:10:49,270
Like, three times a year. You should go spend 10 hours investigating that. 0,

246
00:10:49,419 --> 00:10:51,559
-- 10
-- hours. I bet this took way longer.

247
00:10:52,200 --> 00:10:54,650
Exactly. Right. Like multiple, you know. Yeah.

248
00:10:54,659 --> 00:10:59,130
And, and my, like, my favorite part is in the write up. There's one point where

249
00:10:59,280 --> 00:11:00,890
the author noticed

250
00:11:01,530 --> 00:11:05,760
in the binary dump of the corrupted file at the end

251
00:11:06,059 --> 00:11:10,570
there were the letters PK, A capital P, capital K and some other things.

252
00:11:10,580 --> 00:11:13,599
And it was basically part of the zip file header that he was writing.

253
00:11:13,859 --> 00:11:18,030
And how many, like, if I looked at that I wouldn't have put that together. No way.

254
00:11:18,039 --> 00:11:20,099
-- So, yeah,
-- I mean, my take on this would have been, like,

255
00:11:20,309 --> 00:11:24,659
-- files corrupted. That's weird moving along. Right. Like.
-- Right. Right.

256
00:11:24,979 --> 00:11:26,229
Right. Files get corrupt.

257
00:11:26,239 --> 00:11:29,929
Part of the problem too is you and I grew up in an era where files corrupted.

258
00:11:30,070 --> 00:11:32,080
Yeah, that's normal. That's how computers work.

259
00:11:32,190 --> 00:11:32,530
Like,

260
00:11:32,700 --> 00:11:35,530
you turn off your windows machine improperly. Oh.

261
00:11:35,539 --> 00:11:39,169
Or God forbid you eject a USB device without actually

262
00:11:39,700 --> 00:11:43,099
ejecting it, like, in software and un mounting it and everything. Like it's gone.

263
00:11:43,419 --> 00:11:45,150
Right. Like, even a floppy disk.

264
00:11:45,159 --> 00:11:48,650
There's a reason people save their stuff to two or three floppies. Oh. Right. Right.

265
00:11:48,659 --> 00:11:52,159
Part of it is modern computers. It's like ZFS. Right.

266
00:11:52,169 --> 00:11:55,950
ZFS is this magical file system that essentially unless all your hard drives die,

267
00:11:55,960 --> 00:11:58,869
you will never ever get mangled data out of it.

268
00:11:58,880 --> 00:12:01,880
And God forbid a cosmic ray hits it. It'll tell you.

269
00:12:02,539 --> 00:12:06,280
Right. Like, it's just technology has progressed where it used to be.

270
00:12:06,289 --> 00:12:07,710
Like, if a file got mangled.

271
00:12:07,719 --> 00:12:11,010
-- Well, yeah, that, that's Tuesday
-- it happened all the time. Yeah.

272
00:12:11,059 --> 00:12:14,880
And, and now I think that's part of it is we've, it's, it's, well,

273
00:12:14,890 --> 00:12:17,380
if you get something improved 5 10% a year.

274
00:12:17,390 --> 00:12:19,669
-- But you do that for two decades.
-- That's not

275
00:12:19,840 --> 00:12:23,510
entirely true because I have a Mac for work.

276
00:12:23,520 --> 00:12:27,150
And as it turns out, remember Apple's cheating on the whole speed thing, right.

277
00:12:27,159 --> 00:12:29,580
Like, uh, I've corrupted the disk on

278
00:12:30,010 --> 00:12:33,450
many Macs will say. And now, granted, I do weird things.

279
00:12:33,460 --> 00:12:36,900
-- So I get that
-- well, but also Apple's clearly cutting short,

280
00:12:36,909 --> 00:12:40,390
like they're clearly cutting corners to get performance out of it right there.

281
00:12:40,400 --> 00:12:44,070
Was that Twitter feed where the guy essentially is, like when you flush the SSD,

282
00:12:44,080 --> 00:12:45,549
it doesn't actually flush.

283
00:12:45,760 --> 00:12:47,679
And if you lose power, you're screwed

284
00:12:48,359 --> 00:12:49,900
on a Macbook is actually not that bad.

285
00:12:50,020 --> 00:12:52,320
Like it's probably not gonna happen. You have a big battery in there, right?

286
00:12:52,400 --> 00:12:53,520
Put on a desktop,

287
00:12:53,979 --> 00:12:56,580
you know, and, but so if I had to bet money,

288
00:12:56,590 --> 00:12:58,450
Apple's willing to cut corners for performance,

289
00:12:58,460 --> 00:13:00,260
that Linus would hit you with a hammer.

290
00:13:01,200 --> 00:13:01,539
But

291
00:13:01,650 --> 00:13:02,179
so, so

292
00:13:02,729 --> 00:13:03,429
that's,

293
00:13:03,609 --> 00:13:06,140
I think a good talking point that we should kind of

294
00:13:06,150 --> 00:13:09,950
kind of take with it is when you have open source,

295
00:13:10,559 --> 00:13:15,210
you can do things you can't necessarily do with a close system.

296
00:13:15,219 --> 00:13:16,280
Like, let's say, for example,

297
00:13:16,289 --> 00:13:20,179
you had a Mac or Windows and you were seeing this strange corruption,

298
00:13:20,909 --> 00:13:23,059
there's nothing, there's no way you could have really done it.

299
00:13:23,070 --> 00:13:25,830
And if you read the write up the, the discoverer,

300
00:13:25,900 --> 00:13:30,500
he used get bisect to figure out exactly where the bug came from.

301
00:13:30,510 --> 00:13:33,710
And now get bisect is this kind of amazing feature of G

302
00:13:33,869 --> 00:13:38,090
where you basically, you see a bug, you do get bisect and it starts doing like,

303
00:13:38,099 --> 00:13:41,409
basically randomly picking spots and it's not random.

304
00:13:41,419 --> 00:13:43,130
-- Well, no, not
-- randomly. You just cut it in half.

305
00:13:43,140 --> 00:13:43,650
Well,

306
00:13:43,890 --> 00:13:47,690
yeah, I mean, basically you say, I know there's no bug in this commit.

307
00:13:47,789 --> 00:13:49,979
I know there's a bug in this commit and get b

308
00:13:50,340 --> 00:13:54,090
basically helps you sort out where the commit is

309
00:13:54,239 --> 00:13:56,809
that introduce the bug. It's absolutely amazing.

310
00:13:56,909 --> 00:14:01,679
And people forget powers of two and conversely, powers of half

311
00:14:01,989 --> 00:14:05,239
are amazing because like, I love, you know, in the write up, he's like,

312
00:14:05,250 --> 00:14:07,140
it was somewhere between these and it's like, oh what,

313
00:14:07,150 --> 00:14:10,039
over 100,000 commits or a million commits or some stupid number.

314
00:14:10,059 --> 00:14:13,559
And he's like in 17 steps. So like two to the 17th big number.

315
00:14:14,650 --> 00:14:18,320
No. And you're right. It's, it's funny how that works. But still,

316
00:14:18,520 --> 00:14:20,599
this is an example of

317
00:14:21,020 --> 00:14:23,200
the openness of Linux.

318
00:14:24,000 --> 00:14:26,150
It enabled all of this to happen.

319
00:14:26,890 --> 00:14:29,830
-- Can
-- you imagine filing a support case with Microsoft

320
00:14:29,840 --> 00:14:31,630
where you're like two or three times a year,

321
00:14:31,640 --> 00:14:32,450
a file corrupt

322
00:14:32,690 --> 00:14:33,229
and they'd be like,

323
00:14:33,559 --> 00:14:35,830
-- buy a new hardware.
-- Right. Right. Yeah.

324
00:14:36,000 --> 00:14:39,409
Right. They wouldn't take that seriously at all. Not in a million years.

325
00:14:39,590 --> 00:14:40,030
And

326
00:14:40,289 --> 00:14:43,869
you could potentially reproduce it. But even if you sent them a script

327
00:14:44,080 --> 00:14:46,229
and you said, look at what I can do

328
00:14:46,510 --> 00:14:47,989
the odds of them

329
00:14:48,400 --> 00:14:50,969
figuring it out correctly are very, very low.

330
00:14:51,059 --> 00:14:55,260
And so I don't generally approve of Linus's law that, you know, with,

331
00:14:55,270 --> 00:14:56,900
with enough eyeballs, all bugs are shallow.

332
00:14:56,909 --> 00:15:00,340
But I think in this particular instance, this is a shining example of it.

333
00:15:00,349 --> 00:15:02,840
Well, I mean, there's a chance, right? Because here's the thing, uh

334
00:15:03,030 --> 00:15:07,520
remember when we worked at Red Hat, did we ever say we would fix somebody's problem or

335
00:15:07,760 --> 00:15:11,340
did we say we would make every commercially reasonable effort to fix your problem?

336
00:15:11,979 --> 00:15:13,340
Right. And it's true though,

337
00:15:13,460 --> 00:15:13,750
like,

338
00:15:13,770 --> 00:15:16,239
you can't launch a support case with Microsoft of like

339
00:15:16,250 --> 00:15:18,950
weird random file corruption and expect them to spend,

340
00:15:18,960 --> 00:15:22,239
you know, $100,000 of developer time trying to track it down.

341
00:15:22,380 --> 00:15:22,719
Like

342
00:15:22,820 --> 00:15:24,469
that's not realistic, but at

343
00:15:24,609 --> 00:15:26,750
least with open source, there's a chance,

344
00:15:26,760 --> 00:15:29,390
like if somebody files a good bug in theory,

345
00:15:29,400 --> 00:15:31,479
anybody on the planet can choose to work on it,

346
00:15:32,150 --> 00:15:32,609
you know,

347
00:15:33,799 --> 00:15:38,020
like, so there's at least the possibility, the chance there's the hope whereas,

348
00:15:38,030 --> 00:15:39,130
yeah, with closed source, it's like,

349
00:15:40,570 --> 00:15:42,960
yeah, unless you've got some massive, you know,

350
00:15:43,260 --> 00:15:47,500
debugging binary skills like computer says, no.

351
00:15:47,679 --> 00:15:48,809
Right. Right. Right.

352
00:15:48,880 --> 00:15:54,169
And, and so anyway, anyway, bringing it all back together, I think you are correct

353
00:15:54,270 --> 00:15:54,919
that

354
00:15:55,200 --> 00:15:59,739
trickery and open source, I think would be frowned upon the Linux kernel community,

355
00:15:59,750 --> 00:16:02,969
especially Linus would not approve of it in any way.

356
00:16:02,979 --> 00:16:07,340
-- And I think that is part of the magic of all of this.
-- It would be an option.

357
00:16:07,349 --> 00:16:09,309
It would be like hyphen hyphen fast and unsafe.

358
00:16:09,900 --> 00:16:10,400
You know what I mean?

359
00:16:10,409 --> 00:16:11,489
Like because there are,

360
00:16:11,500 --> 00:16:14,840
there is literally software that has these options where it's like, you know,

361
00:16:14,849 --> 00:16:16,950
you can do this thing, it will go faster.

362
00:16:16,960 --> 00:16:19,289
But like God help you if you lose power halfway through

363
00:16:19,299 --> 00:16:21,940
a transaction because it's gonna just like everything's going to be gone

364
00:16:22,080 --> 00:16:23,859
and some people are like, yeah cool. I can live with that.

365
00:16:24,030 --> 00:16:24,090
Uh

366
00:16:24,190 --> 00:16:25,010
-- Yeah,
-- actually, you know,

367
00:16:25,020 --> 00:16:29,010
you just reminded me is elastic search does this because like for example,

368
00:16:29,020 --> 00:16:30,020
what happens is when you,

369
00:16:30,030 --> 00:16:34,460
when you're like shoveling data into elastic search at an alarming rate it every,

370
00:16:34,469 --> 00:16:35,559
every couple of seconds,

371
00:16:35,570 --> 00:16:38,880
it basically stops to like flush everything out to disc and make sure it's cold

372
00:16:39,599 --> 00:16:43,580
and you can basically tell elastic search like don't do any of this safety stuff.

373
00:16:43,599 --> 00:16:44,950
You just like, I'm gonna,

374
00:16:44,960 --> 00:16:48,750
I'm gonna hook this fire hose up to you and you're gonna take what I give you and you're

375
00:16:48,760 --> 00:16:50,369
going to deal with it and then you just

376
00:16:50,380 --> 00:16:53,030
obviously it it's not writing to disk very often.

377
00:16:53,039 --> 00:16:57,690
So it it's really fast. But if you lose power like it's all toast.

378
00:16:57,700 --> 00:16:59,979
And the thing is 20 years ago, I would have been like, oh that's dangerous.

379
00:16:59,989 --> 00:17:01,679
Now, I be like, who cares? Just engineer it.

380
00:17:01,690 --> 00:17:02,530
So you don't lose power,

381
00:17:02,539 --> 00:17:04,989
get dual power supplies in every server have two

382
00:17:05,000 --> 00:17:08,390
separate power grids with batteries and diesel generators done.

383
00:17:08,729 --> 00:17:09,108
I mean,

384
00:17:09,118 --> 00:17:12,670
or you just architect your data in such a way that you can

385
00:17:12,680 --> 00:17:15,858
afford to lose power and just reload the last bit you didn't get,

386
00:17:15,868 --> 00:17:18,829
you know, I mean, there's, there's ways to do this stuff and

387
00:17:18,959 --> 00:17:19,209
I mean,

388
00:17:19,219 --> 00:17:22,739
that's one of the things that some days I become infuriated

389
00:17:22,750 --> 00:17:25,030
and some days I love it that there's so many modern

390
00:17:25,160 --> 00:17:28,709
compute systems that they were like, just throw away all those hard problems.

391
00:17:28,719 --> 00:17:30,000
We won't worry about those like

392
00:17:30,119 --> 00:17:32,520
like database transactions, atomic like nested it.

393
00:17:32,604 --> 00:17:35,844
Atomic transactions are one of my favorite back in the early sequel days,

394
00:17:35,915 --> 00:17:38,744
like you needed nested atomic transactions,

395
00:17:38,755 --> 00:17:39,984
right where you can have transactions

396
00:17:39,994 --> 00:17:42,015
inside of transactions inside of transactions,

397
00:17:42,025 --> 00:17:42,785
sort of set up.

398
00:17:42,795 --> 00:17:45,785
And a lot of the modern databases were like, eh that's hard to do,

399
00:17:45,795 --> 00:17:46,984
let's just not do that.

400
00:17:47,114 --> 00:17:47,984
This is why my

401
00:17:48,094 --> 00:17:52,505
QL won my SQL performance wise. Remember was amazing.

402
00:17:52,564 --> 00:17:54,584
Yeah, because it didn't have any transactions.

403
00:17:55,025 --> 00:17:56,344
It basically

404
00:17:57,329 --> 00:17:59,869
it didn't have any safety seatbelts

405
00:18:00,260 --> 00:18:00,709
or no,

406
00:18:01,550 --> 00:18:03,670
it didn't have no, it had like no doors.

407
00:18:03,680 --> 00:18:06,400
You hung out the side of the car while it was driving.

408
00:18:06,410 --> 00:18:08,670
It was, you know what it did have that almost nobody else had.

409
00:18:10,010 --> 00:18:10,459
It was

410
00:18:11,099 --> 00:18:12,650
well, no, not just free post

411
00:18:12,920 --> 00:18:16,140
high school was free but it why did it not win as much as my school?

412
00:18:16,150 --> 00:18:19,229
And the reason is my school also had very cheap and easy multi-tenant.

413
00:18:19,390 --> 00:18:21,030
So you could run one instance of my

414
00:18:21,650 --> 00:18:23,589
and carve it up between 100 people.

415
00:18:23,719 --> 00:18:25,319
I agree. And I found

416
00:18:25,479 --> 00:18:25,599
poster

417
00:18:25,839 --> 00:18:29,150
-- was much harder to set up as well because it
-- was correct. It was engineered.

418
00:18:29,160 --> 00:18:32,979
-- Well, that's true. It was, it was done. Right.
-- Right. Like

419
00:18:33,410 --> 00:18:38,750
SQL was the Mercedes and my SQL was, I don't know what I would actually compare it to.

420
00:18:38,760 --> 00:18:40,880
That's a bad analogy. I would say posters.

421
00:18:41,050 --> 00:18:42,510
QL was like the,

422
00:18:42,520 --> 00:18:46,829
the properly built and functioning heavy machinery on the construction site.

423
00:18:47,000 --> 00:18:49,800
And my sequel was like some guy rolled up in a

424
00:18:49,810 --> 00:18:52,189
truck and told you not to ask too many questions.

425
00:18:52,199 --> 00:18:53,819
He unloaded something.

426
00:18:54,329 --> 00:18:55,910
We'll get it done. Just

427
00:18:56,579 --> 00:18:57,989
make sure the OSHA guy is busy.

428
00:18:58,270 --> 00:19:01,030
That's right. You Forman, you look away,

429
00:19:01,329 --> 00:19:03,150
we're gonna do some stuff now.

430
00:19:03,260 --> 00:19:03,459
Yeah,

431
00:19:03,890 --> 00:19:06,810
pretty much. And there's a lot of stuff where that's entirely appropriate.

432
00:19:06,819 --> 00:19:09,109
Like, if I'm running a little wordpress website or whatever,

433
00:19:09,209 --> 00:19:11,050
I want fast and cheap and quick. Sure.

434
00:19:11,640 --> 00:19:11,969
Anyway,

435
00:19:12,119 --> 00:19:12,910
anyway, anyway,

436
00:19:13,290 --> 00:19:14,469
but back to the security thing,

437
00:19:14,709 --> 00:19:19,099
this is, this is, I think maybe one of the powers of open source. Is that also,

438
00:19:20,310 --> 00:19:23,280
how many times have we seen something where some open source developer goes?

439
00:19:23,290 --> 00:19:23,959
Hey, you know,

440
00:19:24,099 --> 00:19:25,599
like, what if we do this?

441
00:19:25,609 --> 00:19:26,050
And it's like,

442
00:19:26,060 --> 00:19:28,229
what was the open BS D firewall fail over stuff

443
00:19:28,239 --> 00:19:30,369
that was like real time fail over called again.

444
00:19:30,380 --> 00:19:32,510
I have no idea. Uh Carp or whatever anyways.

445
00:19:32,520 --> 00:19:36,170
So they basically uh you know, some clever open BS D admins were like, hey,

446
00:19:36,180 --> 00:19:39,589
if we do this thing, we can basically have fail over and yeah, Carp and PF sync,

447
00:19:39,599 --> 00:19:41,069
we can have real time fail over.

448
00:19:41,079 --> 00:19:43,359
Like you can basically take a shotgun shoot one of the,

449
00:19:43,369 --> 00:19:46,310
one of the two firewalls and no connections get lost.

450
00:19:46,319 --> 00:19:46,739
Like

451
00:19:46,930 --> 00:19:47,349
thanks,

452
00:19:47,729 --> 00:19:51,905
like back then firewalls fail over in the sense of like this firewall died. Ok.

453
00:19:51,915 --> 00:19:53,425
This firewall will now take over,

454
00:19:53,435 --> 00:19:56,775
but all your existing connections are dead and have to be reestablished.

455
00:19:56,785 --> 00:19:57,094
And

456
00:19:57,214 --> 00:19:59,584
if it's web surfing, great, if it's like, you know,

457
00:19:59,594 --> 00:20:03,685
an FTP session for a bank doing a batch transaction, not so great.

458
00:20:03,694 --> 00:20:06,795
They came up with a really simple clever solution, you know,

459
00:20:06,905 --> 00:20:10,385
and, and maybe commercial people can come up with that but maybe they can't.

460
00:20:10,395 --> 00:20:12,175
And that's the thing I find with open source, right?

461
00:20:12,185 --> 00:20:14,064
How many clever solutions have we seen?

462
00:20:14,074 --> 00:20:17,464
And again, you know, you staple a couple 1000 clever solutions together.

463
00:20:17,474 --> 00:20:18,505
And I mean, well, you have Linux,

464
00:20:19,959 --> 00:20:22,959
I mean, I I think that's modern development environments.

465
00:20:22,969 --> 00:20:27,119
I mean, look at the container world, look at open source in general, look at N PM,

466
00:20:27,130 --> 00:20:27,880
look at everything.

467
00:20:27,890 --> 00:20:30,699
It's, it's very much that kind of UNIX model of.

468
00:20:30,709 --> 00:20:34,339
We're going to do a bunch of little tiny things and then turn them into one big thing.

469
00:20:34,349 --> 00:20:34,619
And

470
00:20:34,729 --> 00:20:37,880
I think even dealing with like security vulnerabilities

471
00:20:38,130 --> 00:20:43,540
in open source is kind of a similar model where like this is a great example of,

472
00:20:43,550 --> 00:20:45,479
there was some coordinations that had to be done.

473
00:20:45,489 --> 00:20:48,260
All the right people came together in all the right ways and

474
00:20:48,630 --> 00:20:50,489
it's getting fixed and that's great.

475
00:20:50,500 --> 00:20:55,290
Now, I will say though one of the caveats to this one is it affects

476
00:20:55,479 --> 00:21:01,130
certain modern Android phones and obviously, the the handset ecosystem

477
00:21:01,260 --> 00:21:03,410
is legendary for not getting many updates.

478
00:21:03,420 --> 00:21:05,199
Now, it only affects only a couple of phones.

479
00:21:05,209 --> 00:21:08,439
I know it's like, I think some Google pixels and maybe some Samsung phones.

480
00:21:08,449 --> 00:21:11,410
So it's not like it's a widespread problem, but you get the idea,

481
00:21:11,420 --> 00:21:12,760
it's probably gonna be like months.

482
00:21:12,770 --> 00:21:15,609
If you have an Android phone, you probably have a pile of vulnerabilities.

483
00:21:16,510 --> 00:21:18,520
This is one of the reasons I will never buy an Android phone

484
00:21:18,640 --> 00:21:20,300
outside of the one I have for testing,

485
00:21:22,369 --> 00:21:24,729
especially with Canadian carriers being what they are.

486
00:21:25,130 --> 00:21:25,280
It's

487
00:21:25,420 --> 00:21:25,520
true.

488
00:21:25,890 --> 00:21:26,520
I just

489
00:21:26,780 --> 00:21:27,760
know anyway.

490
00:21:28,380 --> 00:21:32,489
Yeah, pretty much so. I, the best part is that not only did Linux

491
00:21:32,660 --> 00:21:35,869
fix this vulnerability but because it's so public

492
00:21:35,880 --> 00:21:37,400
and because the write up is so public,

493
00:21:37,410 --> 00:21:39,910
you know, I also suspect, for example, probably the BS D people,

494
00:21:39,920 --> 00:21:41,780
even though there's like no shared code,

495
00:21:42,020 --> 00:21:43,569
they've probably taken a quick look at their code

496
00:21:43,579 --> 00:21:45,739
to make sure they didn't do anything similarly silly.

497
00:21:46,760 --> 00:21:46,770
I

498
00:21:47,020 --> 00:21:47,170
mean,

499
00:21:47,479 --> 00:21:47,619
that's

500
00:21:47,780 --> 00:21:48,750
part of the beauty of this.

501
00:21:49,250 --> 00:21:50,550
Yeah, I, I,

502
00:21:51,369 --> 00:21:53,310
man, the number of times I've done that

503
00:21:53,439 --> 00:21:57,359
where something comes out, it's like, I know there's no way I'm vulnerable to this,

504
00:21:57,369 --> 00:22:00,869
but I'm going to look for similar problems in what I'm doing

505
00:22:01,119 --> 00:22:04,060
because I don't want to be caught with something similar.

506
00:22:04,099 --> 00:22:06,199
Everybody makes the same assumptions.

507
00:22:06,449 --> 00:22:08,459
Yeah. Actually, you know what's funny about that?

508
00:22:08,469 --> 00:22:11,739
I remember, in fact, this is probably on the podcast. I remember when

509
00:22:12,000 --> 00:22:15,449
some of the, like, specter and meltdown things came out for intel chips

510
00:22:15,640 --> 00:22:20,410
and everyone was like, oh, by a MD, they're safe. I'm like, it's coming for them too

511
00:22:21,300 --> 00:22:23,290
and it did eventually.

512
00:22:23,699 --> 00:22:25,819
I'm kind of shocked arm never got nailed by all that.

513
00:22:26,359 --> 00:22:27,020
Uh

514
00:22:27,270 --> 00:22:31,770
I don't know if arm is quite as aggressive in the way they do that.

515
00:22:31,780 --> 00:22:34,219
The caching inside the chip and the branch predictions.

516
00:22:34,500 --> 00:22:36,540
You think Apple silicon based on arm is

517
00:22:36,550 --> 00:22:39,329
not super duper duper aggressive on performance?

518
00:22:39,930 --> 00:22:41,040
Yeah. It, well,

519
00:22:41,150 --> 00:22:42,229
it is now

520
00:22:43,260 --> 00:22:46,469
the new Apple stuff like as much as I want to hate Apple sometimes.

521
00:22:46,479 --> 00:22:48,910
Like those, those chips are pretty sweet looking

522
00:22:49,589 --> 00:22:53,869
what they're talking about. Being able to like real time decoder mangle 18

523
00:22:54,119 --> 00:22:55,989
4 K video streams or something or

524
00:22:56,449 --> 00:22:57,170
-- something
-- like

525
00:22:57,180 --> 00:22:58,300
-- that. It's a
-- lot.

526
00:22:58,319 --> 00:22:58,589
It's,

527
00:22:58,599 --> 00:23:00,150
it's basically we're at the point where it's like how

528
00:23:00,160 --> 00:23:02,390
many kilo quads it's just made up numbers and stuff

529
00:23:02,599 --> 00:23:03,319
like that's what they

530
00:23:03,469 --> 00:23:06,819
don't get. Why would you tell me how many transistors are in? Ac pu it's

531
00:23:07,109 --> 00:23:08,050
like a lot.

532
00:23:08,229 --> 00:23:08,300
I,

533
00:23:09,219 --> 00:23:11,089
I can't fathom the numbers anymore and,

534
00:23:11,099 --> 00:23:16,020
and computers have become so hilariously fast that I just nothing makes sense.

535
00:23:16,030 --> 00:23:18,050
-- I have no idea what to do
-- or, you know, the solutions to

536
00:23:18,150 --> 00:23:18,579
like

537
00:23:18,680 --> 00:23:22,010
the sound on my motherboard died. And so I

538
00:23:22,189 --> 00:23:25,729
currently have everything hooked up like through my monitor which has HDM I,

539
00:23:25,739 --> 00:23:28,089
which does sound, I was like, oh yeah, my monitor has

540
00:23:28,250 --> 00:23:28,260
a,

541
00:23:28,459 --> 00:23:30,780
you know, has a microphone port on the side, cool sound.

542
00:23:31,020 --> 00:23:32,069
And then I ordered a sound block

543
00:23:32,329 --> 00:23:33,640
card online because I'm just like,

544
00:23:33,780 --> 00:23:34,989
I'm not even going to try

545
00:23:35,199 --> 00:23:35,520
a for

546
00:23:35,680 --> 00:23:39,079
-- real sound blaster brand.
-- Like an actual sound blaster.

547
00:23:39,089 --> 00:23:40,400
They still exist.

548
00:23:40,729 --> 00:23:44,280
They actually some real nice gear USB and actual stuff.

549
00:23:44,300 --> 00:23:49,650
Anyways, it's like 50 bucks, Canadian, so 40 well, 37 whatever us.

550
00:23:49,930 --> 00:23:52,800
And so I'm basically just, I'm like, I'm not gonna just,

551
00:23:52,810 --> 00:23:55,810
I'm gonna smack a sound card in there, disable it, the sound in the Bios,

552
00:23:56,010 --> 00:23:57,119
plug it in, be done,

553
00:23:57,800 --> 00:23:58,290
right? Because

554
00:23:59,050 --> 00:24:00,780
the time to try and actually

555
00:24:01,229 --> 00:24:03,979
confirm that it's like dead dead on the motherboard,

556
00:24:05,079 --> 00:24:05,510
you know,

557
00:24:05,969 --> 00:24:09,339
because it makes no sense that it would die because it really, how the heck did it die?

558
00:24:09,349 --> 00:24:09,800
I don't know

559
00:24:10,050 --> 00:24:11,569
-- who cares
-- exactly.

560
00:24:11,589 --> 00:24:12,680
Ok. So

561
00:24:12,819 --> 00:24:17,219
we're gonna end on this note because you have this attitude of who cares.

562
00:24:17,310 --> 00:24:21,229
And I think the vast majority of us, if we saw some corrupted files occasionally,

563
00:24:21,239 --> 00:24:22,699
we'd be like, who cares?

564
00:24:22,709 --> 00:24:29,234
So the fact that someone had the wherewithal to go through this is amazing.

565
00:24:29,244 --> 00:24:31,375
And I love it. I love it so much.

566
00:24:31,464 --> 00:24:35,094
You know, what it kind of reminds me of is like crypto analysis back in, you know,

567
00:24:35,104 --> 00:24:40,204
prior to the 19 fifties where it was, there were no computers, there was you a pencil,

568
00:24:40,214 --> 00:24:40,974
some paper,

569
00:24:41,204 --> 00:24:43,814
go figure out what this random stream of gibberish means.

570
00:24:44,045 --> 00:24:44,685
That's right.

571
00:24:45,250 --> 00:24:48,489
-- And these people did, which blows my mind.
-- It's amazing.

572
00:24:48,500 --> 00:24:50,599
It's so, actually, if, if, for anyone listening,

573
00:24:50,609 --> 00:24:53,390
there is a book by Neil Stevenson called Krypton

574
00:24:53,900 --> 00:24:54,109
Naan.

575
00:24:54,410 --> 00:24:58,270
And he kind of uh he novelizes a lot of this

576
00:24:58,439 --> 00:25:02,709
and it's, it's very well done and it's a very good book. And if you have any

577
00:25:02,939 --> 00:25:03,969
desire

578
00:25:04,300 --> 00:25:08,430
to learn anything about cryptography or just kind of some of

579
00:25:08,439 --> 00:25:11,239
the code breaking that happened during like early World War Two.

580
00:25:11,300 --> 00:25:14,000
It is a phenomenal read. It's amazing.

581
00:25:14,670 --> 00:25:19,000
All right. All right. I think we should call this one man. It's been,

582
00:25:19,689 --> 00:25:20,579
I love it.

583
00:25:20,589 --> 00:25:26,660
This is one of those issues that just makes me smile for all the right reasons.

584
00:25:26,670 --> 00:25:29,479
And I love that so much now, of course,

585
00:25:29,489 --> 00:25:32,479
I'm sure there's some people not smiling because they're working

586
00:25:32,890 --> 00:25:35,260
ridiculous hours to get this fixed. So like,

587
00:25:35,500 --> 00:25:39,800
you know, peace be with you all. I good luck. That's all I could say

588
00:25:40,469 --> 00:25:43,319
so. All right, man. Thank you, Kurt. Thank you for listening.

589
00:25:43,329 --> 00:25:45,239
Go to open source security podcast.com. Hit up our

590
00:25:45,500 --> 00:25:46,079
show notes,

591
00:25:46,290 --> 00:25:46,489
YZ Pound

592
00:25:46,709 --> 00:25:46,729
do

593
00:25:46,989 --> 00:25:49,380
podcast. Hashtag You hit us up on social media.

594
00:25:49,390 --> 00:25:51,489
Kurt have a marvelous rest of your day.

595
00:25:51,810 --> 00:25:53,199
You too. Thanks everybody.

596
00:25:53,400 --> 00:25:55,150
Thanks everyone. Bye bye.