0
00:00:05,519 --> 00:00:08,670
Hello and welcome to the open source security podcast with myself,

1
00:00:08,680 --> 00:00:11,100
Kurt Siefried and my partner in identifying software

2
00:00:11,109 --> 00:00:12,970
packages because they need to be fixed.

3
00:00:12,979 --> 00:00:13,859
-- Josh
-- Pressers.

4
00:00:13,869 --> 00:00:16,829
I mean, maybe they don't need to be fixed, but we need to know what they are.

5
00:00:17,110 --> 00:00:21,260
All right. So I'll, I'm gonna set the stage for this one. We'll just jump right in.

6
00:00:21,620 --> 00:00:24,979
There was a request for comment from SISA.

7
00:00:25,920 --> 00:00:25,930
Uh

8
00:00:26,030 --> 00:00:30,569
-- It's been, it'll be several weeks by the time this episode comes out,
-- but by the way,

9
00:00:30,579 --> 00:00:32,150
I tried to leave a comment and their

10
00:00:32,159 --> 00:00:34,610
site is broken for that regulations dot Whatever go

11
00:00:34,950 --> 00:00:35,779
over now,

12
00:00:36,880 --> 00:00:38,090
that's why it wouldn't work.

13
00:00:38,099 --> 00:00:38,340
Oh, well,

14
00:00:38,349 --> 00:00:39,709
it would have been helpful if it gave an

15
00:00:39,720 --> 00:00:41,560
error because I could pull up other people's comments.

16
00:00:41,569 --> 00:00:42,750
But it wouldn't. Anyways,

17
00:00:43,250 --> 00:00:45,250
that website, it's good, but it needs work.

18
00:00:45,360 --> 00:00:47,750
It's a government website, Kurt, like, come on.

19
00:00:47,830 --> 00:00:49,880
It's shockingly decent, but it's just in this case,

20
00:00:49,889 --> 00:00:51,880
it was not clear that the comment period is over.

21
00:00:51,889 --> 00:00:52,459
Anyway,

22
00:00:53,250 --> 00:00:56,819
I was part of a group at the open SSF that wrote a,

23
00:00:57,020 --> 00:00:57,799
we'll say

24
00:00:58,169 --> 00:01:02,009
reasonable response to sis's request for comment.

25
00:01:02,020 --> 00:01:05,160
And the SISA paper is kind of long and disjointed and weird.

26
00:01:05,169 --> 00:01:08,500
Well, I, I liked it because they did a thought experiment

27
00:01:08,690 --> 00:01:10,839
and they had four outcomes and we're like,

28
00:01:10,849 --> 00:01:13,639
here's kind of the upsides and downsides of these four different outcomes.

29
00:01:13,650 --> 00:01:13,720
-- And,
-- I

30
00:01:13,730 --> 00:01:16,370
-- mean,
-- maybe, ok, that's fair. Whatever, regardless

31
00:01:16,589 --> 00:01:20,360
the purpose of this conversation is talking about how we,

32
00:01:20,435 --> 00:01:22,846
you can identify software, which sounds boring.

33
00:01:22,856 --> 00:01:24,776
But when you actually start talking about it,

34
00:01:24,786 --> 00:01:26,265
it gets really interesting because it's funny,

35
00:01:26,276 --> 00:01:30,935
Kurt sent me like walls of text over the since yesterday about this topic.

36
00:01:30,945 --> 00:01:34,695
And I'm like, it's ok, like we know how to answer all of this stuff. We talked about it.

37
00:01:34,846 --> 00:01:39,005
And so we're going to talk about identifying software because it's

38
00:01:39,015 --> 00:01:42,755
actually really important and it's really freaking hard to do.

39
00:01:43,045 --> 00:01:43,566
So

40
00:01:44,286 --> 00:01:47,615
I will explain kind of what SISA talked about

41
00:01:47,972 --> 00:01:52,101
and then we'll go from there, right. Fundamentally, they talked about

42
00:01:52,232 --> 00:01:55,942
what is it four ways to identify software in their document?

43
00:01:56,092 --> 00:02:00,391
Well, not so much, four ways to identify software but sort of four frameworks like,

44
00:02:00,402 --> 00:02:02,671
is it gonna be centralized or decentralized?

45
00:02:02,861 --> 00:02:03,052
That's

46
00:02:03,241 --> 00:02:03,571
right.

47
00:02:03,582 --> 00:02:05,921
So it's the same technology but the application

48
00:02:05,931 --> 00:02:08,151
and the the business process is different.

49
00:02:08,162 --> 00:02:10,390
-- Let's,
-- let's just explain the ones they talked about.

50
00:02:10,401 --> 00:02:13,511
They are called PERL package URL. That's a very open source project.

51
00:02:13,522 --> 00:02:14,951
Very cool, very interesting.

52
00:02:15,300 --> 00:02:19,600
They talk about C Pe which is common platform enumeration that's run by Nist

53
00:02:19,779 --> 00:02:21,089
C PE S are terrible.

54
00:02:21,100 --> 00:02:24,679
Anyone who works with C pe is just like shuttered in faint fear and pain.

55
00:02:24,770 --> 00:02:26,169
Then you've got something called Omni

56
00:02:26,380 --> 00:02:28,839
Bore, which used to be called Git bomb.

57
00:02:28,850 --> 00:02:33,000
And it's a very weird and unique way to identify this stuff.

58
00:02:33,009 --> 00:02:36,080
It has its place, but probably not in this document.

59
00:02:36,089 --> 00:02:38,460
And then there is, they talk about SW I very

60
00:02:38,800 --> 00:02:42,639
-- sw is software ID.
-- I think Microsoft does it and

61
00:02:42,860 --> 00:02:43,720
maybe

62
00:02:43,979 --> 00:02:44,979
I think there was one other.

63
00:02:44,990 --> 00:02:50,839
my understanding is it's used fairly heavily in the like IOT embedded device space.

64
00:02:51,149 --> 00:02:52,509
It's, it's

65
00:02:52,669 --> 00:02:53,720
sw I is considered an

66
00:02:54,089 --> 00:02:54,130
EPA

67
00:02:54,300 --> 00:02:55,070
format

68
00:02:55,300 --> 00:02:57,320
but no one likes it. Well, I shouldn't say that

69
00:02:57,899 --> 00:03:01,979
people in the like software space we exist in the very like high

70
00:03:02,080 --> 00:03:06,039
level application. None of us like SW I, because it's very annoying to use.

71
00:03:06,270 --> 00:03:07,970
So we're not going to talk about it very much.

72
00:03:08,190 --> 00:03:10,830
This is something I want to raise is that the problem is

73
00:03:11,110 --> 00:03:13,720
there are multiple software industries, there's the open source

74
00:03:14,809 --> 00:03:17,429
and I don't even want to say industry because it's in some cases, it's just,

75
00:03:17,440 --> 00:03:19,759
people are like, I wrote this thing and released it and if you like it great.

76
00:03:19,770 --> 00:03:22,919
And if you don't, well go away all the way to like a thing like curl where, you know,

77
00:03:22,929 --> 00:03:25,929
he's is a mature project with over 1200

78
00:03:25,940 --> 00:03:28,350
contributors and it's like critical to the world

79
00:03:29,289 --> 00:03:32,100
and then there's proprietary software, there's IOT software,

80
00:03:32,110 --> 00:03:33,639
there's hardware stuff, there's

81
00:03:33,809 --> 00:03:34,559
blah, blah, blah

82
00:03:34,789 --> 00:03:35,320
and the

83
00:03:35,539 --> 00:03:39,000
problem is, it's not just that they have different needs, they do,

84
00:03:39,240 --> 00:03:41,800
but they have entirely different cultures.

85
00:03:41,970 --> 00:03:42,979
Yes. That's right.

86
00:03:43,110 --> 00:03:43,550
That's right.

87
00:03:43,800 --> 00:03:47,190
So, and this is part of the challenge is that the reality is,

88
00:03:47,199 --> 00:03:49,759
is you consume software at scale and by scale, I mean,

89
00:03:49,770 --> 00:03:52,830
if your organization has more than 10 people, you are now consuming

90
00:03:53,050 --> 00:03:54,940
software and services at scale.

91
00:03:54,949 --> 00:03:55,649
Whether you like it or not,

92
00:03:55,660 --> 00:03:58,789
like you're gonna run Windows or Mac Os or Linux plus everything it runs.

93
00:03:58,800 --> 00:03:59,339
So right there,

94
00:03:59,350 --> 00:04:03,860
-- boom is hundreds of things
-- and and this is one of the things we discussed with in the

95
00:04:04,009 --> 00:04:05,509
SSF document is like

96
00:04:05,630 --> 00:04:07,610
there is going to be one solution.

97
00:04:07,619 --> 00:04:10,949
So let's not pretend there is because don't get me wrong.

98
00:04:11,029 --> 00:04:12,850
If I was a dictator of the world,

99
00:04:12,860 --> 00:04:15,449
I would love to be like everyone use pearl because I like it.

100
00:04:15,460 --> 00:04:18,928
But I, I also recognize it doesn't work for everything and that's OK.

101
00:04:19,100 --> 00:04:19,760
That's OK.

102
00:04:19,970 --> 00:04:20,649
However,

103
00:04:20,858 --> 00:04:23,730
there are things that don't work and can't work.

104
00:04:23,739 --> 00:04:28,369
And this is like, for example, why C pe is I would say an abject failure because it is

105
00:04:28,950 --> 00:04:30,910
Nist is in charge of C pe.

106
00:04:31,220 --> 00:04:34,600
Nist is responsible for creating ac pe

107
00:04:34,609 --> 00:04:38,079
identifier for every software version of anything.

108
00:04:38,089 --> 00:04:43,000
And they make typos, they make tons of typos, they're inconsistent, they're slow,

109
00:04:43,119 --> 00:04:48,359
it's awful. This is why C pe is terrible because it's a centralized database

110
00:04:48,700 --> 00:04:52,000
-- and it's just a pain.
-- This is a perfect example.

111
00:04:52,179 --> 00:04:56,640
Of, you can absolutely have a centralized database. But with more open access in

112
00:04:56,809 --> 00:04:58,799
this case though, there is no open access. It is N

113
00:04:58,989 --> 00:04:59,890
database and

114
00:05:00,010 --> 00:05:00,510
N runs it.

115
00:05:00,619 --> 00:05:03,880
And this is a perfect example of like this is where I tried to take

116
00:05:04,029 --> 00:05:08,890
um CV and where I'm trying to take CWE is to have a central database. Sure.

117
00:05:08,899 --> 00:05:11,170
But let's make it open, let's let people participate.

118
00:05:11,619 --> 00:05:12,869
Yeah, it's not working out.

119
00:05:13,420 --> 00:05:17,089
Maybe. I don't know if I agree with that. Let's talk about that.

120
00:05:17,100 --> 00:05:18,570
So it would be better than just having

121
00:05:18,820 --> 00:05:21,899
-- charge.
-- Maybe. OK. Yes, I, I won't disagree with that.

122
00:05:22,260 --> 00:05:23,000
Now,

123
00:05:24,000 --> 00:05:25,779
you're going to get arguments.

124
00:05:25,790 --> 00:05:30,440
Like for example, CV E has their CN A program which they argue that's, oh,

125
00:05:30,450 --> 00:05:33,239
we're a decentralized database which I don't think they

126
00:05:33,250 --> 00:05:36,070
are because technically Miter is still driving the bus.

127
00:05:36,130 --> 00:05:40,000
If it's a decentralized database, how come there's only one source for the data?

128
00:05:40,239 --> 00:05:41,600
That's fair officially.

129
00:05:41,609 --> 00:05:45,350
Now, unofficially, actually, we need to have that post CV era talk at some point.

130
00:05:45,369 --> 00:05:47,760
I think we both need to think about it because I think it's actually

131
00:05:48,390 --> 00:05:50,119
because I've been living in a post CV

132
00:05:50,220 --> 00:05:51,519
era for about 15 years now.

133
00:05:51,730 --> 00:05:53,559
I think we all are and we don't know it.

134
00:05:53,570 --> 00:05:55,540
-- But that's
-- like the rest of you are just catching up.

135
00:05:55,549 --> 00:05:56,959
-- We're not
-- talking about that today.

136
00:05:57,429 --> 00:05:58,010
-- But
-- OK,

137
00:05:58,019 --> 00:05:58,859
so I want to,

138
00:05:58,959 --> 00:06:01,859
so there's now on the other side

139
00:06:02,000 --> 00:06:04,630
of a centralized database,

140
00:06:04,829 --> 00:06:09,700
you have functionally how pearl works every time I say pearl, I mean P URL,

141
00:06:09,709 --> 00:06:14,200
-- not P er L the language just,
-- I don't think anybody cares about good old

142
00:06:14,399 --> 00:06:14,500
pearl.

143
00:06:15,230 --> 00:06:18,269
This happens all the time when I start talking about pearl, they're like,

144
00:06:18,690 --> 00:06:21,750
does anyone run pearl anymore? I'm like, what? Oh the language.

145
00:06:21,760 --> 00:06:23,040
No, we're not talking about that.

146
00:06:23,200 --> 00:06:25,399
-- So
-- anyway, maybe just call pu LP

147
00:06:25,459 --> 00:06:25,929
URL, P

148
00:06:26,130 --> 00:06:31,799
URL. S. So pearls conversely, there's no like centralized repository,

149
00:06:31,940 --> 00:06:36,260
there's no like central definition of, of things necessarily.

150
00:06:36,269 --> 00:06:38,869
It's basically you look at a piece of software

151
00:06:39,309 --> 00:06:39,929
and

152
00:06:40,059 --> 00:06:42,950
using information about the software,

153
00:06:43,170 --> 00:06:44,890
you can build the pearl.

154
00:06:44,929 --> 00:06:48,529
It's not meant to be something that's necessarily like track somewhere.

155
00:06:48,540 --> 00:06:51,850
It's meant to be something you can use evidence to create,

156
00:06:52,100 --> 00:06:55,809
which is the complete opposite of the centralized database.

157
00:06:55,820 --> 00:06:59,179
And there's also a very subtle thing to Pr L which is ideally

158
00:06:59,190 --> 00:07:02,630
if two people look at the same piece of software using Pr L,

159
00:07:02,640 --> 00:07:06,010
they will ideally create a, I mean, in a perfect world identical,

160
00:07:06,084 --> 00:07:09,744
but a close enough pr L that you can reconcile them,

161
00:07:09,954 --> 00:07:10,505
right?

162
00:07:10,674 --> 00:07:13,975
And that is a major thing because all of these see and it's funny because the,

163
00:07:13,984 --> 00:07:16,545
the CIA paper explicitly calls that out that

164
00:07:17,144 --> 00:07:22,065
we in a perfect world, they want everything to have one identifier

165
00:07:22,364 --> 00:07:24,994
and for one identifier to identify one thing,

166
00:07:25,375 --> 00:07:29,345
that's it a 1 to 1 relationship. And unfortunately, that's not how the world works.

167
00:07:29,355 --> 00:07:29,434
And

168
00:07:29,684 --> 00:07:32,774
-- here's where
-- the girl gets even weirder. So here's what's wild.

169
00:07:33,100 --> 00:07:37,079
So if I install a package with pie, pie, pie,

170
00:07:37,649 --> 00:07:42,279
pie becomes part of the pearl definition because it's coming from pi pie.

171
00:07:42,540 --> 00:07:43,480
If I

172
00:07:43,600 --> 00:07:45,130
install the same package from

173
00:07:45,459 --> 00:07:45,769
github,

174
00:07:45,929 --> 00:07:48,670
now the pearl has github in its name because I've installed

175
00:07:48,679 --> 00:07:50,720
it from GI even though they're literally the same package.

176
00:07:50,730 --> 00:07:55,790
Now, if I download the package off the internet off of a random website,

177
00:07:55,899 --> 00:07:58,440
now, I have the generic tag in my pearl,

178
00:07:58,450 --> 00:08:01,600
meaning I could have more uh there's ways to do it even more.

179
00:08:01,609 --> 00:08:02,829
But like in this example,

180
00:08:02,839 --> 00:08:05,950
that is three different pearls for functionally the same thing.

181
00:08:06,339 --> 00:08:08,372
And then ideally, you would also, for example,

182
00:08:08,382 --> 00:08:11,622
have a hash of the original Tar Ball and be like, oh this thing from github

183
00:08:11,842 --> 00:08:13,622
and this thing from Pipi and this thing from

184
00:08:14,083 --> 00:08:14,372
Bob's

185
00:08:14,493 --> 00:08:14,523
House

186
00:08:14,673 --> 00:08:16,532
software are the exact same

187
00:08:16,933 --> 00:08:20,382
in a perfect world. I exact same Tar Ball name, version and

188
00:08:20,483 --> 00:08:23,433
file hash. It's just I got them in different ways. And that

189
00:08:23,782 --> 00:08:25,273
to be clear really matters.

190
00:08:25,282 --> 00:08:29,312
It does because also there will be times where that Tar Ball

191
00:08:29,322 --> 00:08:32,672
or that archive is auto generated and it's not the same,

192
00:08:33,145 --> 00:08:35,765
it is the same, but it's not like for example,

193
00:08:35,775 --> 00:08:39,344
two files might be in a different order in the Tar Ball, which means now your file has

194
00:08:39,875 --> 00:08:41,145
100% off.

195
00:08:41,683 --> 00:08:45,784
But if you like unpack both of them and d them, they are bit for bit identical.

196
00:08:46,034 --> 00:08:50,984
Not just that if you generate a Atgz right now

197
00:08:51,104 --> 00:08:53,534
and then you do it one second later,

198
00:08:53,994 --> 00:08:57,705
you're going it, it depending, I mean, not always but like conceivably

199
00:08:58,155 --> 00:09:01,065
it could be different because the time stamps are different, right?

200
00:09:01,580 --> 00:09:03,880
And so this is one of the challenges to

201
00:09:03,890 --> 00:09:07,219
that whole like reproducible software universe and discussion.

202
00:09:07,229 --> 00:09:07,859
Now,

203
00:09:07,909 --> 00:09:13,710
this is where Omnivore is interesting because Omnivore kind of creates

204
00:09:13,719 --> 00:09:18,469
these weird hash trees of the content in the archives.

205
00:09:18,479 --> 00:09:20,229
So you still have some of the problems

206
00:09:20,239 --> 00:09:22,450
around weird time stamping and things like that.

207
00:09:22,820 --> 00:09:25,119
But when you're focusing kind of more on

208
00:09:25,580 --> 00:09:27,450
you'd be able to reconcile it better. You know,

209
00:09:27,969 --> 00:09:29,679
in theory, in theory, I mean,

210
00:09:30,039 --> 00:09:32,159
there's a huge asterisk to this and Omni

211
00:09:32,270 --> 00:09:35,820
Bore is very new and it's been evolving for a long time. So

212
00:09:35,979 --> 00:09:38,630
like even some of the things we're going to talk about now

213
00:09:38,919 --> 00:09:41,940
be different by the time this episode comes out, which is fine.

214
00:09:41,950 --> 00:09:44,859
But now at the same time, it's very hash focused. Like if I gave you an omni

215
00:09:45,080 --> 00:09:45,700
hash,

216
00:09:46,059 --> 00:09:46,719
you'd be like,

217
00:09:47,000 --> 00:09:48,630
-- what, what is, what is
-- this? I'd

218
00:09:48,750 --> 00:09:49,859
shove it into Google and

219
00:09:50,200 --> 00:09:51,039
-- hopefully,
-- if you're lucky,

220
00:09:51,109 --> 00:09:51,849
that's it. Like.

221
00:09:51,969 --> 00:09:54,900
And that leads to the biggest thing I wanna mention

222
00:09:55,309 --> 00:09:55,969
is

223
00:09:56,099 --> 00:09:58,090
these systems need

224
00:09:58,349 --> 00:10:00,530
to aid in discoverability.

225
00:10:00,859 --> 00:10:05,409
And this is one reason I like package URL is because, well, it's in the name URL.

226
00:10:05,419 --> 00:10:09,859
See this is one of the beauties of using DNS is DNS is globally unique.

227
00:10:09,869 --> 00:10:11,679
-- Oh no,
-- we haven't made it to DNS yet. We'll get there

228
00:10:11,909 --> 00:10:13,289
-- in a minute.
-- But the point is

229
00:10:13,530 --> 00:10:16,719
it aids in discoverability because if you say

230
00:10:17,049 --> 00:10:17,770
food.

231
00:10:18,119 --> 00:10:22,479
-- Ok, well, which food like the pie, pie food, the pearl
-- food in the world of S bombs.

232
00:10:22,489 --> 00:10:25,880
This is a consistent problem because there are packages, for example,

233
00:10:25,890 --> 00:10:31,390
in NP like N PM has consumed every English word as a package name at this point.

234
00:10:31,650 --> 00:10:36,000
And so there are literally packages with the exact same name in like go and N PM,

235
00:10:36,010 --> 00:10:37,409
which one am I looking at?

236
00:10:37,750 --> 00:10:40,359
And even better, there are identically named

237
00:10:40,820 --> 00:10:44,210
packages in the same language that are totally different things.

238
00:10:44,380 --> 00:10:49,929
-- Well, that's not possible in packaging ecosystems
-- in an owned name space like N PM,

239
00:10:49,940 --> 00:10:51,080
they are different and in github,

240
00:10:51,179 --> 00:10:53,599
they are technically different because there's the, you know, the github

241
00:10:53,789 --> 00:10:55,059
slash whatever slash

242
00:10:55,299 --> 00:10:58,690
but there's a lot of PHP security like there's

243
00:10:58,700 --> 00:11:01,690
a ton of stuff named security across all languages

244
00:11:02,000 --> 00:11:05,840
and you know, whoever happens to own it in N PM, good for them. But

245
00:11:06,049 --> 00:11:06,460
there's,

246
00:11:06,609 --> 00:11:07,880
and it's actually if I remember right,

247
00:11:07,890 --> 00:11:09,380
the N PM one is really bad because it's super

248
00:11:09,390 --> 00:11:11,820
out of date but people keep using it because security.

249
00:11:11,830 --> 00:11:13,659
But this is a good example of if I

250
00:11:13,669 --> 00:11:17,609
have to go libraries written by different people called,

251
00:11:17,619 --> 00:11:20,119
you know uh oh perfect example, like I need something to go talk,

252
00:11:20,130 --> 00:11:21,450
let's say uh Google API.

253
00:11:21,460 --> 00:11:23,179
So I have a Go Google Api,

254
00:11:23,750 --> 00:11:25,330
I guarantee you if I search for that right now,

255
00:11:25,340 --> 00:11:26,359
I'm going to find more than one in github

256
00:11:26,609 --> 00:11:27,400
problem. And

257
00:11:27,679 --> 00:11:32,369
in the go name space packaging managed system, there will be like a winner,

258
00:11:32,380 --> 00:11:34,419
but that's not always clear because for example,

259
00:11:34,429 --> 00:11:37,650
remember there's been N PM trademark issues where somebody's package

260
00:11:37,849 --> 00:11:39,330
gets gank and it's

261
00:11:39,619 --> 00:11:40,250
like

262
00:11:40,570 --> 00:11:42,210
in some cases, it's kind of the same thing.

263
00:11:42,320 --> 00:11:45,450
I think it was square did that once to a square API thing,

264
00:11:45,950 --> 00:11:46,770
but in other cases,

265
00:11:46,780 --> 00:11:49,700
the trademark holder has gained it and it's a completely different package

266
00:11:50,150 --> 00:11:51,140
for sure, for sure.

267
00:11:51,150 --> 00:11:53,280
And so the second thing I want to say is so number one,

268
00:11:53,289 --> 00:11:56,210
we need discoverability and context as much as possible.

269
00:11:56,539 --> 00:11:57,950
And number two, we need actually,

270
00:11:57,960 --> 00:12:00,780
I think we need to have a lot more time stamping of like, OK, this

271
00:12:01,140 --> 00:12:03,419
II I got this from this github

272
00:12:03,549 --> 00:12:05,169
account at this time

273
00:12:05,380 --> 00:12:07,440
because that github account might have changed hands or

274
00:12:07,450 --> 00:12:09,130
it might be gone or it might be whatever.

275
00:12:09,729 --> 00:12:14,559
Like what if Red Hat actually someday manages to get a hold of github.com/red hat.

276
00:12:15,090 --> 00:12:15,869
Good luck Red

277
00:12:15,969 --> 00:12:17,309
-- Hat. What happened in
-- theory like the guy,

278
00:12:19,090 --> 00:12:22,719
I don't agree with you that time is an important factor in this.

279
00:12:23,030 --> 00:12:23,130
I'm

280
00:12:23,469 --> 00:12:23,500
in

281
00:12:23,750 --> 00:12:24,530
context.

282
00:12:26,530 --> 00:12:30,590
I agree with that because so this is actually where Pearl has a magic power

283
00:12:30,599 --> 00:12:33,960
is pearl lets you at it because it looks like a URL and you know,

284
00:12:33,969 --> 00:12:36,875
when you have a URL, you can do like question mark and, and all that other crap

285
00:12:37,294 --> 00:12:37,554
string.

286
00:12:37,895 --> 00:12:39,695
Query string. That's the name. Thank you.

287
00:12:39,965 --> 00:12:41,684
I never remember what they're called,

288
00:12:41,815 --> 00:12:46,244
but you can basically use query string. So you can add hashes, you can add

289
00:12:46,484 --> 00:12:50,414
like upstream repositories, you can add what all kinds of stuff.

290
00:12:50,554 --> 00:12:53,775
But the beauty is, they're also like Jason, they're kind of parcel by a human.

291
00:12:53,784 --> 00:12:59,375
I can look at a Pearl URL and like basically understand 99% of it without even trying.

292
00:12:59,424 --> 00:13:02,085
And that's really important. I know it's easy to say

293
00:13:02,520 --> 00:13:05,169
all of this should be machine readable. Humans need not apply.

294
00:13:05,179 --> 00:13:07,650
And I said that about many, many things and I agree with it,

295
00:13:07,659 --> 00:13:09,369
which generally speaking, I do.

296
00:13:09,460 --> 00:13:12,570
But I think like this is in a good instance where for example,

297
00:13:12,580 --> 00:13:15,400
I I work with data like this all day, every day, right?

298
00:13:15,409 --> 00:13:18,590
I work with our customers who are building bombs or scanning

299
00:13:18,599 --> 00:13:21,409
for vulnerabilities or doing license compliance and all kinds of stuff.

300
00:13:21,419 --> 00:13:22,570
And they'll be like, hey,

301
00:13:23,190 --> 00:13:25,190
this package is showing up weird,

302
00:13:25,469 --> 00:13:26,869
right? And then they like,

303
00:13:27,250 --> 00:13:28,869
show me what they're getting.

304
00:13:28,969 --> 00:13:31,030
I run my test. I see what I get.

305
00:13:31,039 --> 00:13:33,700
I'm like, oh, I'm getting the same thing, our tool is broken or it's like,

306
00:13:33,710 --> 00:13:35,989
I have no idea why you're getting that something weird is going on.

307
00:13:36,000 --> 00:13:37,039
-- Let's figure it out.
-- And

308
00:13:37,179 --> 00:13:40,320
that's one of the reasons very subtly why human readability is so important.

309
00:13:40,330 --> 00:13:40,869
It's not,

310
00:13:41,090 --> 00:13:43,700
I'm not even going to get into the humans versus machines doing the work because

311
00:13:43,960 --> 00:13:45,440
the machine should be doing the work for

312
00:13:45,640 --> 00:13:46,309
when it comes to

313
00:13:46,419 --> 00:13:47,200
troubleshooting

314
00:13:48,179 --> 00:13:48,640
and, and

315
00:13:48,919 --> 00:13:51,640
human readable versus a giant binary blob that

316
00:13:51,650 --> 00:13:53,080
has to be converted into something human.

317
00:13:53,210 --> 00:13:54,559
Right? No, there's a big difference.

318
00:13:55,059 --> 00:13:55,460
I can,

319
00:13:55,890 --> 00:13:57,809
I can troubleshoot Jason by looking at

320
00:13:57,979 --> 00:13:58,030
it

321
00:13:58,140 --> 00:13:58,450
and be like,

322
00:13:59,700 --> 00:14:01,979
it's also funny you mentioned this because I was having a

323
00:14:01,989 --> 00:14:04,969
discussion literally yesterday for the time we're talking about this,

324
00:14:04,979 --> 00:14:05,510
we're

325
00:14:05,890 --> 00:14:08,049
I was talking to the at Anor,

326
00:14:08,280 --> 00:14:09,000
we have a tool called

327
00:14:09,109 --> 00:14:10,250
SIF that generates S bombs.

328
00:14:10,260 --> 00:14:13,559
But part of generating S bombs is we have to identify stuff, right?

329
00:14:13,570 --> 00:14:15,669
-- And that's kind of
-- the whole point of S bombs,

330
00:14:15,960 --> 00:14:17,909
right? It's literally, it's, it's only job,

331
00:14:18,150 --> 00:14:18,559
but we're,

332
00:14:18,570 --> 00:14:22,169
we're trying to unwind like open JDK has some

333
00:14:22,179 --> 00:14:24,960
incredibly gnarly versioning the way it works and,

334
00:14:24,969 --> 00:14:27,599
and the way C pe defines it is even more ridiculous.

335
00:14:27,609 --> 00:14:28,469
I'm not gonna get into it.

336
00:14:28,479 --> 00:14:31,072
I would literally take me half an hour to explain something going to.

337
00:14:31,083 --> 00:14:34,742
But I'm talking to the SIFT developers and one of them at one point is like

338
00:14:34,862 --> 00:14:38,593
this whole project is just an edge case of edge cases.

339
00:14:38,603 --> 00:14:41,552
Like it, it's edge cases all the way down. And it's like,

340
00:14:41,963 --> 00:14:45,643
yes, it literally is, but that's also why we need that. Like

341
00:14:45,872 --> 00:14:49,893
we need humans to look at the edge cases to unwind the edge cases which sucks.

342
00:14:49,903 --> 00:14:54,612
Now, before we run out of time, I also want us to talk about DNS

343
00:14:54,752 --> 00:14:55,252
because

344
00:14:55,486 --> 00:14:58,306
of these suggestions the open SSF had

345
00:14:58,416 --> 00:15:00,736
was that pearls are great,

346
00:15:00,955 --> 00:15:03,926
but we should probably also lean on DNS more

347
00:15:03,935 --> 00:15:05,945
for some of what we're doing because today,

348
00:15:05,955 --> 00:15:09,575
like pearl doesn't require or necessitate DNS at all.

349
00:15:09,585 --> 00:15:13,385
But DNS is magic and now it's your turn to tell us all why DNS is great.

350
00:15:13,515 --> 00:15:14,866
I'm actually gonna make it worse.

351
00:15:14,875 --> 00:15:17,986
Are we talking about DNS or are we talking about URL S

352
00:15:18,216 --> 00:15:19,726
-- DNS, specifically
-- DNS?

353
00:15:20,510 --> 00:15:21,090
So

354
00:15:21,530 --> 00:15:24,780
I like using DNS because it gives me

355
00:15:25,130 --> 00:15:26,130
two things.

356
00:15:26,950 --> 00:15:29,450
It gives me a globally unique

357
00:15:29,820 --> 00:15:30,489
thing

358
00:15:30,909 --> 00:15:31,299
that

359
00:15:31,979 --> 00:15:37,780
is really easy to discover and map control to who controls walmart.com.

360
00:15:37,789 --> 00:15:41,840
Walmart.com controls walmart.com. It's a tautology but it works,

361
00:15:41,940 --> 00:15:42,520
it does,

362
00:15:43,010 --> 00:15:47,169
it's, it's the only global decentralized

363
00:15:47,809 --> 00:15:52,099
-- thing we have on the planet to be honest. Perfect
-- example. I go to sun.com.

364
00:15:52,109 --> 00:15:53,640
Oh, it's oracle.com. Now,

365
00:15:54,020 --> 00:15:54,369
when did that

366
00:15:54,510 --> 00:15:55,289
-- happen?
-- Exactly.

367
00:15:55,909 --> 00:15:56,750
-- Living in a cave
-- for

368
00:15:56,950 --> 00:15:58,989
-- sun
-- dot com is the perfect example.

369
00:15:59,000 --> 00:16:02,320
And this is something we talked about a lot in our meetings at the open SSF

370
00:16:02,479 --> 00:16:06,809
because Java uses name spaces that are DNS, right?

371
00:16:06,820 --> 00:16:10,080
Like I, I don't know how many, I don't know how many people remember this,

372
00:16:10,090 --> 00:16:13,109
but you used to when you would use a lot of the like built in Java classes,

373
00:16:13,119 --> 00:16:14,260
it was com dot So

374
00:16:14,440 --> 00:16:16,150
dot stuff, right?

375
00:16:16,679 --> 00:16:20,640
And when you look at the way DNS is used like as a name space and programming,

376
00:16:20,650 --> 00:16:21,950
it's usually backwards.

377
00:16:21,960 --> 00:16:25,419
Right. Where you put the com first dot Domain.

378
00:16:25,440 --> 00:16:28,979
-- Well,
-- it's, it's basically classical. Big Indian versus little Indian.

379
00:16:29,640 --> 00:16:30,770
-- Yeah. Right. Right.
-- Right.

380
00:16:30,780 --> 00:16:33,349
And it's really funny to me that A URL

381
00:16:33,359 --> 00:16:36,330
is little Indian and then becomes Big Indian past

382
00:16:36,750 --> 00:16:38,440
the request string. It's very strange

383
00:16:38,719 --> 00:16:41,929
but it's kind of how people read things we read left to right. Generally. So

384
00:16:42,179 --> 00:16:42,739
I agree

385
00:16:42,859 --> 00:16:44,969
with that. But it's funny because phone numbers are big Indian

386
00:16:45,270 --> 00:16:46,840
URL s are anyways

387
00:16:47,179 --> 00:16:48,599
ignoring that little bit of silly.

388
00:16:48,710 --> 00:16:52,599
But when you start to think about it, it's like, yeah, this really is kind of bizarre,

389
00:16:52,609 --> 00:16:53,099
whatever.

390
00:16:53,109 --> 00:16:54,640
But the point is the point is

391
00:16:54,750 --> 00:16:56,049
DNS,

392
00:16:56,585 --> 00:17:01,664
is that like, oddly unique and useful name space of the world.

393
00:17:01,674 --> 00:17:03,724
And now I know, like we've talked about names,

394
00:17:03,734 --> 00:17:05,295
there's one other thing you forget about DNS.

395
00:17:05,305 --> 00:17:06,925
It's easy for me to get one.

396
00:17:07,185 --> 00:17:09,483
I won't argue that that is a big deal because

397
00:17:09,935 --> 00:17:12,204
I cannot get AC P unless N

398
00:17:12,354 --> 00:17:12,944
degrees.

399
00:17:13,175 --> 00:17:18,035
Uh. Right. But with DNS, even if I'm banned from.com, I can get.net or dot

400
00:17:18,233 --> 00:17:19,314
Or dot C A or do

401
00:17:19,743 --> 00:17:23,525
I just, oh, I recently got a dot IE for, because we have a presence in Ireland

402
00:17:23,868 --> 00:17:26,329
and like, there's some legal requirements for it.

403
00:17:26,339 --> 00:17:28,729
Like, you have to have a business number or VA number or whatever

404
00:17:28,979 --> 00:17:29,770
and we do.

405
00:17:29,949 --> 00:17:33,449
So, it, it was funny because you like literally have to send them the,

406
00:17:33,459 --> 00:17:35,880
you have to send them paperwork for them to approve your domain name.

407
00:17:36,459 --> 00:17:38,400
And so I didn't, it took like 24 hours,

408
00:17:38,939 --> 00:17:42,839
but that's the thing is I can get a globally unique identifier,

409
00:17:43,194 --> 00:17:43,435
you get the,

410
00:17:44,244 --> 00:17:45,395
you know, curl.org

411
00:17:45,555 --> 00:17:46,334
boom.

412
00:17:46,655 --> 00:17:47,385
OK. OK.

413
00:17:47,395 --> 00:17:47,685
Now,

414
00:17:47,694 --> 00:17:50,035
I want to tie this kind of back to name spaces because

415
00:17:50,045 --> 00:17:52,775
I know like we discussed name spaces in the past on this show

416
00:17:53,035 --> 00:17:55,895
and name spaces can be a contentious issue because for example,

417
00:17:55,905 --> 00:17:58,255
Russ doesn't use or want name spaces.

418
00:17:58,265 --> 00:17:58,724
That's fine,

419
00:17:58,954 --> 00:18:02,574
right? That's up to rust. They run cargo that, that's their own thing.

420
00:18:02,854 --> 00:18:03,765
And so

421
00:18:04,199 --> 00:18:07,910
the the kind of purpose of the DNS isn't even so much

422
00:18:07,920 --> 00:18:10,660
to like create this weird name space universe where we're saying like,

423
00:18:10,670 --> 00:18:13,189
absolutely yes, owner, not owner kind of stuff, right?

424
00:18:13,430 --> 00:18:17,640
It's really just meant to be a way of creating a unique identifier.

425
00:18:17,650 --> 00:18:19,020
There's like no reason

426
00:18:19,459 --> 00:18:24,170
a packaging ecosystem would want to even use like a name space for a pack.

427
00:18:24,449 --> 00:18:25,209
Here's the funny thing.

428
00:18:25,650 --> 00:18:28,569
Why couldn't we have the best of both worlds where picking on rust?

429
00:18:28,579 --> 00:18:34,280
For example, Russ says, hey, we do not do name spaces, but the package format will be

430
00:18:34,589 --> 00:18:37,760
your DNS which you have to prove control of and then

431
00:18:38,000 --> 00:18:41,959
whatever the heck you want, which suspiciously sounds like package urals.

432
00:18:42,449 --> 00:18:44,969
But that's see we can have the best of both worlds.

433
00:18:44,979 --> 00:18:47,560
Now where we can have name spaces that are unique

434
00:18:47,880 --> 00:18:50,079
by using DNS as part of that name space.

435
00:18:50,150 --> 00:18:51,880
And now you can have two or more

436
00:18:51,890 --> 00:18:55,859
security packages because you'd have like bresser.net/security and

437
00:18:56,260 --> 00:18:57,599
cre.org/security.

438
00:18:57,780 --> 00:18:59,540
-- I,
-- I don't think Russ wants that though.

439
00:18:59,599 --> 00:19:02,170
Well, and, and maybe they don't want that and that's fine. But I'm saying

440
00:19:02,339 --> 00:19:06,719
it is, this is an example of where you can architect the centralized database

441
00:19:07,099 --> 00:19:10,040
to sort of allow for more decentralized

442
00:19:10,810 --> 00:19:12,609
-- central.
-- Ok. Let me, let me give you a better example.

443
00:19:12,619 --> 00:19:15,709
Maybe to try to click because this is like this is really hard.

444
00:19:15,790 --> 00:19:18,479
Imagine you have a package in rust called security.

445
00:19:18,579 --> 00:19:20,599
You know, you do what is a crate install?

446
00:19:20,609 --> 00:19:22,400
There's a cargo, I don't remember anymore right now.

447
00:19:22,410 --> 00:19:24,640
But anyway, you installed the package security, right?

448
00:19:25,290 --> 00:19:26,099
That's fine.

449
00:19:26,180 --> 00:19:26,989
And that's how we'd want to,

450
00:19:27,000 --> 00:19:29,040
we wouldn't want to have to make you type in some

451
00:19:29,050 --> 00:19:32,520
super long package URL to do an install of a package,

452
00:19:32,530 --> 00:19:33,209
whatever.

453
00:19:33,290 --> 00:19:34,459
But the intent is then the

454
00:19:34,640 --> 00:19:35,400
question, why not?

455
00:19:35,650 --> 00:19:39,800
Because humans do this work and humans don't want to type in long things, they can

456
00:19:39,949 --> 00:19:40,119
cut and

457
00:19:40,349 --> 00:19:41,540
paste whatever. No,

458
00:19:42,050 --> 00:19:44,020
let's say you install your package, right?

459
00:19:44,130 --> 00:19:45,400
The idea isn't

460
00:19:45,560 --> 00:19:48,119
that the human installing dependencies

461
00:19:48,410 --> 00:19:52,630
is going to have to remember big long strings. The intent is that if I

462
00:19:52,810 --> 00:19:56,030
generate a pearl from this thing,

463
00:19:56,550 --> 00:19:58,780
I get the long pearl that includes like the

464
00:19:58,790 --> 00:20:00,500
DNS and all of that other stuff because what I

465
00:20:00,510 --> 00:20:05,770
want to make sure is I want to make sure that if I use cargo to install a crate

466
00:20:06,650 --> 00:20:09,869
or I download the crate off of the internet,

467
00:20:10,239 --> 00:20:11,719
I want the same

468
00:20:11,920 --> 00:20:15,729
package identifier for both of those things because they are the same thing.

469
00:20:15,739 --> 00:20:20,130
Now you can add additional information that says like I installed this with cargo.

470
00:20:20,140 --> 00:20:23,839
I downloaded this off the internet. I found it under my rug, whatever.

471
00:20:24,050 --> 00:20:29,130
But fundamentally, I want the ability to be like these three things are the same,

472
00:20:29,140 --> 00:20:31,300
but I got them in different ways.

473
00:20:31,310 --> 00:20:33,410
Well, and see, I think maybe this is part of the problem is

474
00:20:34,000 --> 00:20:36,119
the traditional framing of this is

475
00:20:37,069 --> 00:20:40,489
software and package identification. When what we're really saying is

476
00:20:40,660 --> 00:20:43,170
we need software and package identification

477
00:20:43,540 --> 00:20:44,489
and also

478
00:20:45,530 --> 00:20:48,270
delivery life cycle identification.

479
00:20:48,560 --> 00:20:48,989
Like

480
00:20:50,119 --> 00:20:54,010
for example, if I buy something, if I buy a diamond ring,

481
00:20:54,020 --> 00:20:56,750
there's a big difference between having it delivered by secure courier

482
00:20:56,869 --> 00:20:58,160
and them saying like, you know, well,

483
00:20:58,170 --> 00:21:00,500
actually mailing the post is actually really safe, so bad example.

484
00:21:00,510 --> 00:21:01,910
But the point is

485
00:21:02,160 --> 00:21:03,229
I want both,

486
00:21:03,459 --> 00:21:06,229
what is this? But how did it come to be here?

487
00:21:06,239 --> 00:21:09,430
Because for example, it might only be available through github

488
00:21:09,579 --> 00:21:12,449
or maybe it's widely available through other things, right?

489
00:21:12,560 --> 00:21:14,349
And that matters if it, if the github

490
00:21:14,489 --> 00:21:15,489
thing goes away,

491
00:21:15,689 --> 00:21:18,670
I need to find a new delivery method for it. I need to find a new way to get

492
00:21:18,829 --> 00:21:18,849
it

493
00:21:19,709 --> 00:21:20,089
right.

494
00:21:20,199 --> 00:21:20,459
But I need

495
00:21:20,880 --> 00:21:20,900
to

496
00:21:21,270 --> 00:21:23,119
have that history of. I used to get it from github

497
00:21:23,319 --> 00:21:24,349
and this is what it was.

498
00:21:24,420 --> 00:21:26,760
-- I
-- think you have exited the space of package

499
00:21:26,770 --> 00:21:29,300
identifiers now and you're on to a different problem.

500
00:21:29,319 --> 00:21:33,089
Well, but the problem is they are sort of so tightly entwined

501
00:21:33,239 --> 00:21:36,800
that you're saying that we need this. Well, that, but they're entwined because

502
00:21:37,109 --> 00:21:40,900
there are people, for example, that are allowed to go run curve,

503
00:21:41,329 --> 00:21:44,819
but they are definitely not allowed to download it from China and install it

504
00:21:45,079 --> 00:21:46,280
perfectly fine.

505
00:21:46,790 --> 00:21:48,540
Everything's fine, it's fine, you know,

506
00:21:49,229 --> 00:21:50,770
and checks some doesn't match, it's fine,

507
00:21:50,979 --> 00:21:51,040
don't

508
00:21:51,359 --> 00:21:53,859
ignore it. And I think that's part of the problem though is we have to

509
00:21:54,150 --> 00:21:57,369
acknowledge that it's not just about the software anymore.

510
00:21:57,380 --> 00:22:02,010
It's there are other factors that some people have to consider. And I think they

511
00:22:03,060 --> 00:22:04,339
common enough now

512
00:22:04,469 --> 00:22:07,680
-- that we probably need to think about them as an industry.
-- Not yet. Not yet.

513
00:22:07,689 --> 00:22:08,920
I think you're too far in the weeds.

514
00:22:08,930 --> 00:22:12,310
And I think this is one of the challenges that comes with software identification.

515
00:22:12,319 --> 00:22:14,920
And I'm glad we got here accidentally because I didn't even write

516
00:22:14,930 --> 00:22:17,150
this on my list of things I wanted to talk about is

517
00:22:17,280 --> 00:22:18,180
when we start

518
00:22:18,439 --> 00:22:20,979
trying to do these identifications and because it's

519
00:22:20,989 --> 00:22:22,890
literally corner cases all the way down,

520
00:22:23,010 --> 00:22:26,339
we end up getting bogged down in all these weird details that

521
00:22:26,439 --> 00:22:27,579
are important,

522
00:22:27,949 --> 00:22:30,099
but we have to solve the hard.

523
00:22:30,109 --> 00:22:33,569
Well, I shouldn't say hard, we have to solve the easier problems first

524
00:22:33,849 --> 00:22:35,719
and then we can get to the corner cases.

525
00:22:35,729 --> 00:22:37,760
But I think when we have discussions like this,

526
00:22:37,939 --> 00:22:41,219
we only talk about the corner cases and then nothing gets done.

527
00:22:41,660 --> 00:22:44,199
This is where I give Pearl a lot of credit because I think

528
00:22:44,209 --> 00:22:47,780
Pearl has done a nice job of focusing on not the corner cases.

529
00:22:47,790 --> 00:22:49,030
Granted there are many

530
00:22:49,329 --> 00:22:54,920
but they, for the most part I think have have said let's not obsess over these.

531
00:22:55,060 --> 00:22:59,000
See, my take on this is a lot like my take on the papers we produce at the CS A where

532
00:22:59,140 --> 00:23:02,599
I want to at least acknowledge the corner cases and say, hey,

533
00:23:02,609 --> 00:23:05,714
are you aware of this corner case because you might not

534
00:23:05,724 --> 00:23:08,635
care or it might be like really central to what you do

535
00:23:08,775 --> 00:23:11,185
and and that's fair and I may not be able to give

536
00:23:11,194 --> 00:23:13,444
you an answer as to what to do about the corner case,

537
00:23:13,454 --> 00:23:14,635
but at least consider it.

538
00:23:14,645 --> 00:23:14,665
I

539
00:23:14,885 --> 00:23:15,795
have considered it.

540
00:23:16,415 --> 00:23:18,074
And then the second thing I would say is

541
00:23:18,194 --> 00:23:19,954
I would like ideally for

542
00:23:20,165 --> 00:23:24,385
these things like package URL S or whatever to have some like if nothing else,

543
00:23:24,395 --> 00:23:27,704
at least have a notes field or have some sort of thing where I can jam in

544
00:23:27,944 --> 00:23:29,635
some freeform data because

545
00:23:30,180 --> 00:23:33,760
we did this with http headers where http headers are.

546
00:23:33,800 --> 00:23:36,819
There's very few http headers that are actually RFC S

547
00:23:37,300 --> 00:23:41,770
and the way http headers work is if enough clients and enough servers start

548
00:23:41,780 --> 00:23:45,910
supporting them and treating them the same way it becomes a de facto,

549
00:23:45,920 --> 00:23:46,319
not deo

550
00:23:46,579 --> 00:23:48,689
but de facto standard because,

551
00:23:48,890 --> 00:23:52,000
well, I mean, these other five web browsers support it, I guess we have to do

552
00:23:52,290 --> 00:23:53,579
and I would like to see

553
00:23:54,050 --> 00:23:55,829
that provides also a very

554
00:23:56,189 --> 00:23:58,949
um sort of market driven consensus mechanism

555
00:23:59,079 --> 00:24:01,829
where you can say looking at PR L data.

556
00:24:01,839 --> 00:24:05,790
Oh, like 20% of them have this new field that you know, we're all using. OK, cool.

557
00:24:05,810 --> 00:24:10,390
Let's maybe have an actual discussion about it or maybe not just start using it.

558
00:24:10,680 --> 00:24:11,310
-- So
-- OK.

559
00:24:11,859 --> 00:24:16,699
Yes, this is an excellent point. And I think it's an interesting topic because

560
00:24:17,189 --> 00:24:19,859
I feel like this is something you see

561
00:24:20,099 --> 00:24:22,739
in a more open environment. Like like

562
00:24:23,670 --> 00:24:25,660
like sure Os V is another good example.

563
00:24:25,670 --> 00:24:30,010
Like those are functionally open source projects is what they are,

564
00:24:30,020 --> 00:24:31,849
they directly caused it to be extended.

565
00:24:31,859 --> 00:24:33,780
Like I got four or five things in there that I wanted.

566
00:24:34,280 --> 00:24:35,959
And here's the thing like something like

567
00:24:36,290 --> 00:24:37,890
something like C pe or

568
00:24:38,199 --> 00:24:38,390
sw I,

569
00:24:38,905 --> 00:24:44,435
-- those are like committee standards documents, those
-- are cathedrals,

570
00:24:44,635 --> 00:24:47,834
they, they are and it's very hard to see change. And

571
00:24:48,025 --> 00:24:51,255
if you're not using it the way they say you have to use it,

572
00:24:51,525 --> 00:24:54,854
you often get pushback that says you're doing it wrong,

573
00:24:55,064 --> 00:24:55,484
right.

574
00:24:55,494 --> 00:24:57,594
There's no discussion like you're just doing it wrong

575
00:24:57,604 --> 00:24:59,694
because of what you're doing isn't written down here.

576
00:25:00,119 --> 00:25:02,989
And I think like, you're talking about that organic growth,

577
00:25:03,229 --> 00:25:05,390
that's a really powerful tool.

578
00:25:05,599 --> 00:25:09,750
Any time you have some sort of like widely used feature because like,

579
00:25:09,760 --> 00:25:13,390
hashtags are a great example, like Twitter didn't have hashtags at the beginning,

580
00:25:13,400 --> 00:25:15,910
people just started using them and someone's like, oh, this is neat.

581
00:25:15,920 --> 00:25:18,910
-- Let's do this, right.
-- And then the funny thing is, for example,

582
00:25:19,160 --> 00:25:21,339
you know, anything with a dash and it's like, oh dang it,

583
00:25:21,349 --> 00:25:23,229
that doesn't work with hashtags oh Well,

584
00:25:23,500 --> 00:25:23,520
I

585
00:25:23,670 --> 00:25:23,859
know

586
00:25:24,150 --> 00:25:26,780
and I literally at one point proposed changing the,

587
00:25:26,790 --> 00:25:29,989
the identification standards so that it would work with the Twitter hashtags

588
00:25:30,130 --> 00:25:30,449
and

589
00:25:30,589 --> 00:25:32,069
getting some very violent

590
00:25:32,280 --> 00:25:33,699
push back on it. But I'm like

591
00:25:34,069 --> 00:25:34,660
this.

592
00:25:34,969 --> 00:25:38,000
Well, like hashtag log for J that's how we coordinate log

593
00:25:38,109 --> 00:25:38,189
for

594
00:25:38,390 --> 00:25:38,839
Jay. It is

595
00:25:39,150 --> 00:25:41,479
and it's what makes the horrible like

596
00:25:41,630 --> 00:25:45,339
like boutique identifiers so valuable now is because you can hashtag them.

597
00:25:45,349 --> 00:25:47,780
-- But anyway, anyway, unless there's
-- a dash in them,

598
00:25:49,250 --> 00:25:51,089
but you just take the dash out then it's fine. No,

599
00:25:51,780 --> 00:25:52,839
and I've seen people do that. It

600
00:25:53,510 --> 00:25:54,310
makes me happy.

601
00:25:54,500 --> 00:25:57,040
But you know what I mean? Like, I think

602
00:25:57,420 --> 00:26:00,810
the the organic growth of this stuff is really what I mean,

603
00:26:00,819 --> 00:26:02,589
this is what made open source amazing, right?

604
00:26:02,599 --> 00:26:06,449
-- Is the organic nature of it.
-- If you don't allow organic growth,

605
00:26:06,589 --> 00:26:09,030
chances are somebody is going to do organic grow

606
00:26:09,550 --> 00:26:11,170
and possibly

607
00:26:11,349 --> 00:26:14,250
like metastasize and become huge really fast.

608
00:26:14,260 --> 00:26:17,979
Like, like the proprietary software world versus the open source world, right?

609
00:26:17,989 --> 00:26:21,729
Like we have the Halloween memos from uh Microsoft 20 some years ago now.

610
00:26:21,739 --> 00:26:23,939
And now I'm, you know, running Linux on my windows desktop.

611
00:26:24,130 --> 00:26:26,979
But that's the thing is like C pe and SW

612
00:26:27,099 --> 00:26:28,859
I and things like CV E are

613
00:26:29,290 --> 00:26:31,300
becoming less relevant because, well,

614
00:26:31,310 --> 00:26:35,140
they are less relevant because people have moved on and created better,

615
00:26:35,150 --> 00:26:37,839
more workable solutions for themselves that are

616
00:26:37,849 --> 00:26:40,550
actually starting to become industry accepted,

617
00:26:41,359 --> 00:26:41,689
right?

618
00:26:41,800 --> 00:26:45,400
And because I don't have a choice because my choices are I can use CP or Swid

619
00:26:45,550 --> 00:26:47,689
and kind of get half a solution

620
00:26:48,060 --> 00:26:51,800
and get told I'm doing it wrong and not be allowed to extend it or change it

621
00:26:52,030 --> 00:26:52,810
or I can,

622
00:26:53,089 --> 00:26:56,239
you know, do package URL S and just, oh, we, we're done

623
00:26:56,489 --> 00:26:57,569
like let's go have lunch,

624
00:26:58,359 --> 00:26:59,630
I made it do what we wanted.

625
00:26:59,750 --> 00:27:01,209
And I'm looking at like what your company

626
00:27:01,219 --> 00:27:03,719
does and what all these asphalt companies are doing

627
00:27:04,000 --> 00:27:06,449
and obviously some of them are doing things like sw because they, you know,

628
00:27:06,459 --> 00:27:08,020
have to work with Microsoft or have to work.

629
00:27:08,030 --> 00:27:10,020
They want to support the US government and that's fine.

630
00:27:10,310 --> 00:27:13,260
But for basically everybody who's not the US government or

631
00:27:13,430 --> 00:27:14,800
supporting the US

632
00:27:14,979 --> 00:27:16,469
government as a customer.

633
00:27:17,459 --> 00:27:22,099
So this is an interesting topic as well, which I won't dwell on because we're,

634
00:27:22,109 --> 00:27:23,060
we're nearly out of time.

635
00:27:23,069 --> 00:27:23,630
But like

636
00:27:24,119 --> 00:27:27,520
the US government doesn't really care about C PE S for example, or

637
00:27:27,739 --> 00:27:30,949
SW, I for the most part, like, even though SW I is technically a n

638
00:27:31,170 --> 00:27:31,849
thing,

639
00:27:32,569 --> 00:27:35,760
all of the government documents basically men,

640
00:27:35,939 --> 00:27:38,969
Cyclone DX and SPDX vastly more, I mean,

641
00:27:38,979 --> 00:27:41,839
occasionally SW I is thrown in but it's not very common, I don't think.

642
00:27:41,849 --> 00:27:46,119
And C PE is the same story where like NVD publishes C PE is

643
00:27:46,510 --> 00:27:47,199
and like

644
00:27:47,560 --> 00:27:47,949
at, at

645
00:27:48,150 --> 00:27:50,849
Acor, we've been working as, as, quite as hard to,

646
00:27:50,859 --> 00:27:52,969
to get away from C PE s because they're just,

647
00:27:52,979 --> 00:27:56,250
they're terrible and they're ineffective at what you need to do

648
00:27:56,420 --> 00:27:59,380
in 25 years of consuming CV data at scale.

649
00:27:59,390 --> 00:28:03,489
And by scale, I mean, I read every single CV up and through, I think about 2010

650
00:28:04,239 --> 00:28:08,810
and then post 2010, I probably read or assigned about a quarter of them.

651
00:28:08,939 --> 00:28:09,410
OK?

652
00:28:09,660 --> 00:28:11,709
I almost never use C PE

653
00:28:12,189 --> 00:28:14,920
like I use CP maybe 100 times in 25 years.

654
00:28:15,849 --> 00:28:16,560
You

655
00:28:17,270 --> 00:28:17,900
and what

656
00:28:18,140 --> 00:28:19,109
like, so

657
00:28:19,569 --> 00:28:20,000
it

658
00:28:20,390 --> 00:28:20,920
like when I,

659
00:28:20,930 --> 00:28:22,109
and when I worked for like eyesight and

660
00:28:22,119 --> 00:28:24,890
I defense where we were consuming all the vulnerabilities

661
00:28:25,020 --> 00:28:28,819
-- across everything. Well, and
-- you were building a bespoke, bespoke database.

662
00:28:28,829 --> 00:28:29,160
Right.

663
00:28:29,439 --> 00:28:33,260
Yeah. Back to this. I think the thing is to remember is it's, it's

664
00:28:33,400 --> 00:28:37,030
the other thing is people tend to look at this from the supply side

665
00:28:37,180 --> 00:28:39,630
and say, OK, the open source community wants this,

666
00:28:39,810 --> 00:28:42,680
the close source community wants this, the, it people want this

667
00:28:42,890 --> 00:28:45,170
and they ignore the demand side,

668
00:28:45,180 --> 00:28:48,359
the consumers who also have different and unique needs.

669
00:28:48,369 --> 00:28:51,660
So even though the open source world is like, OK, perfect example,

670
00:28:51,670 --> 00:28:53,229
if the open source world tomorrow did

671
00:28:53,339 --> 00:28:56,300
100% correct, perfect package URL

672
00:28:56,920 --> 00:28:57,449
data,

673
00:28:59,219 --> 00:29:01,609
there's still a bajillion companies that would be like, yeah,

674
00:29:01,619 --> 00:29:03,329
but we need cyclone or uh sw

675
00:29:03,459 --> 00:29:04,089
or whatever

676
00:29:05,329 --> 00:29:07,650
and, and a company like yours would be like, OK,

677
00:29:07,660 --> 00:29:10,010
let's meet that need and build a translation tool.

678
00:29:10,180 --> 00:29:10,829
Uh Right.

679
00:29:10,939 --> 00:29:11,270
Right.

680
00:29:11,280 --> 00:29:13,489
And so that's the other problem is people forget that this

681
00:29:13,500 --> 00:29:17,359
is a many to many problem with both suppliers and consumers.

682
00:29:17,369 --> 00:29:18,959
And the worst thing of all is

683
00:29:19,359 --> 00:29:22,069
and then that giant mix in the middle, that is both.

684
00:29:22,079 --> 00:29:24,739
Well, there's, there's other unique aspect of this.

685
00:29:24,750 --> 00:29:26,430
I'm not going to talk about today, but like

686
00:29:26,660 --> 00:29:28,589
from your many to many angle,

687
00:29:28,719 --> 00:29:30,469
when you're an open source project,

688
00:29:31,030 --> 00:29:35,170
you probably don't care or want to care about generating pearls for your project.

689
00:29:35,260 --> 00:29:37,369
Like who cares? Not my problem.

690
00:29:37,599 --> 00:29:42,810
And so this comes back to that issue of I need the ability to look at a thing

691
00:29:43,060 --> 00:29:48,250
-- and make a pearl from it because there isn't like an official pearl.
-- And this leads to

692
00:29:48,420 --> 00:29:50,430
the last thing I want to say, which is

693
00:29:50,989 --> 00:29:54,280
no matter how perfect or widely done this thing is

694
00:29:54,439 --> 00:29:58,099
there will always be a relatively common case of I need to

695
00:29:58,109 --> 00:30:01,640
assign my own identifier because either there is no identifier currently.

696
00:30:01,650 --> 00:30:02,729
So I need to assign one

697
00:30:02,910 --> 00:30:03,500
or the,

698
00:30:03,630 --> 00:30:05,500
the identifier they assigned is wrong.

699
00:30:05,510 --> 00:30:07,910
It's mapping into multiple things happens all the time.

700
00:30:08,670 --> 00:30:10,689
And so again, the problem is no matter

701
00:30:10,890 --> 00:30:12,310
what we do with these standards

702
00:30:12,410 --> 00:30:13,550
and implementations,

703
00:30:13,680 --> 00:30:16,709
there will always be the relatively common case of

704
00:30:17,109 --> 00:30:19,589
I need to unpack this software using my own tools and

705
00:30:19,599 --> 00:30:22,579
figure out what is actually in it because for example,

706
00:30:22,589 --> 00:30:24,469
I gripped it and there is definitely a lock.

707
00:30:24,479 --> 00:30:26,170
Oh for example XML hash dos,

708
00:30:26,280 --> 00:30:28,619
I was gripping code and finding XML hash

709
00:30:28,859 --> 00:30:29,119
dos

710
00:30:29,319 --> 00:30:30,630
all over the place

711
00:30:30,790 --> 00:30:33,829
because people put it in open source so that it compiles on windows

712
00:30:34,739 --> 00:30:35,160
and

713
00:30:35,290 --> 00:30:37,280
but they don't list that it's in there because they cut

714
00:30:37,290 --> 00:30:39,400
and paste like uh it's a couple 100 lines of code.

715
00:30:39,969 --> 00:30:40,050
That's

716
00:30:40,150 --> 00:30:40,189
right.

717
00:30:40,560 --> 00:30:42,469
And so no matter what happens,

718
00:30:42,479 --> 00:30:46,800
there is always this common case of I need to do this myself,

719
00:30:46,810 --> 00:30:50,489
either for myself or for my consumers, my downstream.

720
00:30:51,839 --> 00:30:51,890
And

721
00:30:52,030 --> 00:30:55,160
that can also be internal like a company like Sony or something.

722
00:30:55,189 --> 00:30:57,939
They're so massive internally that they are definitely generating

723
00:30:57,949 --> 00:31:00,790
software that they then internally consume and need SB

724
00:31:00,989 --> 00:31:01,400
for.

725
00:31:01,939 --> 00:31:05,910
And so no matter what we do with all of these standards and implementations,

726
00:31:06,060 --> 00:31:08,290
there's always this common case of I have to do

727
00:31:08,300 --> 00:31:10,979
it myself because it's either wrong or it's incomplete or

728
00:31:11,140 --> 00:31:13,880
I tried to get it fixed and they refused or

729
00:31:14,229 --> 00:31:16,739
and again, this goes back to this, well, this isn't really a corner case.

730
00:31:16,750 --> 00:31:18,089
This is a pretty common case

731
00:31:18,760 --> 00:31:20,390
and so regardless of what we do,

732
00:31:20,400 --> 00:31:24,800
whatever we do needs to have this on ramp for people to do it themselves, for sure.

733
00:31:24,810 --> 00:31:27,130
For sure. 100%. Yep. Yep. I agree.

734
00:31:27,140 --> 00:31:29,609
All right, I'm gonna, I'm gonna call this one there. I think that's a good end.

735
00:31:30,199 --> 00:31:31,699
Thank you, Kurt. Thank you everyone for listening.

736
00:31:31,709 --> 00:31:34,540
Go to open source security, podcast.com. Head up the show notes, UZ pound.

737
00:31:34,550 --> 00:31:37,660
Oh, it says podcast. Hashtag Find us on Mastodon. Kurt.

738
00:31:37,670 --> 00:31:39,140
Have a marvelous rest of your day.

739
00:31:39,449 --> 00:31:42,540
-- You too. Thanks everybody. Thanks
-- everyone. Bye bye.