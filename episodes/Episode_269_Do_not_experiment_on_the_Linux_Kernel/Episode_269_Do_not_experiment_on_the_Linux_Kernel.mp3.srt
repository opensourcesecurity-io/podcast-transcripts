0
00:00:05,610 --> 00:00:08,550
Hello and welcome to the open source security podcast with myself,

1
00:00:08,560 --> 00:00:11,000
Kurt Siefried and my partner Statistical Crime.

2
00:00:11,010 --> 00:00:11,779
Josh Bresser

3
00:00:11,909 --> 00:00:15,350
Statistical Crime. What is statistical crime even?

4
00:00:15,359 --> 00:00:16,940
-- Well,
-- that's that, see,

5
00:00:16,950 --> 00:00:21,590
that's the thing is we don't measure stuff enough or even really try it all.

6
00:00:21,680 --> 00:00:22,610
So we don't know.

7
00:00:24,239 --> 00:00:24,879
Ok.

8
00:00:24,979 --> 00:00:29,600
-- Is that like future crime where I'm statistically proving sort
-- of, I mean,

9
00:00:29,610 --> 00:00:32,270
it's funny because I now look at the Edmonton, you know,

10
00:00:32,279 --> 00:00:34,700
the police service has their GIS data, like with, you know,

11
00:00:34,709 --> 00:00:37,360
crime reports and the funny thing is they won't,

12
00:00:37,369 --> 00:00:40,174
they don't make it easy to kind of scrape the site and get like,

13
00:00:40,185 --> 00:00:41,224
sort of day by day things.

14
00:00:41,235 --> 00:00:43,884
You can only kind of get it in chunks going back a certain amount of time

15
00:00:44,465 --> 00:00:45,805
because I was trying to see if there's any

16
00:00:45,814 --> 00:00:47,775
seasonality or whatever because in my neighborhood it's,

17
00:00:47,784 --> 00:00:52,424
there's basically a two or three sort of assault and batteries at home,

18
00:00:52,435 --> 00:00:54,134
like domestic disturbance type things.

19
00:00:54,145 --> 00:00:55,575
Basically in the neighborhood

20
00:00:55,790 --> 00:01:02,490
there's about a half a dozen car break ins or car thefts and usually, you know,

21
00:01:02,540 --> 00:01:05,209
one or two burglaries like break ins to,

22
00:01:05,220 --> 00:01:07,580
it sounds like garages reading between the lines

23
00:01:08,059 --> 00:01:11,449
and it seems to be a remarkably stable amount.

24
00:01:11,459 --> 00:01:13,169
Like I've checked over, you know, off,

25
00:01:13,180 --> 00:01:15,370
off and on for the last few years and it's just

26
00:01:15,379 --> 00:01:18,080
remarkably stable and other parts of the city I've checked seem to

27
00:01:18,089 --> 00:01:20,089
be the same and it's just what interests me is when

28
00:01:20,099 --> 00:01:22,809
you get to a certain scale things kind of flatten out.

29
00:01:23,269 --> 00:01:25,139
Right. You get those trends in those patterns,

30
00:01:25,390 --> 00:01:29,130
leads us directly into the discussion with the University of Minnesota.

31
00:01:29,140 --> 00:01:31,250
I don't know that I want to call it research.

32
00:01:31,261 --> 00:01:34,971
I don't think it meets the bar for research. To be honest, it was that bad.

33
00:01:35,060 --> 00:01:39,250
It's research, it's just unethical. Terrible, ridiculous.

34
00:01:39,261 --> 00:01:41,570
That's like saying kicking puppies is research.

35
00:01:41,761 --> 00:01:44,450
It could be, I mean, I'm not telling anyone to do it,

36
00:01:44,551 --> 00:01:45,140
but

37
00:01:46,081 --> 00:01:49,130
-- I mean,
-- but I'm not sure it's research in the sense of what they actually,

38
00:01:49,140 --> 00:01:51,231
even if they'd accomplished what they wanted to,

39
00:01:51,240 --> 00:01:54,941
would they have gotten any actual useful data that could be analyzed?

40
00:01:55,671 --> 00:02:00,092
Let's start at the beginning because there's a lot to unpack in this one.

41
00:02:00,101 --> 00:02:03,071
So, well, some bright spark, you know what? We're not going to use their names.

42
00:02:03,082 --> 00:02:03,811
They don't get to have names.

43
00:02:03,821 --> 00:02:06,872
-- No,
-- no, we're not going to name people because I don't want to give them credit.

44
00:02:06,882 --> 00:02:11,481
-- Nor do I want to draw more attention than they're already getting.
-- Yeah. So,

45
00:02:12,011 --> 00:02:15,261
-- well, and also they might be under investigation for violating the C
-- FA.

46
00:02:15,281 --> 00:02:17,322
That's true. It may be a criminal offense.

47
00:02:17,332 --> 00:02:20,751
But, you know, and also the ethics board, no doubt is having a look into their stuff.

48
00:02:20,761 --> 00:02:22,891
We'll get to that. Well, let's ignore all that for a moment.

49
00:02:22,901 --> 00:02:24,492
So some bright spark had the idea.

50
00:02:24,593 --> 00:02:29,233
Oh, open source takes code patches from people. Do they really vet these people?

51
00:02:29,242 --> 00:02:30,113
Well, no, because,

52
00:02:30,703 --> 00:02:34,563
like I, I've actually, I don't know that I've never seen Josh's ID.

53
00:02:34,572 --> 00:02:38,212
-- You've never seen my ID
-- to the best of my knowledge. This is true.

54
00:02:38,223 --> 00:02:39,822
I could be Michael Bertos

55
00:02:40,423 --> 00:02:43,052
or something. I don't know. The idea was they were going to submit

56
00:02:43,363 --> 00:02:47,412
malicious code patches to the long Colonel and see if they got in or not.

57
00:02:47,423 --> 00:02:50,203
-- Not
-- just that the really important part here is

58
00:02:50,212 --> 00:02:54,093
that they're submitting patches under the University of Minnesota

59
00:02:54,194 --> 00:02:57,733
email address, which is you what? Umn.edu,

60
00:02:58,063 --> 00:02:59,093
which, and,

61
00:02:59,104 --> 00:03:02,354
and I think that is a really important part of this story

62
00:03:02,363 --> 00:03:07,953
is when you see communications from what is functionally a trusted source,

63
00:03:07,964 --> 00:03:08,223
right?

64
00:03:08,233 --> 00:03:11,283
Something like a well known university, a well known company.

65
00:03:11,294 --> 00:03:14,723
Like if the Linux kernel gets a patch from Red hat.com,

66
00:03:14,953 --> 00:03:15,154
right?

67
00:03:15,164 --> 00:03:19,833
That's different than a patch from like ZQ nine v.com or you know what I mean,

68
00:03:19,843 --> 00:03:21,134
a completely unknown domain

69
00:03:21,253 --> 00:03:23,664
-- or somebody at gmail.com.
-- So I think that's a super

70
00:03:23,794 --> 00:03:25,434
-- important part of this story
-- to say they

71
00:03:25,445 --> 00:03:27,244
handle it poorly would be an understatement.

72
00:03:27,255 --> 00:03:30,434
-- Well, hold on, hold
-- on. They submit a bad patch. Why?

73
00:03:30,464 --> 00:03:34,404
-- What is their purported purpose to this behavior.
-- What they have said

74
00:03:34,595 --> 00:03:36,455
and the way they executed it is terrible.

75
00:03:36,464 --> 00:03:38,455
But what they basically said was that we're going to submit

76
00:03:38,464 --> 00:03:40,524
these patches and see if they get accepted or not.

77
00:03:40,535 --> 00:03:42,074
And then kind of make sure they don't actually

78
00:03:42,085 --> 00:03:44,014
get into the tree or into production or whatever.

79
00:03:44,024 --> 00:03:44,975
And so

80
00:03:45,115 --> 00:03:49,054
they basically deceived the community intentionally and they did get a bad patch in

81
00:03:49,065 --> 00:03:52,274
which we're going to have a whole discussion about code quality in a moment.

82
00:03:52,645 --> 00:03:53,324
Yes.

83
00:03:53,550 --> 00:03:56,289
-- Essentially we know that this is possible.
-- OK.

84
00:03:56,300 --> 00:04:02,169
Essentially what they did is they conducted a human based experiment

85
00:04:02,179 --> 00:04:06,330
against the Linux kernel community without their knowledge or permission.

86
00:04:06,339 --> 00:04:07,809
-- That is what happened.
-- Yeah.

87
00:04:07,820 --> 00:04:11,309
-- And without appropriate safeguards
-- and they claim they didn't do this

88
00:04:11,320 --> 00:04:14,850
on purpose or they claim they weren't doing human experimentation.

89
00:04:14,860 --> 00:04:16,130
But here's my favorite part.

90
00:04:16,140 --> 00:04:19,510
This is literally a quote from the people who did this first.

91
00:04:19,519 --> 00:04:23,373
They said we checked with our, what do they call IB board?

92
00:04:24,044 --> 00:04:25,003
What is it IRB.

93
00:04:25,694 --> 00:04:26,074
OK.

94
00:04:26,084 --> 00:04:28,723
After they'd done it, then they checked and the board said, oh,

95
00:04:28,734 --> 00:04:32,433
I guess you didn't do a human experiment, but I'm going to read this word for word.

96
00:04:32,444 --> 00:04:36,984
OK? Because it's too good. While our goal was to improve the security of Linux,

97
00:04:37,243 --> 00:04:39,433
we now understand that it was hurtful to the

98
00:04:39,444 --> 00:04:42,354
community to make it a subject of our research.

99
00:04:42,364 --> 00:04:44,644
Like they admitted in the quote,

100
00:04:44,653 --> 00:04:46,834
they made the community the subject of the research.

101
00:04:46,843 --> 00:04:47,503
And it's like,

102
00:04:48,533 --> 00:04:51,997
-- I don't even know what to say about this. This is just like, so
-- dumb.

103
00:04:52,007 --> 00:04:54,937
We're going to ignore the whole because I don't

104
00:04:54,947 --> 00:04:56,497
think these people are smart enough to be,

105
00:04:56,507 --> 00:04:56,917
you know,

106
00:04:56,928 --> 00:05:00,007
under a foreign direction and trying to insert back doors in the

107
00:05:00,018 --> 00:05:02,178
limits kernel and this is their cover story if they get caught.

108
00:05:02,187 --> 00:05:05,208
-- No way. Like,
-- no, that is a possibility. I

109
00:05:05,217 --> 00:05:05,958
mean,

110
00:05:06,227 --> 00:05:08,727
-- no, let's not, that's not a discussion
-- point,

111
00:05:08,738 --> 00:05:11,657
but it's stupid and pointless because it doesn't matter because

112
00:05:11,667 --> 00:05:14,257
any state level guy that wants to get patches in the

113
00:05:14,398 --> 00:05:16,958
kernel is going to pay some hacker

114
00:05:17,217 --> 00:05:20,407
-- to do it
-- right now. According to what these

115
00:05:20,652 --> 00:05:21,462
have said,

116
00:05:21,471 --> 00:05:26,221
none of the patches actually made it into the kernel because they came clean

117
00:05:26,342 --> 00:05:29,721
when their patch was accepted. But before it was committed, right?

118
00:05:29,731 --> 00:05:33,361
Which is obviously the way the Linux kernel workflow works is you send a patch,

119
00:05:33,372 --> 00:05:35,691
someone vets the patch, someone signs off on the patch,

120
00:05:35,701 --> 00:05:37,261
then the patch gets included into

121
00:05:37,421 --> 00:05:40,421
and then eventually it will make it from the tree it was included into,

122
00:05:40,432 --> 00:05:42,641
into the stable kernel tree.

123
00:05:42,652 --> 00:05:44,481
And I don't know exactly where any of

124
00:05:44,492 --> 00:05:46,321
these patches landed because like quite frankly,

125
00:05:46,332 --> 00:05:49,002
we don't even know what the patches were at this point.

126
00:05:49,032 --> 00:05:52,575
I thought had the link from, from the research I have done

127
00:05:52,865 --> 00:05:54,355
at this point in time,

128
00:05:54,466 --> 00:05:56,385
we do not know the commit hashes.

129
00:05:56,395 --> 00:06:00,205
So of those 190 patches, we haven't determined, which was the malicious one yet.

130
00:06:00,216 --> 00:06:02,205
That is my, that is my knowledge.

131
00:06:02,216 --> 00:06:02,605
Again,

132
00:06:02,615 --> 00:06:05,786
I hesitate to call this research because apparently their institutional

133
00:06:05,795 --> 00:06:08,746
review board didn't vet it until after the fact.

134
00:06:08,756 --> 00:06:10,325
And the methodology is weak.

135
00:06:10,335 --> 00:06:14,026
-- There's like a data point, a single
-- digit is my understanding.

136
00:06:14,036 --> 00:06:18,385
Well, and the thing is this isn't like a Black Swan thing. Where is this possible? Or?

137
00:06:18,720 --> 00:06:22,510
That's not the question if, if it was a question of like, can we put a man on the moon?

138
00:06:22,519 --> 00:06:25,559
And the answer of putting one man on the moon is well, yes, yes, we can do it.

139
00:06:25,959 --> 00:06:28,739
But right. That's good enough, you know. Sure can I?

140
00:06:28,929 --> 00:06:32,429
Yeah, perfect example. Can I factor this prime number in non polynomial time?

141
00:06:32,440 --> 00:06:33,410
You only have to do it once?

142
00:06:33,420 --> 00:06:35,170
Maybe you got lucky, maybe you didn't, I don't know,

143
00:06:35,179 --> 00:06:38,209
but once would be enough to be like, whoa, that's a, that's an important result.

144
00:06:38,220 --> 00:06:40,450
This is not an important result because here's the reality how

145
00:06:40,459 --> 00:06:44,269
many programmers write code with security flaws that they then go?

146
00:06:44,279 --> 00:06:46,929
Oh, whoops. I just, I just wrote a security flaw. I better fix that

147
00:06:47,454 --> 00:06:48,373
them. No, no, no.

148
00:06:48,384 --> 00:06:49,914
Here's where we need to start thinking about

149
00:06:49,924 --> 00:06:52,394
numbers and measuring things because statistically this matters.

150
00:06:52,403 --> 00:06:54,174
So OK, we've got number one.

151
00:06:54,183 --> 00:06:58,794
How many security flaws do programmers themselves catch? Oh, it's small for sure.

152
00:06:58,803 --> 00:07:01,414
And we don't necessarily know because nobody really measures it and

153
00:07:01,424 --> 00:07:04,503
it is going to vary hugely from person to person.

154
00:07:04,514 --> 00:07:05,644
Ok. So number two,

155
00:07:05,914 --> 00:07:09,473
they write a code patch or a new code or whatever, one or more people review it.

156
00:07:09,484 --> 00:07:12,694
-- How many of those reviews catch a security
-- flaw?

157
00:07:12,704 --> 00:07:15,194
It's not zero, but we don't know the number at all.

158
00:07:15,204 --> 00:07:20,217
Exactly, because we really measure it that well, we could in theory say, you know,

159
00:07:20,227 --> 00:07:23,928
we look at the known security flaws that obviously made a pass code review and go, ok,

160
00:07:23,937 --> 00:07:24,747
there's a data set.

161
00:07:24,757 --> 00:07:27,967
Do they have anything in common and of interest? And? Well, that's what De

162
00:07:28,088 --> 00:07:29,907
Bricht is doing with machine learning, right?

163
00:07:30,148 --> 00:07:33,578
So we've got the second data set of the signed off problem, right?

164
00:07:33,588 --> 00:07:36,127
How many false positives? How many false negatives, how many

165
00:07:36,298 --> 00:07:39,458
true positives and true negatives were there in that signed off code?

166
00:07:39,467 --> 00:07:42,298
And the answer is we have no idea because nobody really measures it. Ok.

167
00:07:42,308 --> 00:07:43,537
So the code gets written,

168
00:07:43,548 --> 00:07:46,532
it passes review of one or more people and it gets into a

169
00:07:46,541 --> 00:07:49,441
code tree and does it get noticed at that point by anybody?

170
00:07:49,451 --> 00:07:50,481
-- Probably not. Well, it needs
-- what?

171
00:07:50,492 --> 00:07:55,342
Remember too, these were purposely, what is the term they called them? Not bogus.

172
00:07:55,532 --> 00:07:56,881
Oh, I forget what they call it.

173
00:07:56,891 --> 00:07:59,791
Let me look, the hypocrite commits, hypocrite commits. Thank you.

174
00:07:59,802 --> 00:08:02,522
Like they were purposely created to deceive, right?

175
00:08:02,532 --> 00:08:05,502
There's a difference between accidental and purposeful, right?

176
00:08:05,511 --> 00:08:07,522
I mean, if you want to see the extreme example of that.

177
00:08:07,532 --> 00:08:11,022
Go, go look at the Obfuscated C coding contest results.

178
00:08:11,291 --> 00:08:13,282
Oh, my goodness. Yes. Yeah, like it's just

179
00:08:13,451 --> 00:08:14,302
I, no,

180
00:08:14,660 --> 00:08:15,209
anyways,

181
00:08:15,369 --> 00:08:19,720
so here's what would have actually been a very interesting and useful research

182
00:08:19,730 --> 00:08:23,260
project would have been to maybe talk to code developers and say,

183
00:08:23,269 --> 00:08:23,709
look, you know,

184
00:08:23,720 --> 00:08:25,929
can you fill out this form every time you kind of spot

185
00:08:25,940 --> 00:08:28,320
a security flaw on your own and fix it on your own.

186
00:08:28,899 --> 00:08:30,470
And also though we need to kind of get an idea

187
00:08:30,480 --> 00:08:32,099
of how much you're working on because there's a big difference

188
00:08:32,109 --> 00:08:34,849
between a person who works on one small thing and finds

189
00:08:34,859 --> 00:08:37,058
a flaw in it once like one out of one versus,

190
00:08:37,070 --> 00:08:38,869
you know, somebody who's doing 1000 patch,

191
00:08:39,472 --> 00:08:43,592
11 out of 1000. Secondly, if they could have people do

192
00:08:43,763 --> 00:08:46,572
doing the code reviews kind of log what they found.

193
00:08:46,583 --> 00:08:48,612
Like I reviewed this code, it was good.

194
00:08:48,713 --> 00:08:50,963
I reviewed this code. I thought I had a security flaw.

195
00:08:50,973 --> 00:08:53,533
It turns out it didn't because I misunderstood X one thing in reading.

196
00:08:53,543 --> 00:08:57,583
So with the code reverts and the B reverts or D reverts, whatever we're calling it. A

197
00:08:58,192 --> 00:09:01,333
lot of this code obviously wasn't well reviewed because,

198
00:09:01,552 --> 00:09:03,182
you know, they're coming up with like

199
00:09:03,286 --> 00:09:05,145
this code chain is code change is just,

200
00:09:05,156 --> 00:09:09,085
it doesn't do anything useful or it actually potentially causes a problem or

201
00:09:09,096 --> 00:09:12,616
my favorite is where they're like this code patch makes no sense because,

202
00:09:12,625 --> 00:09:16,385
and then they give out the specific technical reason of like we do a free beforehand.

203
00:09:16,395 --> 00:09:20,065
So there's no possibility of an allocation error, blah, blah, blah, blah blah.

204
00:09:20,085 --> 00:09:23,745
Well, OK, so that's the second part of the story though is so there's,

205
00:09:23,755 --> 00:09:24,955
there's a couple of things that happen.

206
00:09:24,966 --> 00:09:27,505
So this research paper comes out

207
00:09:27,869 --> 00:09:32,049
and then Greg Kh gets incredibly angry and basically

208
00:09:32,059 --> 00:09:35,080
just wholesale yanks all University of Minnesota patches.

209
00:09:35,090 --> 00:09:36,369
Well, that's the same thing to do, right.

210
00:09:36,380 --> 00:09:39,770
Hey, Josh, I put poison in one of your beverages in your fridge. Right.

211
00:09:39,780 --> 00:09:41,530
-- Oh, absolutely. Yeah,
-- you're cleaning your fridge out.

212
00:09:41,539 --> 00:09:43,539
Exactly. Exactly. 100%. I,

213
00:09:43,695 --> 00:09:47,515
but I think his behavior is spot on and the exact right thing to do.

214
00:09:47,525 --> 00:09:50,994
Then what happens is there's apparently like a second

215
00:09:51,005 --> 00:09:53,195
research project being done by these people where they

216
00:09:53,205 --> 00:09:56,445
claim they're running a static code analyzer on the

217
00:09:56,455 --> 00:09:59,395
Linux kernel and some of the patches that are submitted

218
00:09:59,840 --> 00:10:00,530
are

219
00:10:00,929 --> 00:10:04,619
from their system and they don't, they didn't tell anyone they came from the system.

220
00:10:04,630 --> 00:10:06,510
And a bunch of those are the ones that the Linux

221
00:10:06,520 --> 00:10:09,280
kernel people reviewed were like this patch literally does nothing.

222
00:10:09,289 --> 00:10:10,119
Why is this here?

223
00:10:10,130 --> 00:10:10,750
And they're like, oh,

224
00:10:10,760 --> 00:10:14,919
our automated static analyzers spit this out and they're like, why?

225
00:10:15,020 --> 00:10:17,919
And of course, there's no answer and there probably never will be.

226
00:10:17,929 --> 00:10:19,159
But it, it begs the question.

227
00:10:19,169 --> 00:10:21,900
Is this just some bizarre continuation of

228
00:10:21,909 --> 00:10:24,172
the first ridiculous project I don't know,

229
00:10:24,182 --> 00:10:24,783
we don't know.

230
00:10:24,822 --> 00:10:27,232
-- Yeah.
-- Well, and again, that's a great cover story.

231
00:10:27,242 --> 00:10:28,632
You know, it goes back to the classic,

232
00:10:28,643 --> 00:10:30,752
I didn't make a bad decision or do something evil.

233
00:10:30,763 --> 00:10:32,072
The computer said so,

234
00:10:32,083 --> 00:10:35,653
and it's funny that FTC and other organizations are now saying, you know, look,

235
00:10:35,663 --> 00:10:38,153
if you're going to use a IML, it can't be discriminatory.

236
00:10:38,163 --> 00:10:38,932
It has to be fair.

237
00:10:38,942 --> 00:10:42,843
It has to, you know, because we accept that with some of these expert systems.

238
00:10:42,853 --> 00:10:46,552
A IML, we, we can't actually know why it said that. Why is this picture? A,

239
00:10:46,806 --> 00:10:48,986
you know, it just is according to the system,

240
00:10:48,995 --> 00:10:52,065
if they'd actually done some gathering of statistical data,

241
00:10:52,075 --> 00:10:54,145
that would have been useful because part of it is

242
00:10:54,156 --> 00:10:56,476
to kind of vary hugely from person to person,

243
00:10:56,486 --> 00:10:58,745
but we can start to get hopefully a bell curve right?

244
00:10:58,755 --> 00:11:00,356
Like part of me hopes this fits a bell

245
00:11:00,366 --> 00:11:02,556
curve because otherwise just that reality doesn't work anymore.

246
00:11:02,565 --> 00:11:06,286
-- And I can't deal with it.
-- Have you paid attention to the last year and a half?

247
00:11:06,685 --> 00:11:08,745
Reality doesn't work anymore

248
00:11:08,976 --> 00:11:10,026
anyways?

249
00:11:10,859 --> 00:11:13,400
No, it's, it's actually that's a great example of a bell curve.

250
00:11:13,409 --> 00:11:16,150
It's just, it's a bit more to the left or the right than we thought it was

251
00:11:16,630 --> 00:11:20,320
right with. Could you just wash your hands and wear a mask, please? No. Well,

252
00:11:20,859 --> 00:11:23,270
wait a second. What do you mean? No, like what? We're just

253
00:11:23,559 --> 00:11:24,390
just when you're

254
00:11:24,559 --> 00:11:26,469
never mind anyway. Anyway,

255
00:11:27,150 --> 00:11:28,919
done some good research that would have been incredibly

256
00:11:28,929 --> 00:11:31,409
useful and more to the point part of this

257
00:11:31,419 --> 00:11:33,229
is you're going to design a methodology and you're

258
00:11:33,239 --> 00:11:34,419
not going to know if it works or not.

259
00:11:34,429 --> 00:11:36,909
And you can improve that methodology though, once you have one right,

260
00:11:36,919 --> 00:11:37,520
like once you have

261
00:11:37,690 --> 00:11:39,570
AC ID pipeline, you can start fixing it.

262
00:11:39,580 --> 00:11:41,650
For example, they could have done something incredibly useful,

263
00:11:41,659 --> 00:11:43,599
like come up with a methodology for

264
00:11:43,960 --> 00:11:46,859
essentially helping maybe them, you know, which,

265
00:11:46,869 --> 00:11:48,479
which pieces of code and which types of

266
00:11:48,489 --> 00:11:51,000
changes actually need real code review versus like,

267
00:11:51,010 --> 00:11:53,179
yeah, whatever it looks like it won't catch fire.

268
00:11:53,190 --> 00:11:54,080
Sign off. Yes.

269
00:11:54,090 --> 00:11:58,059
And I love that it reveals quote unquote, air quotes problems like, oh, you know,

270
00:11:58,070 --> 00:12:00,700
there's a fire hose of reviews and commits and

271
00:12:00,710 --> 00:12:02,140
so people aren't giving it their full attention.

272
00:12:02,150 --> 00:12:06,169
-- Well, yeah, because nobody has that much attention to spend
-- well and not just that,

273
00:12:06,179 --> 00:12:12,650
not just that the University of Minnesota is an organization I would expect to have,

274
00:12:12,659 --> 00:12:15,169
we'll say slightly above average quality

275
00:12:15,179 --> 00:12:18,250
because you're dealing with an institution that

276
00:12:18,489 --> 00:12:24,169
will say I would expect to have more rigor in what they're doing than,

277
00:12:24,539 --> 00:12:28,619
-- you know, Kurt's bait shop and ice cream parlor.
-- Yeah. Ok. Ok.

278
00:12:28,750 --> 00:12:29,000
Yeah.

279
00:12:29,010 --> 00:12:31,320
-- When you're comparing them and stuff like that
-- right now,

280
00:12:31,330 --> 00:12:34,799
now here's the other awesome part about that is there.

281
00:12:34,809 --> 00:12:35,280
And I'm going to,

282
00:12:35,289 --> 00:12:39,799
I've got a couple stories I'll put in the show notes is the Linux Foundation

283
00:12:39,900 --> 00:12:42,840
sent a letter to the University of Minnesota

284
00:12:42,849 --> 00:12:44,960
-- with some demands in it and we
-- haven't seen

285
00:12:45,346 --> 00:12:45,705
though we

286
00:12:45,866 --> 00:12:46,125
did

287
00:12:46,645 --> 00:12:46,666
it.

288
00:12:46,986 --> 00:12:52,325
-- Oh, sorry. Yeah,
-- there was a story on ZDNET SJVN published it, which is

289
00:12:52,526 --> 00:12:52,856
awesome.

290
00:12:52,866 --> 00:12:56,455
But anyway, the one thing that I think is most important about this is basically,

291
00:12:56,466 --> 00:12:59,625
I think it was Greg Kh demanded this was they want

292
00:12:59,635 --> 00:13:03,445
a list of every commit to every open source project ever.

293
00:13:03,635 --> 00:13:04,466
That was,

294
00:13:04,616 --> 00:13:05,296
this sort of

295
00:13:05,591 --> 00:13:09,471
-- search may have been conducted against where it was known. That's
-- completely fair.

296
00:13:09,481 --> 00:13:13,192
-- I
-- agree completely. But at the same time, it's like, did they do this somewhere else?

297
00:13:13,202 --> 00:13:16,331
Does anyone know if they did this somewhere else? Like who's running this research?

298
00:13:16,341 --> 00:13:19,411
Who's, you know what I mean? This is just holy cow.

299
00:13:19,512 --> 00:13:24,531
It's clear at this point that the researchers were lacked oversight. Let's say,

300
00:13:24,822 --> 00:13:25,492
-- I
-- think,

301
00:13:26,661 --> 00:13:30,721
-- I think that would be a kind way to put it.
-- That's a reasonable statement.

302
00:13:30,969 --> 00:13:36,489
Did they do this to somebody else like openssl or the no Js system that runs

303
00:13:36,590 --> 00:13:38,190
the web nowadays?

304
00:13:38,200 --> 00:13:38,690
And again,

305
00:13:38,700 --> 00:13:42,429
like we know this is possible because here's the reality of it because we have a big

306
00:13:42,440 --> 00:13:44,590
pile of known security flaws that created by

307
00:13:44,599 --> 00:13:46,710
well intentioned people trying not to do this.

308
00:13:46,835 --> 00:13:48,474
My favorite example of this of all time is the

309
00:13:48,484 --> 00:13:51,534
open ssh flaw where you could reveal private key information

310
00:13:51,544 --> 00:13:53,525
because they left a bunch of dead code in there

311
00:13:53,534 --> 00:13:55,455
for years and years and years that was garbage code.

312
00:13:55,465 --> 00:14:00,104
Nobody maintained it. One of the first precepts of all like secure programming is

313
00:14:00,354 --> 00:14:02,655
get rid of stuff you don't need or use

314
00:14:03,265 --> 00:14:04,815
because it's only going to cause problems.

315
00:14:05,094 --> 00:14:05,224
That's

316
00:14:05,565 --> 00:14:08,825
-- easy to say. But
-- I agree. It is easy to say. I just said it

317
00:14:09,960 --> 00:14:15,270
and yet people, I mean, and if the open SSH people can make this mistake,

318
00:14:15,280 --> 00:14:16,340
then everybody can.

319
00:14:16,359 --> 00:14:18,280
Yeah, absolutely. 100%.

320
00:14:18,289 --> 00:14:23,440
And so we know that you can get malicious code into software projects that again,

321
00:14:23,450 --> 00:14:25,359
this isn't like, can this be done?

322
00:14:25,369 --> 00:14:29,119
You know, if this had never been done before? The movie, the invention of lying.

323
00:14:29,140 --> 00:14:32,159
If they invented lying, that would have been good research.

324
00:14:32,390 --> 00:14:34,330
But we know that lying is possible,

325
00:14:34,510 --> 00:14:34,969
right?

326
00:14:35,989 --> 00:14:39,580
Uh So it just makes me angry because the cost in

327
00:14:39,590 --> 00:14:42,409
wasted time and effort and maybe trying to prove a negative.

328
00:14:42,419 --> 00:14:45,270
Like what other projects did you mess around with and break

329
00:14:45,549 --> 00:14:48,359
is horrendous? And I just, yeah,

330
00:14:48,510 --> 00:14:49,010
I mean,

331
00:14:49,190 --> 00:14:52,969
so let me, let me ask you a question then let's let's change it a little bit.

332
00:14:52,979 --> 00:14:54,770
Is, do you think that the Linux

333
00:14:54,960 --> 00:14:57,020
Colonel banning all

334
00:14:57,330 --> 00:15:00,340
past and future submissions from the University of Minnesota?

335
00:15:00,349 --> 00:15:02,900
Is that an appropriate punishment for what has happened?

336
00:15:02,909 --> 00:15:05,489
Well, they didn't ban all the past ones.

337
00:15:05,500 --> 00:15:09,979
They reverted them with a like this needs to be shown to be good to be put back in.

338
00:15:10,260 --> 00:15:13,400
-- OK, whatever, but you like going
-- forward and going forwards,

339
00:15:13,700 --> 00:15:16,739
I'm ok with them being banned until they get their, uh,

340
00:15:16,750 --> 00:15:19,109
I can't say that until they get their stuff

341
00:15:19,119 --> 00:15:21,630
together and stop behaving like also a word.

342
00:15:21,640 --> 00:15:23,760
I can't say stop behaving like jerks.

343
00:15:24,200 --> 00:15:28,700
You know, I could just add beeps to those non naughty words. They make them sound bad.

344
00:15:28,760 --> 00:15:31,830
They've proven, you know, that they've come clean and for example,

345
00:15:31,840 --> 00:15:35,190
they're not going to be doing this type of research again in future or

346
00:15:35,929 --> 00:15:36,390
I

347
00:15:36,669 --> 00:15:39,909
have a strong suspicion, they will never do this sort of research again.

348
00:15:40,909 --> 00:15:41,260
But

349
00:15:41,469 --> 00:15:46,270
is that because they got caught and smacked or because the Minnesota IRB

350
00:15:46,280 --> 00:15:49,059
and everything will actually ensure that this kind of thing doesn't happen again.

351
00:15:49,070 --> 00:15:52,219
-- No, it's because they
-- got caught unquestionably if they didn't get caught,

352
00:15:52,229 --> 00:15:53,539
I don't think it would have mattered.

353
00:15:53,549 --> 00:15:55,369
I don't think anybody would have changed behavior.

354
00:15:55,380 --> 00:15:56,830
And, and I think this is,

355
00:15:56,840 --> 00:16:01,299
this is why this is hugely important is because we're entering this place in

356
00:16:01,309 --> 00:16:05,039
security where I think a lot of research is starting to pay more attention.

357
00:16:05,049 --> 00:16:07,739
We're going to see, we'll say misguided

358
00:16:08,091 --> 00:16:09,411
hypotheses

359
00:16:09,531 --> 00:16:12,521
from some of these places. Like that's what this certainly is.

360
00:16:12,531 --> 00:16:15,302
-- And I think, well, it's
-- also easy research to do.

361
00:16:15,331 --> 00:16:17,812
It's not hard compared to building an ML or a I model,

362
00:16:17,822 --> 00:16:21,921
-- like writing a malicious code commit and inserting
-- it or building a giant, you know,

363
00:16:21,932 --> 00:16:23,192
particle accelerator.

364
00:16:23,202 --> 00:16:25,861
You know what I mean? Like? But anyway, I think

365
00:16:26,012 --> 00:16:26,642
that

366
00:16:26,851 --> 00:16:28,581
setting the bar for like

367
00:16:28,692 --> 00:16:33,002
if you are going to do security research of this nature, you do not mess with people.

368
00:16:33,012 --> 00:16:35,924
The bar has been set and I think set high

369
00:16:35,934 --> 00:16:39,583
-- and I think it should stay high or
-- you explicitly

370
00:16:39,593 --> 00:16:41,744
get their permission or even better yet you do it

371
00:16:41,754 --> 00:16:45,004
in a way that doesn't abuse or cause these problems.

372
00:16:45,013 --> 00:16:48,544
Right. That's true. Because you could easily be like here are 700 commits.

373
00:16:48,554 --> 00:16:51,333
Would you like $20 to review a portion of these commits

374
00:16:51,343 --> 00:16:53,004
and tell us if you think they're malicious or not,

375
00:16:53,013 --> 00:16:53,703
you know what I mean?

376
00:16:53,713 --> 00:16:57,544
My thought would be you get people who write in the same language but maybe, yeah,

377
00:16:57,554 --> 00:16:58,583
a different project.

378
00:16:58,593 --> 00:17:00,504
And that's actually one of the issues here is that

379
00:17:00,783 --> 00:17:02,083
it's people think review

380
00:17:02,185 --> 00:17:05,066
code commit means you read the code and say yes or no

381
00:17:05,296 --> 00:17:07,755
and it's no, you have to understand the system that,

382
00:17:07,765 --> 00:17:10,776
that code plugs into and to understand that

383
00:17:10,786 --> 00:17:12,885
is nontrivial because how many people have,

384
00:17:12,895 --> 00:17:13,244
you know,

385
00:17:13,435 --> 00:17:15,214
tried to track down a bug and it's taken

386
00:17:15,224 --> 00:17:17,776
forever to actually understand what the code really does.

387
00:17:17,786 --> 00:17:19,786
I just trivially, for example,

388
00:17:19,796 --> 00:17:22,015
I had a problem getting some software running and I

389
00:17:22,026 --> 00:17:25,445
finally got all the java and gradel and whatnot,

390
00:17:25,455 --> 00:17:28,326
dependencies sorted out which Josh is well aware of.

391
00:17:28,336 --> 00:17:31,907
And now it comes down to by default, it fails because of lack of code signing.

392
00:17:31,917 --> 00:17:35,598
It's like, OK, thank, thank goodness because like, now I know what the problem is.

393
00:17:35,608 --> 00:17:36,378
I just have to,

394
00:17:36,537 --> 00:17:40,588
-- I just have to set up code signing. That's easy. Yeah,
-- that's super easy.

395
00:17:40,748 --> 00:17:40,858
Right.

396
00:17:41,098 --> 00:17:42,968
-- It'll
-- be fun, you know, prior to that,

397
00:17:43,218 --> 00:17:47,387
I, I was just getting these horrific, great old and Java errors where it's just like,

398
00:17:47,397 --> 00:17:49,728
no, like, basically the system just looked at me and went.

399
00:17:49,738 --> 00:17:50,947
-- No,
-- and look,

400
00:17:50,958 --> 00:17:52,828
here's something a lot of people don't always

401
00:17:52,838 --> 00:17:56,468
understand is the Linux kernel is written in C

402
00:17:56,920 --> 00:18:01,349
but it's not C like we're used to when we think of writing code and C

403
00:18:01,569 --> 00:18:04,859
you have, for example, the C library behind you, right?

404
00:18:04,869 --> 00:18:08,640
Where you have like a print F statement, you have string copies and things like that.

405
00:18:08,650 --> 00:18:11,469
The Linux kernel has some of that because they've implemented it.

406
00:18:11,479 --> 00:18:15,670
But fundamentally speaking, the Linux kernel isn't C,

407
00:18:15,680 --> 00:18:18,469
the way we think of C it's a special Linux language almost,

408
00:18:18,935 --> 00:18:22,675
-- it doesn't have access to the ecosystem that a typical C program would have,
-- right?

409
00:18:22,685 --> 00:18:26,275
Because it's a kernel. And so that makes it even more different. OK?

410
00:18:26,285 --> 00:18:30,025
So I know C pretty well, I haven't used it in a while but I know it well enough.

411
00:18:30,035 --> 00:18:32,155
If someone said, could you review this C code for me?

412
00:18:32,165 --> 00:18:33,354
I would feel comfortable saying yes,

413
00:18:33,364 --> 00:18:36,405
I would be happy to look at it if you handed me Linux kernel code and we're like,

414
00:18:36,415 --> 00:18:37,234
can you review this?

415
00:18:37,244 --> 00:18:39,125
I'd look at it and be like I have no idea what's happening here.

416
00:18:39,135 --> 00:18:40,234
There's nothing I can do.

417
00:18:40,560 --> 00:18:41,219
And I mean,

418
00:18:41,229 --> 00:18:45,180
that's part of the challenge is you can't just pull a Rando off the street and say, oh,

419
00:18:45,189 --> 00:18:48,219
can you review this Linux kernel code because they're going to look at it and be like,

420
00:18:48,229 --> 00:18:49,469
I have no idea what's going on here.

421
00:18:49,479 --> 00:18:49,599
Right.

422
00:18:49,609 --> 00:18:53,619
-- Even if they know
-- c the number of people that have successfully implemented,

423
00:18:53,630 --> 00:18:57,219
even like a toy operating system on their own is

424
00:18:57,469 --> 00:19:01,050
vanishingly small. It used to be reasonably normal like it.

425
00:19:01,060 --> 00:19:06,010
-- No, I mean, implementing your own, like micro.
-- Yeah, on an eight bit computer.

426
00:19:06,020 --> 00:19:06,170
Yeah.

427
00:19:06,180 --> 00:19:08,670
Well, and that's where I was about to go, but it was, I hate to say this.

428
00:19:08,680 --> 00:19:12,560
-- It was in a much simpler time. Right?
-- You had 12 instructions.

429
00:19:12,569 --> 00:19:15,489
Well, you didn't have to write an IPV six implementation because it didn't exist.

430
00:19:15,500 --> 00:19:17,250
-- Exactly.
-- It's just,

431
00:19:17,719 --> 00:19:18,880
it's a different problem.

432
00:19:18,890 --> 00:19:21,729
Here's my biggest concern is that a bunch of researchers

433
00:19:21,739 --> 00:19:23,699
see this and think that they can make a name for

434
00:19:23,709 --> 00:19:26,780
themselves by kind of proving like this is basically me

435
00:19:26,790 --> 00:19:28,979
proving that you can throw a brick through Josh's window.

436
00:19:28,989 --> 00:19:32,130
We don't need to actually do it to know that it's possible.

437
00:19:32,140 --> 00:19:34,459
So here's the thing I would have agreed with,

438
00:19:34,469 --> 00:19:38,060
you had the Linux kernel not come down so hard on the university.

439
00:19:38,069 --> 00:19:40,459
And I think because they came down so hard,

440
00:19:40,469 --> 00:19:45,484
anyone at any sort of accredited institution is going to look at and be like,

441
00:19:45,494 --> 00:19:47,583
I need to be really careful and it wouldn't shock

442
00:19:47,593 --> 00:19:49,683
me if there's someone doing similar research right now.

443
00:19:49,693 --> 00:19:51,774
That's like, oh, crap. Because

444
00:19:51,933 --> 00:19:56,984
I feel like the bar has been set now it's up to these researchers

445
00:19:57,254 --> 00:19:58,404
to pick their sides.

446
00:19:58,413 --> 00:20:01,193
But again, if we had researchers going and throwing bricks at windows and saying,

447
00:20:01,203 --> 00:20:04,543
oh ha ha, this window broke that nobody would condone that.

448
00:20:04,553 --> 00:20:07,604
-- Right.
-- I agree completely. But, but here's the thing, right?

449
00:20:07,703 --> 00:20:12,748
Any time you're talking about magic internet, anything, it's not a seen in that way.

450
00:20:12,758 --> 00:20:15,687
Like if I break a window, there's obvious cost to that.

451
00:20:15,697 --> 00:20:18,968
But if I send a bad commit to a project while there is a cost to that,

452
00:20:18,978 --> 00:20:21,887
I think it is less understandable by most people.

453
00:20:21,897 --> 00:20:23,667
Yeah, I mean, it's one of those classic things.

454
00:20:23,677 --> 00:20:23,988
Oh, you know,

455
00:20:23,998 --> 00:20:26,947
we had to spend an extra five hours massaging this spreadsheet to do blah, blah,

456
00:20:26,958 --> 00:20:27,228
blah.

457
00:20:27,238 --> 00:20:28,307
Right. Nobody cares.

458
00:20:28,317 --> 00:20:31,067
-- Whereas a broken window, except
-- in this case, we,

459
00:20:31,078 --> 00:20:35,118
we had some of the probably smartest Linux engineers on the planet obsessing

460
00:20:35,128 --> 00:20:38,947
over a bunch of commits from a university for probably several days.

461
00:20:39,031 --> 00:20:39,312
Right.

462
00:20:39,322 --> 00:20:43,972
I bet, I bet this has an actual cost of several million dollars associated with it.

463
00:20:43,982 --> 00:20:44,232
Well,

464
00:20:44,241 --> 00:20:46,511
this has actually pushed back Linux kernel development

465
00:20:46,521 --> 00:20:49,212
-- a couple of days easily
-- without question yet.

466
00:20:49,222 --> 00:20:53,352
-- That's we've just lost one or 2% of this year's productivity,
-- which

467
00:20:53,732 --> 00:20:55,391
that also begs the question will there

468
00:20:55,401 --> 00:20:58,171
be any legal repercussions for this behavior?

469
00:20:58,182 --> 00:21:01,982
-- Which I'm not a lawyer? I don't understand.
-- Do you mean civil or criminal either?

470
00:21:02,802 --> 00:21:06,031
I mean, you know, I think from a civil perspective,

471
00:21:06,135 --> 00:21:09,436
I feel like the Linux kernel, if they were to go after them could win,

472
00:21:09,446 --> 00:21:11,076
I feel like more interestingly enough,

473
00:21:11,086 --> 00:21:16,115
there are potential charges from a criminal, like the C FAA has specific,

474
00:21:16,125 --> 00:21:17,306
has a specific statute.

475
00:21:17,316 --> 00:21:19,436
I think it's number five where it talks about

476
00:21:19,536 --> 00:21:22,316
getting code into systems that you're not supposed to.

477
00:21:22,475 --> 00:21:27,586
I mean, I don't, again, I don't, I would not be shocked but I don't know,

478
00:21:27,605 --> 00:21:29,625
they wrote a confession.

479
00:21:29,635 --> 00:21:33,145
-- That's true.
-- It's, their behavior is well documented here.

480
00:21:33,630 --> 00:21:37,199
This isn't a case of maybe, maybe not. What were the intentions?

481
00:21:37,209 --> 00:21:40,650
It's like they wrote and sent an email saying it was our intention to

482
00:21:40,660 --> 00:21:44,310
do Xy and Z I suspect there will not be criminal or civil charges.

483
00:21:44,319 --> 00:21:47,349
However, I hope the IRB comes down on them.

484
00:21:47,359 --> 00:21:50,839
And also at first I was like, how to the heck did the IRB pass this? Right?

485
00:21:50,849 --> 00:21:51,310
Because this,

486
00:21:51,479 --> 00:21:54,640
-- they didn't. Yeah.
-- Well, and yeah, and that's how it turns out. Is

487
00:21:54,650 --> 00:21:55,150
that ok?

488
00:21:55,160 --> 00:21:56,449
What's, what's an IRB?

489
00:21:56,459 --> 00:21:59,099
I think there's a lot of people who don't understand what that means.

490
00:21:59,109 --> 00:22:01,800
Institutional Review board. So it's like I want to go kick puppies

491
00:22:01,912 --> 00:22:04,613
and they're like, ok, well, you're gonna have to wear like Crocs or something soft,

492
00:22:04,623 --> 00:22:05,733
you know, to kick the puppies.

493
00:22:05,743 --> 00:22:08,203
Right. You can't wear crampons when you kick the puppies. Oh, ok.

494
00:22:08,213 --> 00:22:10,503
Yeah, we'll do that. We'll kick the puppies and then we'll take them to the vet.

495
00:22:10,512 --> 00:22:12,613
-- This is
-- horrific example.

496
00:22:12,743 --> 00:22:13,892
-- Well,
-- that's the point. Right.

497
00:22:13,902 --> 00:22:14,203
That's,

498
00:22:14,213 --> 00:22:16,453
that's why we have the IRB because if I gave

499
00:22:16,463 --> 00:22:18,733
you the true examples of why we have the IRB.

500
00:22:18,743 --> 00:22:20,652
Josh would have to censor this show and it would

501
00:22:20,662 --> 00:22:24,973
be marked as some horrific level of you're going to need

502
00:22:25,133 --> 00:22:26,302
therapy after. OK.

503
00:22:26,312 --> 00:22:29,142
I'm just going to say Tuskegee syphilis experiment, for example,

504
00:22:29,152 --> 00:22:30,093
which didn't wind down

505
00:22:30,196 --> 00:22:31,245
until the late eighties.

506
00:22:32,336 --> 00:22:32,755
You know,

507
00:22:32,946 --> 00:22:33,345
like

508
00:22:33,546 --> 00:22:34,546
we're not even going to put that in the

509
00:22:34,706 --> 00:22:38,296
-- notes. You can google it if you don't know what it is.
-- It was highly unethical and

510
00:22:38,605 --> 00:22:38,625
it

511
00:22:38,735 --> 00:22:38,765
was,

512
00:22:39,906 --> 00:22:40,036
it was

513
00:22:41,816 --> 00:22:44,316
-- OK. Yeah, you're right, you're right. Absolutely.
-- Yeah.

514
00:22:44,326 --> 00:22:49,265
And so this is why this is why we have things like I RBS. Now, I would hope that the I RBS

515
00:22:49,505 --> 00:22:52,036
are take a more proactive approach maybe and kind

516
00:22:52,046 --> 00:22:54,375
of make sure people aren't doing stupid things.

517
00:22:54,395 --> 00:22:58,296
The IRB wasn't consulted until after the fact.

518
00:22:58,479 --> 00:23:02,438
-- I mean, if you don't ask them
-- well, but the ecosystem surrounding it,

519
00:23:02,448 --> 00:23:08,019
like the adviser, how did the graduate adviser not run this by the IRB first?

520
00:23:08,029 --> 00:23:13,019
Yeah, I agree. It would not shock me if there's more happening here than we know.

521
00:23:13,029 --> 00:23:14,798
It's pretty clear that they went and did something.

522
00:23:14,808 --> 00:23:16,818
And then after the fact, we're like, Oh, whoops,

523
00:23:16,828 --> 00:23:18,489
we need to get sign off if we want to

524
00:23:18,499 --> 00:23:20,979
publish because you can't publish this stuff without IRB review.

525
00:23:20,989 --> 00:23:23,389
That's part of my question is how much did people know?

526
00:23:23,399 --> 00:23:26,649
And how much of this is just, we're going to throw these guys under the,

527
00:23:27,121 --> 00:23:29,371
well, the three people definitely knew

528
00:23:29,511 --> 00:23:30,031
and

529
00:23:30,232 --> 00:23:32,781
it's pretty clear they didn't tell the RB till afterwards.

530
00:23:32,791 --> 00:23:34,661
So I don't want to give the IRB a complete

531
00:23:34,671 --> 00:23:38,021
pass because obviously the ecosystem at that university failed.

532
00:23:38,031 --> 00:23:40,702
And the IRB does hold part of that as a problem,

533
00:23:41,421 --> 00:23:42,141
you know, that,

534
00:23:42,151 --> 00:23:45,692
that university as a whole has a sick ecosystem clearly

535
00:23:45,702 --> 00:23:47,702
because three people decided they would go do this.

536
00:23:47,712 --> 00:23:49,171
Maybe they have other teams doing this.

537
00:23:49,682 --> 00:23:50,901
How do we know? They're the only one?

538
00:23:51,881 --> 00:23:52,141
Right.

539
00:23:52,322 --> 00:23:53,822
And part of me hopes that because

540
00:23:53,932 --> 00:23:54,702
this is such an

541
00:23:55,045 --> 00:23:58,755
regious example of bad behavior that it is rare enough, you know, like,

542
00:23:58,765 --> 00:24:00,125
it's just one of those things where?

543
00:24:00,165 --> 00:24:01,415
Oh, wow, this is so bad.

544
00:24:01,425 --> 00:24:04,224
No, it actually turns out this is rare enough that it makes the news.

545
00:24:04,234 --> 00:24:05,744
I certainly hope so.

546
00:24:05,755 --> 00:24:07,875
It's not something common because what's funny is

547
00:24:07,885 --> 00:24:08,954
you see all the people that are like,

548
00:24:08,964 --> 00:24:11,185
oh, yeah, I thought about doing that kind of research, like 1015,

549
00:24:11,194 --> 00:24:12,104
20 whatever years ago.

550
00:24:12,114 --> 00:24:14,545
But then I decided, like, again, it's just not useful.

551
00:24:14,555 --> 00:24:18,665
It's, we know you can get malicious code commits in because we do all the time.

552
00:24:18,675 --> 00:24:20,645
Like we get not malicious code commits in,

553
00:24:20,655 --> 00:24:23,224
but we get code commits that have security flaws in all

554
00:24:23,328 --> 00:24:25,588
time. That's why INFOSEC is a thing.

555
00:24:25,887 --> 00:24:26,267
That's it.

556
00:24:26,277 --> 00:24:26,488
Now,

557
00:24:26,498 --> 00:24:29,027
if we had some idea the statistics behind it and you

558
00:24:29,037 --> 00:24:31,208
know what kind of actual tools and behaviors could help,

559
00:24:31,218 --> 00:24:32,118
lower these numbers

560
00:24:32,248 --> 00:24:33,907
-- that would be useful.
-- I agree.

561
00:24:33,917 --> 00:24:40,307
I mean, that this is one of my frustrations is what activities we do actually matter.

562
00:24:40,437 --> 00:24:42,387
And I feel like we don't know.

563
00:24:42,397 --> 00:24:45,008
-- Most of the time
-- I've seen a couple clever attempts to

564
00:24:45,017 --> 00:24:47,777
kind of fix the code sign off problem where OK,

565
00:24:47,787 --> 00:24:50,147
number one, you require code, sign off on everything.

566
00:24:50,157 --> 00:24:51,508
Well, yeah, and then it just becomes

567
00:24:51,610 --> 00:24:52,931
smash that OK button,

568
00:24:53,140 --> 00:24:53,561
right?

569
00:24:53,730 --> 00:24:56,191
You know, there's, there's a web comic I saw the other day,

570
00:24:56,201 --> 00:24:57,191
I don't remember who did it.

571
00:24:57,201 --> 00:24:58,201
I'll see if I can find it.

572
00:24:58,211 --> 00:24:59,911
I'm not, I don't, I don't know if I will,

573
00:24:59,921 --> 00:25:02,120
but it was basically it showed like a code commit.

574
00:25:02,130 --> 00:25:05,350
That's three lines has like 20 comments about it. A code commit.

575
00:25:05,360 --> 00:25:08,860
That's 2000 lines just has looks good to me. You know,

576
00:25:09,140 --> 00:25:12,291
-- I get that.
-- I honestly don't know what the answer is here.

577
00:25:12,301 --> 00:25:14,610
I suspect it has something to do with a bit of machine learning.

578
00:25:14,620 --> 00:25:15,431
And a I just,

579
00:25:15,441 --> 00:25:17,590
even from a measurement point of view because having

580
00:25:17,600 --> 00:25:19,061
people fill out a form are trying to,

581
00:25:19,230 --> 00:25:19,781
you know, try

582
00:25:19,894 --> 00:25:23,374
a code commit is that's not going to fly for most projects. No, not at all.

583
00:25:23,384 --> 00:25:24,953
At least in this case,

584
00:25:24,963 --> 00:25:29,953
here's a great example of where open source is good though is that we can say, OK,

585
00:25:29,963 --> 00:25:34,333
here are all the, you know, u the commits from these email addresses,

586
00:25:34,343 --> 00:25:36,473
we can at least find them and see what they were.

587
00:25:36,784 --> 00:25:39,793
And if they come clean on the other email addresses they used, we can, you know,

588
00:25:39,803 --> 00:25:42,183
figure that out part of it speaks to why, you know,

589
00:25:42,193 --> 00:25:44,833
with the distributed weakness filing project, why we require a github

590
00:25:44,963 --> 00:25:48,737
ID randoms walking off the street and make good CV requests. Cool.

591
00:25:48,746 --> 00:25:49,717
But in general,

592
00:25:49,727 --> 00:25:52,597
the majority of our CV requests are going to come from people where you click on their

593
00:25:52,756 --> 00:25:56,386
github profile and you can just instantly by glancing at it for 10 seconds,

594
00:25:56,406 --> 00:25:59,177
kind of tell if they're quote unquote legitimate or not.

595
00:25:59,187 --> 00:26:01,116
It really is that easy most of the time?

596
00:26:01,126 --> 00:26:03,756
Well, and look, if the account is three hours old when it,

597
00:26:03,886 --> 00:26:06,937
when it submits, like there's nothing wrong with that, but it's also not like,

598
00:26:06,947 --> 00:26:08,916
oh yes, I'm going to approve this person.

599
00:26:08,927 --> 00:26:10,876
-- You know what I mean?
-- Well, let me put it this way.

600
00:26:10,886 --> 00:26:16,116
I assigned 6000 cvs and people are like, but this one had a flaw and I'm like, I'm sure.

601
00:26:16,126 --> 00:26:16,347
Yeah,

602
00:26:16,459 --> 00:26:17,290
probably did.

603
00:26:17,300 --> 00:26:19,550
I, I, and first of all, I'm like,

604
00:26:19,560 --> 00:26:22,329
I have no idea what you're talking about because like one out of 6000

605
00:26:22,510 --> 00:26:23,209
the nope.

606
00:26:23,650 --> 00:26:24,709
But secondly,

607
00:26:24,869 --> 00:26:28,680
I, I never spent more than about 30 seconds reviewing each one

608
00:26:28,849 --> 00:26:32,300
because when you get to the law of large numbers, like if you go, I,

609
00:26:32,310 --> 00:26:35,599
I challenge anybody to go to the LKML archives and read

610
00:26:35,699 --> 00:26:38,760
-- a week of list traffic.
-- Oh my goodness, man.

611
00:26:38,770 --> 00:26:44,640
I subscribe to it and I will glance, I will look for certain things and I use it most as

612
00:26:44,743 --> 00:26:45,373
just an archive.

613
00:26:45,383 --> 00:26:47,922
I can search every now and then I'll start reading a

614
00:26:47,932 --> 00:26:52,162
thread because I find a particular patch interesting and it is,

615
00:26:52,172 --> 00:26:53,623
it is unreadable.

616
00:26:53,633 --> 00:26:57,363
I don't know how like the likes of Linus and Greg and you know,

617
00:26:57,373 --> 00:26:59,322
-- al and some of these people,
-- they don't,

618
00:26:59,333 --> 00:27:03,282
they sort of my understanding is that they sort of delegate and get like a, you know,

619
00:27:03,292 --> 00:27:04,723
a condensed version.

620
00:27:04,733 --> 00:27:07,503
I don't know, man. Like they've replied to the weirdest stuff though.

621
00:27:07,512 --> 00:27:12,312
-- They read a lot
-- regardless. Last week was 8405 messages in

622
00:27:12,322 --> 00:27:12,963
-- a
-- week.

623
00:27:13,280 --> 00:27:13,630
Yeah.

624
00:27:13,800 --> 00:27:15,189
-- And my
-- human is reading

625
00:27:15,199 --> 00:27:18,550
that I'm going to pick another random week. 8244.

626
00:27:18,739 --> 00:27:21,650
Uh 0, this one's lower 6628.

627
00:27:21,819 --> 00:27:21,949
Is

628
00:27:22,060 --> 00:27:22,250
that

629
00:27:22,589 --> 00:27:22,770
all?

630
00:27:23,890 --> 00:27:24,569
Oh, this

631
00:27:25,130 --> 00:27:27,280
ouch. 10,552.

632
00:27:27,810 --> 00:27:30,959
-- So if you spent, how many seconds in a week are there?
-- I don't know

633
00:27:31,170 --> 00:27:31,459
the math.

634
00:27:32,180 --> 00:27:32,329
Uh

635
00:27:32,510 --> 00:27:34,229
oh, there's that song I should know this.

636
00:27:34,599 --> 00:27:35,619
Um 60.

637
00:27:35,920 --> 00:27:36,949
0, yeah. Sorry. Six

638
00:27:37,469 --> 00:27:40,989
uh 604,800 seconds in a week. So divide.

639
00:27:41,000 --> 00:27:44,170
So, yeah, if it takes a minute to read each message, you don't get to sleep that week,

640
00:27:44,219 --> 00:27:44,849
-- it's
-- fine.

641
00:27:45,060 --> 00:27:46,180
Everything's fine. Yeah.

642
00:27:46,380 --> 00:27:47,829
Even just reading a, a

643
00:27:48,140 --> 00:27:49,719
1% subset of that

644
00:27:49,949 --> 00:27:54,130
and, and understanding those emails is still going to take multiple hours for sure.

645
00:27:54,219 --> 00:27:54,439
Yeah.

646
00:27:54,449 --> 00:27:58,949
Anyways, I think I'm, I'm glad that Greg set the bar because this is, as far as I know,

647
00:27:58,959 --> 00:28:01,040
this is kind of the first time it's really publicly happened.

648
00:28:01,050 --> 00:28:02,089
I mean, no doubt it's happened. But

649
00:28:02,194 --> 00:28:02,604
for,

650
00:28:02,785 --> 00:28:05,795
but no, I'm glad you set the bar this high. I think it's a good bar to set.

651
00:28:05,805 --> 00:28:07,334
And I think part of the problem now is that

652
00:28:07,344 --> 00:28:11,025
the u the university is also now broken trust,

653
00:28:11,035 --> 00:28:12,814
especially around trust.

654
00:28:12,824 --> 00:28:16,494
Yeah, like you said, with that their domain name 100% and in general,

655
00:28:16,505 --> 00:28:18,324
because they can't be the only university that has

656
00:28:18,334 --> 00:28:20,555
these lax controls and allows this kind of shenanigans.

657
00:28:20,564 --> 00:28:24,734
I bet many, many university research departments are having,

658
00:28:24,744 --> 00:28:26,814
we'll say heated meetings this week.

659
00:28:28,109 --> 00:28:31,229
All right, I'm, I'm going to call this one. I feel like

660
00:28:31,729 --> 00:28:36,239
it pleases me. We got to talk about this because I'm, I'm still super annoyed by this

661
00:28:36,369 --> 00:28:37,560
and everything that happened.

662
00:28:37,660 --> 00:28:40,719
It was bad, useless research. We know that this is possible.

663
00:28:40,729 --> 00:28:44,599
-- You don't need to prove it.
-- Yep. Yep. Exactly. All right. Thank you, Kurt.

664
00:28:44,609 --> 00:28:47,270
Thank you everyone for listening. Go to open source security podcast.com.

665
00:28:47,280 --> 00:28:51,239
Hit up the show notes, use a Pound Os S podcast. Hashtag Hit us up on social media.

666
00:28:51,250 --> 00:28:53,729
Kurt have a marvelous rest of your day.

667
00:28:53,910 --> 00:28:56,819
-- You too. Thanks everybody. Thanks,
-- everyone. Bye bye

668
00:29:01,430 --> 00:29:01,489
the.