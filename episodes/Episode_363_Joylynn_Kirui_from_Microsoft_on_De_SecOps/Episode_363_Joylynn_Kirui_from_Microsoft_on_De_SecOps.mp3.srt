0
00:00:05,340 --> 00:00:08,659
Hello and welcome to the open source security podcast with myself,

1
00:00:08,670 --> 00:00:10,550
Kurt Siefried and my partner in Thought Crime.

2
00:00:10,560 --> 00:00:11,329
Josh Bresser.

3
00:00:11,529 --> 00:00:14,560
I'm super, super duper. Excited for our guest today. We have a guest.

4
00:00:14,569 --> 00:00:15,380
We have Joy Lynn Kirui

5
00:00:15,670 --> 00:00:18,079
who is an infosec evangelist covering cloud security

6
00:00:18,090 --> 00:00:20,250
among the top 50 women in cybersecurity,

7
00:00:20,260 --> 00:00:23,370
Africa, 2020 finalist woman hacker of the year Africa,

8
00:00:23,379 --> 00:00:27,370
2020 finalist and Young Cecil Vanguard 2022 among others.

9
00:00:27,379 --> 00:00:30,159
She's a senior cloud security advocate at Microsoft.

10
00:00:30,274 --> 00:00:31,104
She focuses on DEV

11
00:00:31,503 --> 00:00:31,884
ops on github

12
00:00:32,023 --> 00:00:35,054
and Azure, which includes application security. Joy Lynn.

13
00:00:35,063 --> 00:00:39,173
Thank you so much for coming on the show. We are so excited to have you here.

14
00:00:39,183 --> 00:00:40,874
Thank you for having me, Josh.

15
00:00:41,374 --> 00:00:42,574
I don't even know where to start.

16
00:00:42,583 --> 00:00:43,284
I, it was funny,

17
00:00:43,293 --> 00:00:46,784
we were talking in the kind of the pre show about like her curtain eyes,

18
00:00:46,793 --> 00:00:48,574
tumultuous history with Microsoft.

19
00:00:48,583 --> 00:00:49,894
And so I'm excited we're not going to talk

20
00:00:49,903 --> 00:00:51,414
about that today because that's not the topic,

21
00:00:51,423 --> 00:00:51,804
but

22
00:00:51,944 --> 00:00:52,763
I guess Joly,

23
00:00:52,863 --> 00:00:55,094
I'll, why don't you just kind of tell us what

24
00:00:55,208 --> 00:00:58,057
you're up to tell us what you're doing because I've listened to

25
00:00:58,068 --> 00:00:59,928
a bunch of your stuff over the last couple of weeks.

26
00:00:59,937 --> 00:01:02,548
And it is fascinating what's all going on.

27
00:01:02,678 --> 00:01:04,876
Yes. So as you mentioned in my

28
00:01:05,126 --> 00:01:07,248
bio, I do a lot of depth

29
00:01:07,447 --> 00:01:12,258
setups and what I do is mainly train developers on secure coding

30
00:01:12,267 --> 00:01:17,068
as well as automating security within the software development life cycle.

31
00:01:17,117 --> 00:01:19,008
Not only about tooling because Dev

32
00:01:19,248 --> 00:01:22,262
Cup is not only a tooling. So that's where people go wrong.

33
00:01:22,272 --> 00:01:24,821
So it's all about uh culture shifts

34
00:01:25,031 --> 00:01:28,152
because security is everyone's responsibility. So I've been

35
00:01:28,332 --> 00:01:32,611
mainly in the offensive security path um for the last,

36
00:01:32,942 --> 00:01:36,632
OK, for my whole cybersecurity career as an ethical hacker,

37
00:01:36,641 --> 00:01:41,762
what we call security assurance and having worked with developers um helping

38
00:01:41,772 --> 00:01:44,961
them like find security vulnerabilities to the coal that they're building or

39
00:01:45,305 --> 00:01:47,596
um the software that they are actually building.

40
00:01:47,825 --> 00:01:50,996
So, and I've actually seen a lot of pain points,

41
00:01:51,005 --> 00:01:55,335
like even me working with them and on some of the tools that we've actually deployed,

42
00:01:55,346 --> 00:01:58,375
uh which actually give a lot of false positives and whatnot.

43
00:01:58,386 --> 00:02:00,015
Like I've, I've,

44
00:02:00,026 --> 00:02:03,146
I've listened to them complain and they shouldn't complain

45
00:02:03,155 --> 00:02:05,596
a lot like security shouldn't be their problem.

46
00:02:05,786 --> 00:02:09,925
So, yes. Um Yes. So that's what I do in the, in, in brief.

47
00:02:11,460 --> 00:02:13,009
Awesome. I love that.

48
00:02:13,520 --> 00:02:16,429
One thing I'm curious about is so obviously I come

49
00:02:16,440 --> 00:02:18,520
from more of a cloud background now being that I,

50
00:02:18,740 --> 00:02:20,330
you know, I at the cloud security lines

51
00:02:20,619 --> 00:02:21,880
and I'm definitely

52
00:02:22,679 --> 00:02:25,050
one thing I've seen is I feel like with DEV SE

53
00:02:25,309 --> 00:02:26,130
ops, especially

54
00:02:27,100 --> 00:02:31,289
there's this traditional view of like, oh, you know, I build app,

55
00:02:31,300 --> 00:02:34,330
throw it onto server, server person makes server work.

56
00:02:34,580 --> 00:02:38,199
And then in the cloud it's, it seems to be a bit different in that, you know.

57
00:02:38,210 --> 00:02:41,779
Oh, well, for example, the cloud security line, my devs throw the app into Hiroko

58
00:02:42,059 --> 00:02:45,639
and make it work. And I, I literally point to DNS record of them. That is

59
00:02:45,880 --> 00:02:47,880
the extent of my, it support to them

60
00:02:48,210 --> 00:02:50,139
and I pay the Hiroko bill and that's it.

61
00:02:50,570 --> 00:02:51,160
And

62
00:02:51,429 --> 00:02:53,039
one thing I find is,

63
00:02:53,979 --> 00:02:54,399
well,

64
00:02:54,410 --> 00:02:56,860
I find one danger and is this what you're finding a

65
00:02:56,869 --> 00:02:59,630
lot of places where they kind of might ignore that?

66
00:02:59,639 --> 00:03:02,860
Ok, who's running the server because it mostly kind of runs itself. But,

67
00:03:03,039 --> 00:03:05,259
you know, are people missing that because that's,

68
00:03:05,440 --> 00:03:06,990
that's one thing I ran into like,

69
00:03:07,309 --> 00:03:08,000
we've,

70
00:03:08,220 --> 00:03:11,169
we've hit the situation where, you know, who's in charge of X

71
00:03:11,300 --> 00:03:13,220
and it's like, well, it kind of works. So who cares?

72
00:03:13,369 --> 00:03:16,050
Or are you finding people are being conscious of that,

73
00:03:18,029 --> 00:03:18,520
of that?

74
00:03:18,740 --> 00:03:20,240
So, like what I

75
00:03:20,940 --> 00:03:21,080
do

76
00:03:21,970 --> 00:03:22,240
evenings

77
00:03:23,839 --> 00:03:25,220
do your due diligence,

78
00:03:25,380 --> 00:03:29,539
you have to know where your data is actually sitting where your application is.

79
00:03:29,550 --> 00:03:32,880
Like what infrastructure your application is actually, um, sitting on.

80
00:03:32,960 --> 00:03:36,630
So you have to read the fine prints like within the policy, like, um,

81
00:03:36,639 --> 00:03:39,309
so it might be like a software as a service provision.

82
00:03:39,559 --> 00:03:44,589
So you have to know, like whose responsibility is it to secure the infrastructure?

83
00:03:44,830 --> 00:03:47,839
So is it your responsibility to secure the application alone?

84
00:03:48,020 --> 00:03:51,779
And can you also have influence in the infrastructure like um

85
00:03:51,889 --> 00:03:53,990
maybe the reports,

86
00:03:54,000 --> 00:03:59,179
the auditing tool reports that are actually built by that particular platform,

87
00:03:59,279 --> 00:04:01,330
you also need to like have access to that.

88
00:04:01,419 --> 00:04:06,399
So you have to read the fine print like and be very intentional about your security

89
00:04:06,529 --> 00:04:08,570
because I should say like if you don't

90
00:04:08,794 --> 00:04:11,384
that it's actually a repetition. That's actually at risk.

91
00:04:11,485 --> 00:04:11,554
Yeah.

92
00:04:11,854 --> 00:04:15,585
-- So you have to do a lot of due diligence in this case.
-- OK.

93
00:04:15,615 --> 00:04:18,863
So that's really interesting that you say that because

94
00:04:18,875 --> 00:04:21,885
if you look at the history of developers,

95
00:04:21,894 --> 00:04:24,065
developers never had to worry about where the data

96
00:04:24,075 --> 00:04:26,195
was or any of these sorts of things.

97
00:04:26,204 --> 00:04:28,855
You just wrote your application and you threw it over the

98
00:04:28,864 --> 00:04:31,765
fence to somebody and then they had to run it.

99
00:04:32,535 --> 00:04:34,684
So how, I mean, how do you, how do you talk about that?

100
00:04:34,695 --> 00:04:37,644
And I think the other thing too is back in the past, we only had one computer.

101
00:04:37,950 --> 00:04:40,890
So like it was really clear when we put the application on it.

102
00:04:40,899 --> 00:04:41,970
That's where the data was.

103
00:04:42,119 --> 00:04:44,700
OK? So I'll give you an example a scenario.

104
00:04:44,709 --> 00:04:49,809
So I'm a developer, I can say that I am probably like a cloud developer.

105
00:04:49,820 --> 00:04:53,179
So I build my code on an ID

106
00:04:53,459 --> 00:04:59,170
and then I push it to, let's say application service within

107
00:04:59,420 --> 00:05:01,890
Azure. I know my application is already running and it's

108
00:05:02,029 --> 00:05:05,089
running also a database in the cloud.

109
00:05:05,779 --> 00:05:08,910
So as a developer, in most cases,

110
00:05:09,290 --> 00:05:10,290
you just

111
00:05:10,600 --> 00:05:13,119
worry that yes, I've already built my code,

112
00:05:13,130 --> 00:05:15,890
I've compiled it and I've pushed it and it's running

113
00:05:16,029 --> 00:05:19,329
so in traditional days, like you wouldn't care.

114
00:05:19,339 --> 00:05:21,480
Like, ok, so yes, it's already running.

115
00:05:21,489 --> 00:05:25,809
It's no longer my business uh in terms of monitoring, in terms of security as well.

116
00:05:26,329 --> 00:05:30,049
But right now it's more of the developers

117
00:05:30,250 --> 00:05:34,589
and as well as the security team and as well as the operations team working together

118
00:05:34,989 --> 00:05:39,709
and knowing that they all have to make sure that security is incorporated,

119
00:05:39,720 --> 00:05:42,309
they have to do post mortems and they have to,

120
00:05:42,320 --> 00:05:48,839
to avoid the blame game when an exploit or availability is actually exploited and

121
00:05:48,920 --> 00:05:52,779
maybe a lot of money is actually stolen from the company in that,

122
00:05:52,790 --> 00:05:53,549
in that case.

123
00:05:53,559 --> 00:05:54,190
So

124
00:05:54,799 --> 00:05:57,880
yes. So in the cloud, once the data is there,

125
00:05:58,029 --> 00:06:02,350
so there's several regulations as well. We have like um the GDPR.

126
00:06:02,359 --> 00:06:05,700
So whereby if you're using like um customers like in Europe,

127
00:06:06,010 --> 00:06:09,589
in some cases, it regulates as well, like where the data has to see.

128
00:06:10,109 --> 00:06:15,410
So you they have to make sure that they meet all these um requirements otherwise,

129
00:06:15,420 --> 00:06:16,750
otherwise they will be fine.

130
00:06:16,779 --> 00:06:17,049
Yeah.

131
00:06:17,470 --> 00:06:21,649
So in most cases, yes, it's not only the the developer's job,

132
00:06:21,899 --> 00:06:23,690
uh It's for the whole team,

133
00:06:23,730 --> 00:06:25,959
it's for the developers and the security team

134
00:06:25,970 --> 00:06:27,970
and the operations team to work together,

135
00:06:27,980 --> 00:06:31,519
but yes, it's a team spirit of some kind.

136
00:06:31,529 --> 00:06:34,010
It's a teamwork, teamwork here that's needed here.

137
00:06:34,260 --> 00:06:36,720
Definitely tell me how you deal with

138
00:06:36,730 --> 00:06:39,440
situations where you're talking about teamwork.

139
00:06:39,559 --> 00:06:44,549
Everyone has to work together. And I think that's very much the date of things today.

140
00:06:44,920 --> 00:06:48,709
And you mentioned something uh a little bit ago about, for example,

141
00:06:48,720 --> 00:06:49,739
false positives.

142
00:06:49,970 --> 00:06:53,619
So what is your suggestion when you have a security

143
00:06:53,630 --> 00:06:57,929
team working with the developer team working with an operations team

144
00:06:58,100 --> 00:07:00,220
and you have things like security findings or

145
00:07:00,230 --> 00:07:02,940
false positives or something from a tool.

146
00:07:02,950 --> 00:07:05,160
And now everyone has to work together.

147
00:07:05,170 --> 00:07:08,369
I'm I'm always very curious in what this answer looks like.

148
00:07:09,149 --> 00:07:09,160
Oh,

149
00:07:10,529 --> 00:07:12,619
trust me before

150
00:07:12,809 --> 00:07:15,829
in the early stages when you're adopting a new tool.

151
00:07:15,839 --> 00:07:18,350
Um And yes, you're all working together.

152
00:07:18,950 --> 00:07:20,309
It's hectic

153
00:07:21,070 --> 00:07:23,239
because um I remember the first time I

154
00:07:23,250 --> 00:07:25,609
was working with developers like adopting DEV Jacobs

155
00:07:25,859 --> 00:07:26,450
tools.

156
00:07:26,459 --> 00:07:29,929
I remember this particular two generated false

157
00:07:29,940 --> 00:07:32,450
positives like almost in the hundreds.

158
00:07:33,809 --> 00:07:34,769
And it took,

159
00:07:34,779 --> 00:07:38,850
it took uh it took the developers a lot more time to fix or to

160
00:07:38,859 --> 00:07:43,250
identify the false positives than the time they actually took to build the code.

161
00:07:43,589 --> 00:07:43,609
So

162
00:07:44,190 --> 00:07:45,049
it was just like,

163
00:07:47,029 --> 00:07:49,670
yeah, so it it's it kind of look like.

164
00:07:49,679 --> 00:07:53,130
Uh That's why we talk about the depth second maturity model as well.

165
00:07:53,140 --> 00:07:58,170
So you just don't take a tool as is you have to make sure that uh it meets your needs,

166
00:07:58,179 --> 00:08:02,989
you have to make sure that you just not take it off the shelf as is you're doing a lot

167
00:08:03,000 --> 00:08:06,609
of in depth analysis to make sure that it meets

168
00:08:06,619 --> 00:08:09,269
your needs and it removes the false positives as well.

169
00:08:09,279 --> 00:08:10,809
So by this, I mean,

170
00:08:10,920 --> 00:08:15,420
it can be to ignore some particular um issues that you know,

171
00:08:15,429 --> 00:08:17,250
are actually false positives.

172
00:08:17,540 --> 00:08:21,750
It can be to only identify maybe critical or high risk capabilities.

173
00:08:21,760 --> 00:08:26,170
So it depends with how you actually configure the tooling within your

174
00:08:26,179 --> 00:08:30,570
maturity model to make sure that at least it meets your objectives

175
00:08:30,760 --> 00:08:32,869
and reduces false positives as well.

176
00:08:32,900 --> 00:08:36,109
One thing I'm sort of wondering is how often are these tool make

177
00:08:36,380 --> 00:08:40,609
sort of open to feedback to kind of dial down these false positives because that's

178
00:08:40,808 --> 00:08:43,349
are we getting to a point where they're starting to dial down their false positives

179
00:08:43,359 --> 00:08:47,770
and make the tools actually better and have feedback or is that still a challenge?

180
00:08:47,940 --> 00:08:50,109
-- Um
-- I feel like it's still a challenge because

181
00:08:50,119 --> 00:08:53,650
it's on a case by case scenario because my,

182
00:08:53,659 --> 00:08:56,210
my code is different from your code, isn't it?

183
00:08:56,500 --> 00:08:58,219
So the tool that they

184
00:08:58,530 --> 00:09:00,469
might be might work for

185
00:09:00,770 --> 00:09:00,780
a

186
00:09:00,960 --> 00:09:04,020
set of code but not mine like.

187
00:09:04,289 --> 00:09:05,000
So it depends,

188
00:09:05,010 --> 00:09:06,630
that's why you have to take some time

189
00:09:06,640 --> 00:09:08,919
to make sure that you're actually configuring it

190
00:09:09,059 --> 00:09:12,109
to fit your own use gift. Yeah, it, it's still the same

191
00:09:12,260 --> 00:09:12,799
case.

192
00:09:12,809 --> 00:09:16,669
Uh when you're talking about like using like open source um tools,

193
00:09:16,679 --> 00:09:21,820
you probably have a lot more uh freedom or flexibility to go in,

194
00:09:21,830 --> 00:09:23,669
in terms of bits of things.

195
00:09:24,080 --> 00:09:27,150
But if you're using something like commercial tools and in some cases,

196
00:09:27,159 --> 00:09:30,260
they have support which you would not have in open

197
00:09:30,390 --> 00:09:34,200
source tools. So if you're using like a commercial

198
00:09:34,479 --> 00:09:37,969
um source code, uh analyzing tool,

199
00:09:38,150 --> 00:09:40,929
in some cases, they work with you step by step here

200
00:09:41,380 --> 00:09:44,489
to make sure at least uh it fits your environment.

201
00:09:44,500 --> 00:09:48,929
So it's up to you just to choose which one works best for your organization

202
00:09:50,400 --> 00:09:53,049
as a tool maker. I understand this problem,

203
00:09:53,190 --> 00:09:53,820
but

204
00:09:55,049 --> 00:09:56,099
all right. All right.

205
00:09:56,109 --> 00:10:00,739
So I, I want to focus on maybe the tools a little bit because uh uh Joy Lyn,

206
00:10:00,750 --> 00:10:01,950
I've looked at

207
00:10:02,190 --> 00:10:02,700
some of you,

208
00:10:02,710 --> 00:10:04,380
I'm going to put a couple of links to some

209
00:10:04,390 --> 00:10:07,119
of the kind of presentations I've seen of you in,

210
00:10:07,130 --> 00:10:08,739
in that you've recently done.

211
00:10:09,039 --> 00:10:11,229
And I think one of the really interesting things is

212
00:10:11,239 --> 00:10:15,409
you've demoed a bunch of the technology like Microsoft and

213
00:10:15,640 --> 00:10:18,010
Azure in github have started to integrate together and

214
00:10:18,020 --> 00:10:20,450
I think this is really cool for developers and and

215
00:10:20,679 --> 00:10:24,669
why don't you give us the I guess brief tour of what that looks like.

216
00:10:24,690 --> 00:10:29,229
So in this case, like for the, it starts all the way from the developer.

217
00:10:29,260 --> 00:10:31,539
So yes, we have the S code

218
00:10:31,880 --> 00:10:35,679
and or you can use visual studio, visual studio code.

219
00:10:36,030 --> 00:10:43,200
And so from from the developer perspective, you can integrate several extensions

220
00:10:43,349 --> 00:10:46,419
from the marketplace um that will help you to

221
00:10:46,429 --> 00:10:49,500
identify security vulnerabilities as you as you develop.

222
00:10:49,510 --> 00:10:52,140
Um So at least you can be able to

223
00:10:52,859 --> 00:10:54,760
shift left and identify security,

224
00:10:54,940 --> 00:10:56,179
which is very early on.

225
00:10:56,530 --> 00:11:02,020
So this is where you can also use like code QL. So code QL is part of github

226
00:11:02,280 --> 00:11:04,119
advanced security. Um So

227
00:11:04,260 --> 00:11:04,320
github,

228
00:11:04,559 --> 00:11:07,440
but advanced security has three components. It has

229
00:11:07,619 --> 00:11:09,669
code scanning as, as well as

230
00:11:09,789 --> 00:11:13,109
secu uh secret scanning and dependency scanning.

231
00:11:13,130 --> 00:11:16,119
So code scanning, that's where we talk about code QL.

232
00:11:16,400 --> 00:11:23,080
So Q 12 is a query language and uh you can be able to build your own query queries.

233
00:11:23,090 --> 00:11:25,760
And as you can also be able to use community

234
00:11:26,039 --> 00:11:27,200
built queries.

235
00:11:27,659 --> 00:11:33,719
So if you go to the QQL repo, you can be able to download some of the community

236
00:11:33,820 --> 00:11:34,669
built queries

237
00:11:34,789 --> 00:11:38,659
and some of them actually have security query.

238
00:11:39,116 --> 00:11:41,935
So you can be able to identify if your code has close

239
00:11:42,156 --> 00:11:44,866
script. If it's, if it has um less Q

240
00:11:45,106 --> 00:11:45,606
injection,

241
00:11:45,616 --> 00:11:47,526
there are several ways that you can be able to

242
00:11:47,536 --> 00:11:51,005
just right click and run against your code base.

243
00:11:51,015 --> 00:11:55,015
Yes. So the thing with code QR, it identifies your

244
00:11:55,375 --> 00:11:55,385
A

245
00:11:55,556 --> 00:11:58,116
Q code in, in terms of database.

246
00:11:58,125 --> 00:12:01,611
So you have to convert your code into database and then

247
00:12:01,622 --> 00:12:04,692
now you can be able to run it against uh code Q

248
00:12:04,822 --> 00:12:07,721
within your ID A. But within, if you in your

249
00:12:07,942 --> 00:12:11,192
github report, it's as easy as going to the security tab

250
00:12:11,461 --> 00:12:15,611
and enabling the um code scanning and as well as secret scanning

251
00:12:15,742 --> 00:12:17,851
um and dependency scanning.

252
00:12:18,062 --> 00:12:22,372
And then you can be able to just identify this um from uh github

253
00:12:22,581 --> 00:12:23,322
itself.

254
00:12:23,619 --> 00:12:27,799
So it's uh it's all about having a better together story of

255
00:12:28,109 --> 00:12:29,349
Azure and github,

256
00:12:29,489 --> 00:12:34,330
whereby at least you can be able to incorporate and use control even from the onset

257
00:12:34,570 --> 00:12:36,229
um from your ID.

258
00:12:36,400 --> 00:12:38,559
And then by the time you're even pushing it to

259
00:12:38,940 --> 00:12:40,710
eo uh you can be able to identify a

260
00:12:40,719 --> 00:12:45,000
lot more security vulnerabilities to these three features,

261
00:12:45,090 --> 00:12:48,219
the code scanning, the secret scanning and dependency scanning,

262
00:12:48,229 --> 00:12:50,799
and the bit of uh secret scanning,

263
00:12:51,039 --> 00:12:53,700
you can be able to prevent, you can have like pre

264
00:12:53,840 --> 00:12:57,489
hooks whereby before you push your code to um to your

265
00:12:57,710 --> 00:12:57,799
gabrio,

266
00:12:58,299 --> 00:13:00,250
if it identifies security

267
00:13:00,669 --> 00:13:04,570
um security uh secrets, if it identifies secrets,

268
00:13:04,580 --> 00:13:08,479
like it can be your API keys can be your maybe hard

269
00:13:08,590 --> 00:13:11,169
coded credentials as well. So the thing with github,

270
00:13:11,340 --> 00:13:13,789
they've partnered with a lot of um

271
00:13:14,020 --> 00:13:17,280
uh authentication companies. So it is to identify

272
00:13:17,460 --> 00:13:18,080
um

273
00:13:18,590 --> 00:13:19,169
um uh

274
00:13:19,299 --> 00:13:23,539
secrets within your code. So it can even prevent you from pushing if it,

275
00:13:23,679 --> 00:13:25,770
if it identifies that within your code.

276
00:13:25,809 --> 00:13:30,590
So this is really amazing because it sort of covers an end to end dev

277
00:13:30,719 --> 00:13:30,750
se

278
00:13:30,940 --> 00:13:31,650
of story.

279
00:13:31,900 --> 00:13:34,599
And then when you, when you push it even to the cloud,

280
00:13:34,770 --> 00:13:37,400
um you have um defender for cloud,

281
00:13:37,409 --> 00:13:40,719
which gives you an overall view of um your

282
00:13:40,729 --> 00:13:44,000
security posture um your security score as well.

283
00:13:44,190 --> 00:13:45,479
And um

284
00:13:45,710 --> 00:13:49,840
one thing that was actually announced during ignite last year,

285
00:13:50,150 --> 00:13:53,159
um it features like having uh using

286
00:13:53,359 --> 00:13:55,260
github advanced security with the

287
00:13:55,440 --> 00:13:55,719
Azure devops.

288
00:13:56,609 --> 00:14:00,539
And also uh we also have um a defender for devops.

289
00:14:01,275 --> 00:14:03,515
So uh if you've not used defender for,

290
00:14:03,934 --> 00:14:08,494
just go in and try it out. So this is very good feature for, for developers because

291
00:14:08,635 --> 00:14:12,224
it covers all the way from source code analysis,

292
00:14:12,234 --> 00:14:16,335
all the way to infrastructures code using open source tools.

293
00:14:16,344 --> 00:14:18,955
Yes. So you can say Microsoft really loves

294
00:14:19,125 --> 00:14:19,315
open

295
00:14:19,445 --> 00:14:21,265
-- source. All
-- right, let me, let me ask about depend

296
00:14:21,484 --> 00:14:21,505
bot

297
00:14:21,684 --> 00:14:24,854
because you kinda, you kinda jumped over that one. And I think Depend

298
00:14:25,005 --> 00:14:25,025
bot

299
00:14:25,164 --> 00:14:29,744
is my favorite tool that github has integrated for open source projects where

300
00:14:30,280 --> 00:14:32,140
I'll, I'll just let you take it from here.

301
00:14:32,169 --> 00:14:37,400
So the thing with the depend bot it scans because yes, we are talking about offenses.

302
00:14:37,409 --> 00:14:37,780
So

303
00:14:38,049 --> 00:14:44,900
this is around 70 to 80% of the code that we actually push or build is actually third

304
00:14:45,099 --> 00:14:46,849
party or offenses

305
00:14:47,630 --> 00:14:49,770
components as well that we're using.

306
00:14:49,869 --> 00:14:53,919
So you can imagine if you're using like one vulnerable component,

307
00:14:53,929 --> 00:14:58,630
you actually like leaving one window into your whole

308
00:14:58,770 --> 00:15:01,299
code base for uh to be exploited.

309
00:15:01,669 --> 00:15:05,669
So that's why we have software composition analysis tools.

310
00:15:05,679 --> 00:15:08,349
So that's why we talk about SC A tools

311
00:15:08,559 --> 00:15:09,359
and depend

312
00:15:09,520 --> 00:15:09,559
bot

313
00:15:09,669 --> 00:15:10,979
is one of them.

314
00:15:11,140 --> 00:15:17,440
So there are several other open source SC A tools as well. If you go to the OAS site,

315
00:15:17,659 --> 00:15:21,409
you can be able to see some of the sc a tools that are available as well.

316
00:15:21,419 --> 00:15:24,200
But yes, as I said, my favorite is actually dependable

317
00:15:24,989 --> 00:15:28,530
and the thing is it will go in and um

318
00:15:28,645 --> 00:15:32,445
look for security vulnerabilities in your dependencies

319
00:15:32,664 --> 00:15:36,984
in your third party dependencies and as well as your open source components as well.

320
00:15:37,085 --> 00:15:37,825
So

321
00:15:37,994 --> 00:15:41,424
all you have to do is also just enable it within your github

322
00:15:41,594 --> 00:15:42,034
repo

323
00:15:42,195 --> 00:15:44,424
uh in your security tab and then it will be

324
00:15:44,434 --> 00:15:47,255
able to scan your code and give you security vulnerability.

325
00:15:47,265 --> 00:15:49,104
So the thing with third party

326
00:15:49,255 --> 00:15:53,065
finances is if you're using one that is outdated,

327
00:15:53,075 --> 00:15:55,414
they definitely have security vulnerabilities.

328
00:15:55,424 --> 00:15:59,989
That's where we talk about CV ES every single day, we have zero day vulnerabilities.

329
00:16:00,000 --> 00:16:03,840
And you'll see most of them actually are actually targeting like third

330
00:16:04,229 --> 00:16:06,210
party third party components, open

331
00:16:06,380 --> 00:16:08,289
source um components as well.

332
00:16:08,299 --> 00:16:12,119
That's why it's very important for us to do this bit of scanning.

333
00:16:12,130 --> 00:16:16,570
It's also important to know II I know Josh you mentioned. Um So

334
00:16:16,969 --> 00:16:20,729
you also need to know uh what components are used during your software.

335
00:16:20,739 --> 00:16:22,510
You have to know your software built of

336
00:16:22,784 --> 00:16:26,375
materials you can imagine in a company um

337
00:16:26,674 --> 00:16:30,575
you know, even a small company like mm maybe a start up,

338
00:16:30,585 --> 00:16:33,534
you find that they're actually using like thousands of dependencies.

339
00:16:33,544 --> 00:16:34,974
So how do you keep track of that?

340
00:16:35,304 --> 00:16:37,005
So you actually have to have an so,

341
00:16:37,465 --> 00:16:41,414
and then you actually know, like which component is actually vulnerable.

342
00:16:41,424 --> 00:16:42,994
You have to do some bit of auto.

343
00:16:43,094 --> 00:16:45,934
It's almost humanly impossible to do

344
00:16:46,094 --> 00:16:49,265
manual check. Like all which co which component is actually

345
00:16:49,465 --> 00:16:49,645
manual.

346
00:16:50,104 --> 00:16:50,775
Sorry,

347
00:16:51,570 --> 00:16:55,570
me and Josh actually spent a lot of time doing that at a red hat.

348
00:16:56,770 --> 00:16:58,830
How long, how long ago was that?

349
00:17:00,289 --> 00:17:01,390
Uh, you know,

350
00:17:01,619 --> 00:17:02,130
uh

351
00:17:02,830 --> 00:17:04,290
-- it was at least 10 years
-- ago

352
00:17:04,949 --> 00:17:06,989
because I wasn't guilty of that.

353
00:17:09,308 --> 00:17:11,667
Look, that's the way it worked is

354
00:17:11,928 --> 00:17:14,759
a decade ago. We didn't have any of these tools.

355
00:17:15,249 --> 00:17:19,428
And so, and, and I mean, kind of fun, fun fact for anyone listening,

356
00:17:19,588 --> 00:17:19,729
Carne

357
00:17:19,938 --> 00:17:22,328
actually discussed a whole bunch of SBO

358
00:17:22,509 --> 00:17:25,608
topics that we recorded over the weekend because because cart had

359
00:17:25,618 --> 00:17:28,708
an epiphany and that will come out the week after this where

360
00:17:29,109 --> 00:17:32,829
there is, we, we cover like what s bombs are kind of the, there's stages of

361
00:17:32,949 --> 00:17:33,439
bombs.

362
00:17:33,449 --> 00:17:33,640
I mean,

363
00:17:33,650 --> 00:17:35,069
this is one of my favorites and I don't know

364
00:17:35,079 --> 00:17:37,800
if you've touched on this yet at all in Microsoft.

365
00:17:37,810 --> 00:17:38,760
But like for example,

366
00:17:39,060 --> 00:17:42,189
when you're creating an S bomb as part of like one of your github

367
00:17:42,290 --> 00:17:45,619
workflows or something like that, that would be a source S bomb, right?

368
00:17:45,630 --> 00:17:48,290
Where you're functionally scanning the source code versus

369
00:17:48,449 --> 00:17:50,339
if I take the project and I build it

370
00:17:50,439 --> 00:17:50,949
now,

371
00:17:50,959 --> 00:17:55,500
I have a distribution artifact and generating an S bomb on that is totally valid.

372
00:17:55,510 --> 00:17:59,180
But then also if I take that thing and I put it in a container image, for example,

373
00:17:59,390 --> 00:18:02,119
now I have like a deployment s bomb and that's also

374
00:18:02,229 --> 00:18:03,060
totally different.

375
00:18:03,069 --> 00:18:06,599
And each of these things tell you something different along the, the DEV

376
00:18:06,770 --> 00:18:08,130
ops journey, which is really cool.

377
00:18:08,339 --> 00:18:08,780
Yes,

378
00:18:09,040 --> 00:18:10,640
I totally agree with you. Like s

379
00:18:10,959 --> 00:18:15,119
should be deployed in different stages of the, of the pipeline because

380
00:18:15,319 --> 00:18:18,170
you see like in the next phase that you're actually incorporating,

381
00:18:18,180 --> 00:18:21,890
you are actually adopting a lot more uh stuff, isn't it?

382
00:18:21,910 --> 00:18:25,439
So you have to know. OK, so what new complaints have I added?

383
00:18:25,589 --> 00:18:29,680
Uh So you have to know every in every stage of the, of the,

384
00:18:30,079 --> 00:18:33,280
of the pipeline as well. So I agree with you on that.

385
00:18:33,290 --> 00:18:37,819
Uh I'm not sure if you've, if you've heard of this framework, the

386
00:18:38,109 --> 00:18:44,839
um secure supply chain consumption framework. Um This S two C two F.

387
00:18:45,099 --> 00:18:47,579
Yes, that's the worst name in the world.

388
00:18:48,810 --> 00:18:55,800
It's, it's a bit word, but I think we'll, we'll get used to it F two C two F.

389
00:18:56,060 --> 00:18:56,780
So

390
00:18:57,010 --> 00:18:57,709
uh

391
00:18:57,810 --> 00:18:58,189
yeah,

392
00:18:58,410 --> 00:19:06,079
so it's working within the open SSF uh So it's all about uh supply chain integrity.

393
00:19:06,089 --> 00:19:09,959
It works to uh securely make sure that you're consuming

394
00:19:10,104 --> 00:19:16,494
open source software dependencies uh within your developer workflow um securely.

395
00:19:16,704 --> 00:19:18,015
So um

396
00:19:18,415 --> 00:19:23,964
if you have not heard of it, if you can go in and uh download um

397
00:19:24,094 --> 00:19:25,194
the S two E

398
00:19:25,875 --> 00:19:26,944
but it's a bit word.

399
00:19:27,145 --> 00:19:31,395
S two C two F specification

400
00:19:31,790 --> 00:19:36,170
uh and just go through it because it's, it's, it's a absolutely amazing.

401
00:19:36,339 --> 00:19:39,979
So, apart from uh so there's the Microsoft SBO

402
00:19:40,140 --> 00:19:40,770
as well

403
00:19:41,050 --> 00:19:43,439
that was released to it was open

404
00:19:43,569 --> 00:19:44,780
source last year,

405
00:19:44,949 --> 00:19:46,920
I think it should be like in May.

406
00:19:47,030 --> 00:19:49,300
And then now we also have this framework that

407
00:19:49,310 --> 00:19:52,520
can help you in your supply chain security journey.

408
00:19:52,530 --> 00:19:55,760
So open source software dependencies. So

409
00:19:55,880 --> 00:19:57,750
go in and check out the S two

410
00:19:57,910 --> 00:19:58,829
C two

411
00:19:59,189 --> 00:19:59,750
F.

412
00:20:00,699 --> 00:20:03,310
It's fine. I'll put a link in the show notes for anyone looking for it.

413
00:20:04,290 --> 00:20:05,189
Yes,

414
00:20:05,890 --> 00:20:13,040
there are an enormous number of tools and processes and standards and

415
00:20:13,709 --> 00:20:16,469
just options in the world of security.

416
00:20:16,739 --> 00:20:21,140
And this is kind of my question to you Joy Lyn is

417
00:20:21,459 --> 00:20:24,060
how as practitioners

418
00:20:24,319 --> 00:20:27,150
can we keep track of everything going

419
00:20:27,160 --> 00:20:30,540
on out there because it feels impossible sometimes

420
00:20:30,680 --> 00:20:33,020
to know what's happening or what I should be

421
00:20:33,030 --> 00:20:35,530
doing or what the current best practice might be.

422
00:20:36,959 --> 00:20:37,689
So

423
00:20:37,979 --> 00:20:41,170
the one what I would have is automation

424
00:20:42,099 --> 00:20:43,910
because um as I mentioned earlier,

425
00:20:43,920 --> 00:20:45,849
it's almost impossible to keep track

426
00:20:45,859 --> 00:20:48,829
like manually of everything that's happening.

427
00:20:48,890 --> 00:20:50,209
So one thing I like,

428
00:20:50,219 --> 00:20:55,040
I always have these tools deployed and then they give me notifications.

429
00:20:55,050 --> 00:20:58,040
So most of them actually it agreed to,

430
00:20:58,089 --> 00:21:01,239
they have some bit of threat intelligence as well like and they keep

431
00:21:01,630 --> 00:21:04,469
like um there's this new C VA and then it will

432
00:21:04,566 --> 00:21:09,145
notify you that this particular line of code is actually vulnerable.

433
00:21:09,156 --> 00:21:14,026
So it sends me like email notifications that so it depends also with how often you,

434
00:21:14,036 --> 00:21:14,786
you set it.

435
00:21:14,816 --> 00:21:19,615
But yes, so within also, I can say the security operation center,

436
00:21:19,625 --> 00:21:22,436
that's why it's quite important, whatever size of company.

437
00:21:22,446 --> 00:21:23,845
And you also have like a saw

438
00:21:24,095 --> 00:21:24,776
deployed,

439
00:21:25,316 --> 00:21:29,171
you need to work harder hand with the sock analysts.

440
00:21:29,381 --> 00:21:31,432
Uh whenever you're deploying an application

441
00:21:31,442 --> 00:21:33,732
to make sure that you're actually monitoring

442
00:21:33,871 --> 00:21:38,232
whatever uh use cases that are important to the company.

443
00:21:38,621 --> 00:21:42,661
And then in the event that um they actually know that at

444
00:21:42,812 --> 00:21:44,472
least the the thing with working with the

445
00:21:44,592 --> 00:21:47,052
SOC uh is that they also get to know

446
00:21:47,062 --> 00:21:49,411
all the companies that are within your application.

447
00:21:49,680 --> 00:21:53,459
So in the event that when they're doing the incident um

448
00:21:53,849 --> 00:21:54,869
analysis,

449
00:21:55,099 --> 00:21:58,180
um then, and then they identify that there is this particular

450
00:21:58,430 --> 00:22:01,089
um security vulnerability that has actually been

451
00:22:01,099 --> 00:22:03,069
released that particular day zero day,

452
00:22:03,079 --> 00:22:06,099
they now notify you to be able to

453
00:22:06,239 --> 00:22:09,449
possibly um take it offline and uh

454
00:22:09,569 --> 00:22:13,420
fix it or if you can be able to build it within

455
00:22:13,660 --> 00:22:15,400
uh maybe appeared when

456
00:22:15,650 --> 00:22:17,300
uh maybe there's less traffic.

457
00:22:17,339 --> 00:22:21,089
It depends also with you, maybe the security vulnerability is not critical.

458
00:22:21,250 --> 00:22:25,089
So it's all about also deploying safeguards or putting in

459
00:22:25,439 --> 00:22:27,079
or maybe security in depth.

460
00:22:27,300 --> 00:22:27,439
Yeah,

461
00:22:28,109 --> 00:22:30,829
one thing I'm consistently seeing is obviously,

462
00:22:31,050 --> 00:22:34,400
well, let's put it real Microsoft has more people on their security team than,

463
00:22:34,410 --> 00:22:38,099
you know, most small and medium businesses have people working for them entirely.

464
00:22:38,369 --> 00:22:41,560
And so, for example, I'm just looking at this Microsoft DNS defender stuff and

465
00:22:41,790 --> 00:22:45,260
you know, Microsoft, for example, apparently is tracking the dark web.

466
00:22:45,420 --> 00:22:48,689
And so if you enable this DNS defender

467
00:22:48,829 --> 00:22:52,530
and you make DNS requests out to a dark web server, obviously,

468
00:22:52,540 --> 00:22:54,329
that's potentially really, really bad.

469
00:22:54,859 --> 00:22:55,329
And

470
00:22:55,640 --> 00:22:59,260
like there's no way I can build that, that's, that's just impossible, you know, like

471
00:22:59,579 --> 00:23:00,459
it would take forever.

472
00:23:00,469 --> 00:23:03,869
And this is kind of the thing I'm seeing is Microsoft and you know,

473
00:23:03,880 --> 00:23:07,800
Amazon and Google are building these capabilities like antivirus vendors, right?

474
00:23:07,810 --> 00:23:10,319
I can't track all the anti, I can't track all the viruses anymore.

475
00:23:10,329 --> 00:23:12,459
I, if I want to do it, I have to pay, you know,

476
00:23:12,550 --> 00:23:15,760
antivirus company and sort of the challenge I'm having though is there's

477
00:23:15,890 --> 00:23:20,130
so much new stuff. How do I keep track of it all?

478
00:23:20,140 --> 00:23:21,770
Because I actually used to read every,

479
00:23:21,780 --> 00:23:25,010
like the weekly email from Amazon of all their service updates.

480
00:23:25,020 --> 00:23:27,410
And I stopped doing that like five years ago because it just,

481
00:23:27,420 --> 00:23:29,369
it took like two hours a week to read.

482
00:23:29,920 --> 00:23:31,329
And so I'm, I'm kind of

483
00:23:31,609 --> 00:23:31,839
like,

484
00:23:31,849 --> 00:23:34,469
does Microsoft have a program where maybe you'll kind of give me a

485
00:23:34,479 --> 00:23:36,800
basic education of what your platform capabilities

486
00:23:36,810 --> 00:23:37,969
are because I'm just looking at this

487
00:23:38,459 --> 00:23:42,599
and there's like amazing stuff in here that I had literally no idea existed at all.

488
00:23:42,689 --> 00:23:47,739
If it's for security, we also have communities. Um So under the tech community.

489
00:23:47,750 --> 00:23:51,709
Um they push up blogs and have a couple of discussions as well.

490
00:23:51,989 --> 00:23:55,569
And uh you can also join the private communities as well.

491
00:23:55,579 --> 00:24:00,290
So whenever you have like uh new features or capabilities,

492
00:24:00,300 --> 00:24:03,369
you can be among those people who help to

493
00:24:03,380 --> 00:24:06,969
even have the use cases incorporated into the product or

494
00:24:07,189 --> 00:24:08,930
uh into a new feature.

495
00:24:08,939 --> 00:24:12,199
So it's just more of plugging into the community,

496
00:24:12,209 --> 00:24:15,890
uh especially like the tech community, I'll share a link of uh

497
00:24:16,130 --> 00:24:17,969
uh the Microsoft um Security.

498
00:24:18,170 --> 00:24:21,709
It is whereby at least you're gonna be notified of what's actually happening

499
00:24:22,050 --> 00:24:23,270
every so often.

500
00:24:23,469 --> 00:24:25,020
And as well as

501
00:24:25,140 --> 00:24:26,229
attend all these

502
00:24:26,520 --> 00:24:26,719
Microsoft

503
00:24:27,020 --> 00:24:27,359
1st, 1st

504
00:24:27,510 --> 00:24:29,300
party events that we have

505
00:24:29,599 --> 00:24:34,410
um the like build, we have Microsoft secure happening in March.

506
00:24:34,420 --> 00:24:37,250
So that will be a very good platform as well.

507
00:24:37,260 --> 00:24:40,709
So not to have an overall view of what's happening within the

508
00:24:40,829 --> 00:24:42,069
Microsoft Security Space

509
00:24:42,439 --> 00:24:46,500
uh with keynotes with uh different products uh coverage as well

510
00:24:46,569 --> 00:24:51,400
and as well as Microsoft build for developer security content as well

511
00:24:51,750 --> 00:24:53,449
with ignite as well.

512
00:24:53,459 --> 00:24:56,709
So like it's good just to be notified if you can subscribe

513
00:24:56,719 --> 00:25:00,550
to the newsletters as well and the blogs within the tech communities,

514
00:25:00,579 --> 00:25:02,170
you'll be notified of all this.

515
00:25:02,180 --> 00:25:02,849
Amazing.

516
00:25:03,099 --> 00:25:05,969
I have a question though for, for cuts, how,

517
00:25:05,979 --> 00:25:10,410
how often do you do security awareness for your developers?

518
00:25:10,920 --> 00:25:13,180
OK. Maybe without breaking

519
00:25:13,520 --> 00:25:14,770
or something.

520
00:25:16,989 --> 00:25:18,949
Like we don't really a perfect example of this

521
00:25:18,959 --> 00:25:21,089
is actually about it a couple of years ago,

522
00:25:21,099 --> 00:25:23,010
the main DEV came to me and he's like, Kurt.

523
00:25:23,199 --> 00:25:27,729
So we have a Ruby on rails stack that runs our cloud security lines.org website.

524
00:25:27,979 --> 00:25:30,119
And the, and the main DEV came to me and he's like, Kurt,

525
00:25:30,400 --> 00:25:33,939
you know, like, how do we track CV S? And I'm like, well, what are you currently doing?

526
00:25:33,949 --> 00:25:35,869
He's like, well, you know, we run, I think it was the

527
00:25:36,109 --> 00:25:37,270
Auditor Bundle audit

528
00:25:37,390 --> 00:25:39,329
and it uses the Ruby Sec database and, you know,

529
00:25:39,339 --> 00:25:41,619
we're also using Brakeman and I'm like, ok, great.

530
00:25:41,630 --> 00:25:42,030
I'm like,

531
00:25:42,300 --> 00:25:44,660
and how often are we, like, updating the website?

532
00:25:44,670 --> 00:25:46,949
And he's like, you know, usually twice a week, right.

533
00:25:46,959 --> 00:25:49,339
We do an update twice, maybe three times a week.

534
00:25:49,349 --> 00:25:52,439
And I'm like, ok, if it was an emergency and we absolutely had to, like,

535
00:25:52,449 --> 00:25:54,180
fix a thing and push it out.

536
00:25:54,189 --> 00:25:56,119
How long would that take? He's like, you know, like

537
00:25:56,244 --> 00:25:57,984
a couple of hours. I'm like, ok, keep doing that.

538
00:25:58,165 --> 00:25:59,994
And he's like, what do you mean? I'm like,

539
00:26:00,484 --> 00:26:03,505
so when you update the website, are you using the most up to date components?

540
00:26:03,515 --> 00:26:06,505
He's like, generally, yeah, unless it explicitly breaks something and then we,

541
00:26:06,515 --> 00:26:08,224
you know, pin it and try and fix it,

542
00:26:08,375 --> 00:26:11,785
but we try to keep up to date on software and I'm like, cool, just keep doing that.

543
00:26:11,795 --> 00:26:16,415
So, like, I'm lucky in that my devs we basically just run current software

544
00:26:16,545 --> 00:26:17,234
now

545
00:26:17,395 --> 00:26:22,005
having said that the, the vast majority of people don't have that reality.

546
00:26:22,359 --> 00:26:25,050
And I think that's where things get tricky is where, you know, like,

547
00:26:25,060 --> 00:26:26,109
well having worked at Red Hat.

548
00:26:26,119 --> 00:26:26,239
Right.

549
00:26:26,250 --> 00:26:30,060
And back porting security fixes for 13 years into some poor little version of Linux.

550
00:26:30,170 --> 00:26:32,500
I think the problem with security awareness is kind of

551
00:26:32,510 --> 00:26:35,520
like the problem with the technology is that it's so

552
00:26:35,760 --> 00:26:37,819
situation specific.

553
00:26:38,260 --> 00:26:41,939
You know, we have a service where we control it all.

554
00:26:41,949 --> 00:26:45,300
If we have a bad push, we can revert it and fix it.

555
00:26:45,310 --> 00:26:49,020
Whereas, you know, if I'm an IOT maker and I have a bad push

556
00:26:49,209 --> 00:26:51,140
and I brick 10% of the light bulbs.

557
00:26:51,449 --> 00:26:53,260
Now we have a lawsuit situation,

558
00:26:53,530 --> 00:26:53,989
you know,

559
00:26:54,329 --> 00:26:57,000
and I think that's part of the problem is there's,

560
00:26:57,449 --> 00:27:00,890
and I've never seen sort of good templates or decision flows for this, but

561
00:27:01,589 --> 00:27:04,719
there are vastly different kinds of software like IOT versus a

562
00:27:04,839 --> 00:27:09,219
public facing website that doesn't, you know, even do commerce transactions,

563
00:27:09,229 --> 00:27:11,630
you know, versus one that does do ecommerce transactions

564
00:27:12,329 --> 00:27:12,770
there.

565
00:27:12,780 --> 00:27:12,790
I,

566
00:27:12,800 --> 00:27:14,849
I think fundamentally they're so different with

567
00:27:14,859 --> 00:27:16,430
their risk profiles and what they do

568
00:27:17,040 --> 00:27:20,310
that. Yeah, there's no one size fits all, but also there's

569
00:27:20,530 --> 00:27:23,469
not a ton of good guidance. And, and ironically actually, we have a dev

570
00:27:23,770 --> 00:27:27,209
ops working group currently at the CS A that's just in the process of, you know,

571
00:27:27,219 --> 00:27:28,729
making a bunch of new guidance for this.

572
00:27:29,380 --> 00:27:31,300
And I think that's part of the challenge is that it's

573
00:27:31,670 --> 00:27:35,170
the technology got ahead of the process, right? Because let's be real,

574
00:27:35,579 --> 00:27:37,550
the technology we have like,

575
00:27:37,719 --> 00:27:38,800
I can literally

576
00:27:39,209 --> 00:27:39,869
turn on a

577
00:27:40,000 --> 00:27:44,520
github repo push a bunch of code into it and like with an average of like 3 to 5 clicks,

578
00:27:44,530 --> 00:27:48,280
hook it up to Digital Ocean or Microsoft Azure or Cloud flare

579
00:27:48,579 --> 00:27:52,699
uh workers or pages or whatever. And just like poof have a working website

580
00:27:53,729 --> 00:27:57,400
in like literally 3 to 5 clicks with, you know, very little hassle.

581
00:27:57,790 --> 00:27:58,400
And

582
00:27:58,550 --> 00:27:58,560
I,

583
00:27:58,579 --> 00:28:02,810
I think that's part of the challenge is the technology ran way ahead of the process.

584
00:28:03,640 --> 00:28:04,680
And that's where,

585
00:28:04,780 --> 00:28:07,619
that's why one thing I like to see is Microsoft's always about integrating things.

586
00:28:07,630 --> 00:28:08,020
So

587
00:28:08,560 --> 00:28:09,560
I'm hoping

588
00:28:10,109 --> 00:28:13,020
that the process will catch up with the technology eventually.

589
00:28:13,030 --> 00:28:13,199
But I,

590
00:28:13,209 --> 00:28:14,939
I think it might start to lag behind

591
00:28:14,949 --> 00:28:16,800
just because technology is moving so much faster.

592
00:28:16,869 --> 00:28:21,599
And also uh I think part of the process as well, especially like in the devops

593
00:28:21,709 --> 00:28:22,900
process, like

594
00:28:23,270 --> 00:28:26,069
we are adopting too much tooling.

595
00:28:26,349 --> 00:28:29,660
So we have too much noise as well. So you don't know

596
00:28:30,010 --> 00:28:31,150
uh what is that tuning

597
00:28:31,619 --> 00:28:31,719
they

598
00:28:31,859 --> 00:28:32,030
take

599
00:28:32,920 --> 00:28:37,109
and what is not. So you might end up missing something important.

600
00:28:37,449 --> 00:28:42,229
So that's why it's very important to really pay attention on

601
00:28:42,239 --> 00:28:46,099
the process based as well because uh as I mentioned earlier,

602
00:28:46,109 --> 00:28:48,229
people are focusing a lot on the

603
00:28:48,459 --> 00:28:52,150
tooling. That's why we're having too much noise. So you have to just say, OK,

604
00:28:52,270 --> 00:28:57,949
so this ones meet my needs. Um This is what actually works for me and yeah, work it out.

605
00:28:57,959 --> 00:28:58,750
As you said,

606
00:28:58,760 --> 00:29:02,430
what actually how can you be able to identify all this

607
00:29:02,439 --> 00:29:05,555
um CV S or keep up to date with all this?

608
00:29:05,564 --> 00:29:10,724
It's also by reducing the noise just having the few tools that work for you.

609
00:29:10,994 --> 00:29:11,584
Yes.

610
00:29:11,694 --> 00:29:14,785
-- And
-- that's definitely a big challenge because like I find a lot of the,

611
00:29:14,795 --> 00:29:17,785
the feedback loops as to it, Like we know this is noise,

612
00:29:18,185 --> 00:29:21,515
but we also know that there's like one in 100 gems in that noise that

613
00:29:21,525 --> 00:29:25,175
we do need to pay attention to and sorting those out and figuring out.

614
00:29:25,185 --> 00:29:27,425
Which is which. Yeah, that's, that's a challenge.

615
00:29:27,555 --> 00:29:31,214
It's, it's always a growth thing. Yeah, I have a growth mindset.

616
00:29:31,224 --> 00:29:32,744
Like what did we learn and

617
00:29:33,040 --> 00:29:34,949
just learn from the journey as well?

618
00:29:35,339 --> 00:29:38,630
Yes, absolutely. I love, I love that advice. All right.

619
00:29:38,640 --> 00:29:40,020
And, and kind of one last thing then.

620
00:29:40,030 --> 00:29:44,050
So Joy Lynn, you have an event coming up is your open source day.

621
00:29:44,060 --> 00:29:47,939
-- Why don't you tell us about that?
-- Yes. And as well, we have the

622
00:29:48,089 --> 00:29:49,420
Azure opens so day

623
00:29:50,260 --> 00:29:53,290
happening on the March

624
00:29:53,439 --> 00:29:54,930
March 7th.

625
00:29:54,939 --> 00:29:58,770
Don't miss this as uh at all because it will be,

626
00:29:58,780 --> 00:30:02,040
it will be a free digital event covering

627
00:30:02,180 --> 00:30:06,050
um various um open source uh best practices

628
00:30:06,060 --> 00:30:08,969
as well as new capabilities that are available

629
00:30:08,979 --> 00:30:12,410
and how you can be able to protect your data and business assets as well.

630
00:30:12,550 --> 00:30:13,319
So go

631
00:30:13,505 --> 00:30:15,484
in and register for the

632
00:30:15,675 --> 00:30:19,844
-- Azure Open Source Day. We'll share the link as well.
-- So I'm going to call this one.

633
00:30:19,854 --> 00:30:21,834
Thank you so much joy. It has been

634
00:30:22,045 --> 00:30:25,114
an absolute treat having you on this show.

635
00:30:25,194 --> 00:30:27,064
Thank you so much for having me, Josh and cut.

636
00:30:27,375 --> 00:30:32,594
I really enjoyed myself and I hope the viewers also learned a thing or two about

637
00:30:32,724 --> 00:30:33,994
open social security.

638
00:30:34,125 --> 00:30:36,555
Fantastic. I have no doubt. I have no doubt. Ok,

639
00:30:36,819 --> 00:30:38,050
so you can go to open

640
00:30:38,180 --> 00:30:39,560
source security podcast.com.

641
00:30:39,569 --> 00:30:42,280
Find all of the show notes we talked about today UI Pandos

642
00:30:42,540 --> 00:30:44,839
podcast. Hashtag Hit us up on social media

643
00:30:44,939 --> 00:30:47,880
curtain Joy Lynn. Have a marvelous rest of your days.

644
00:30:48,660 --> 00:30:49,780
You too. Bye.

645
00:30:50,390 --> 00:30:51,239
-- Thanks
-- everybody.

646
00:30:51,699 --> 00:30:53,380
Thanks everyone. Bye bye.