0
00:00:05,360 --> 00:00:08,680
Hello and welcome to the open source security podcast with myself,

1
00:00:08,689 --> 00:00:10,739
Kurt Siefried and my partner in crime, Josh

2
00:00:11,090 --> 00:00:11,380
Reser.

3
00:00:13,689 --> 00:00:17,290
All right. Uh No one knows this because again, the pre roll is secret.

4
00:00:17,299 --> 00:00:19,610
But um we have a guest today uh and we,

5
00:00:19,620 --> 00:00:22,909
we spent in a surprising amount of time talking about microphones,

6
00:00:22,920 --> 00:00:23,909
which is always amusing to me.

7
00:00:23,920 --> 00:00:24,489
But anyway,

8
00:00:24,700 --> 00:00:25,209
so

9
00:00:25,420 --> 00:00:30,170
today we're joined by Dustin Childs who is a communications manager for ZD.

10
00:00:30,180 --> 00:00:30,870
I and their chief

11
00:00:31,280 --> 00:00:31,629
paler

12
00:00:31,739 --> 00:00:33,799
and I'm really excited to have Justin here because Kurt sent

13
00:00:33,810 --> 00:00:37,689
me a story about some research ZD I just talked about

14
00:00:37,919 --> 00:00:39,380
and the first thing I said was, well,

15
00:00:39,389 --> 00:00:41,540
why don't we try to find someone competent to talk to us

16
00:00:41,549 --> 00:00:43,779
about this instead of us just kind of making crap up?

17
00:00:43,790 --> 00:00:46,639
And so Dustin is here. Thank you so much, Dustin. We're super excited.

18
00:00:46,830 --> 00:00:47,869
-- Uh
-- Well, thanks for having me.

19
00:00:47,880 --> 00:00:51,549
I'm happy to be here and, and for those wondering, I'm unsure SM seven B,

20
00:00:51,669 --> 00:00:53,520
which is also the same mic that he used to record.

21
00:00:53,529 --> 00:00:57,060
Thriller, which is I think that was the deciding factor when I bought the mic.

22
00:00:57,450 --> 00:00:59,389
That, that's epic. That is amazing.

23
00:00:59,659 --> 00:01:00,340
I didn't know that.

24
00:01:01,049 --> 00:01:02,549
Wow, that's even cooler now.

25
00:01:04,779 --> 00:01:07,099
No, I'm not. We are not doing this. Ok. So

26
00:01:07,480 --> 00:01:09,970
this is a security podcast. Why don't you?

27
00:01:10,339 --> 00:01:14,800
Oh, my goodness. Who are you? What is ZD? I? And why are you here?

28
00:01:14,809 --> 00:01:16,440
Let's just start with the simple ones.

29
00:01:16,669 --> 00:01:21,000
So ZD, I is a zero day initiative and we are the world's largest vendor

30
00:01:21,110 --> 00:01:22,430
agnostic bug body program.

31
00:01:22,680 --> 00:01:24,620
And that means we buy bugs from researchers

32
00:01:24,629 --> 00:01:27,349
around the world in various types of products.

33
00:01:27,519 --> 00:01:31,750
So whether it be Microsoft or Adobe or Apple or Google or whatever,

34
00:01:31,760 --> 00:01:33,239
including open source products too,

35
00:01:33,250 --> 00:01:35,599
we do buy open source bugs and so we buy a

36
00:01:35,610 --> 00:01:38,669
whole lot of them as we are the world's largest one.

37
00:01:38,680 --> 00:01:41,220
We've disclosed more than 10,000 vulnerabilities in

38
00:01:41,230 --> 00:01:44,059
the lifetime of our program since 2005.

39
00:01:44,599 --> 00:01:48,379
And over the last few years, we've noticed kind of a disturbing trend which is a

40
00:01:48,559 --> 00:01:52,779
decrease in quality of security updates and a decrease in the

41
00:01:52,889 --> 00:01:55,180
clarity of communications around those updates.

42
00:01:55,190 --> 00:01:58,279
So that's what we went to uh Black Hat to talk about and offered a

43
00:01:58,290 --> 00:02:02,860
lot of examples and uh also had a few incentives that we hope to use

44
00:02:03,044 --> 00:02:04,875
to get vendors to get it right the first time.

45
00:02:04,885 --> 00:02:07,915
And a few guides for enterprises to at least understand

46
00:02:07,925 --> 00:02:10,794
how poor patch quality is really affecting their risk assessment.

47
00:02:11,134 --> 00:02:11,634
OK.

48
00:02:11,764 --> 00:02:13,774
That's a lot to unpack

49
00:02:14,044 --> 00:02:16,634
one quick question and I don't want you to fully answer it right

50
00:02:16,645 --> 00:02:19,264
now but is closed source doing a worse job than open source.

51
00:02:19,274 --> 00:02:21,235
Are they both degrading?

52
00:02:21,580 --> 00:02:23,089
I, I would say they're both degrading

53
00:02:23,419 --> 00:02:24,619
now with closed source.

54
00:02:24,630 --> 00:02:26,309
It's a little bit easier for us to track just

55
00:02:26,320 --> 00:02:28,149
because we buy more close source bugs than we do.

56
00:02:28,160 --> 00:02:28,820
Open source.

57
00:02:28,830 --> 00:02:30,619
Open source is something we're definitely trying to

58
00:02:30,630 --> 00:02:32,240
expand in over the last couple of years.

59
00:02:32,250 --> 00:02:33,919
So we just have a smaller data set there.

60
00:02:33,929 --> 00:02:37,550
But it is a problem we see across the board and including open source. OK?

61
00:02:37,559 --> 00:02:39,830
I think we just put the cart before the horse, which is

62
00:02:40,080 --> 00:02:40,800
totally normal.

63
00:02:41,449 --> 00:02:44,679
So Dustin explain to us the research that was

64
00:02:44,690 --> 00:02:47,660
presented because I think once we understand that context,

65
00:02:47,669 --> 00:02:50,360
the question, Kurt just asked will probably make a lot more sense.

66
00:02:51,000 --> 00:02:51,360
OK.

67
00:02:51,369 --> 00:02:54,179
So what we presented was we just looked at uh first we,

68
00:02:54,190 --> 00:02:55,940
we kind of described the the quality of the

69
00:02:55,949 --> 00:03:00,020
communications on the problem uh about communicating around patches and

70
00:03:00,520 --> 00:03:03,970
uh enterprises have to look at these communications to judge risk

71
00:03:04,139 --> 00:03:07,720
and patches come out. I mean, there was just a patch for Google Chrome yesterday

72
00:03:08,000 --> 00:03:08,779
right now,

73
00:03:08,830 --> 00:03:12,779
enterprises are judging risk because rolling out patches cost money to them.

74
00:03:13,289 --> 00:03:17,580
Uh So how fast do they need to roll out this new patch? Is it something they need to

75
00:03:17,860 --> 00:03:21,119
engage emergency resources for what the standard procedures do?

76
00:03:21,130 --> 00:03:23,279
Uh What, what else do they need to engage?

77
00:03:23,559 --> 00:03:28,990
Because a lot of vendors don't understand that defenses go way beyond just patches.

78
00:03:29,300 --> 00:03:32,080
I mean, patches are just one part of an overall defense.

79
00:03:32,179 --> 00:03:34,660
So if you're getting bad patch information,

80
00:03:34,669 --> 00:03:36,960
you might not be using your defenses appropriately.

81
00:03:36,970 --> 00:03:38,720
So that's the first part of our program.

82
00:03:38,729 --> 00:03:42,389
Uh The second part was looking at uh problems in the patches themselves.

83
00:03:42,869 --> 00:03:45,199
So the first ones we described were placebo patches,

84
00:03:45,210 --> 00:03:47,240
which is patches that actually do nothing.

85
00:03:47,800 --> 00:03:52,949
-- Either they have no C code changes at all or they have no effective code changes,
-- no co

86
00:03:53,070 --> 00:03:54,110
changes at all.

87
00:03:54,610 --> 00:03:55,190
That's correct.

88
00:03:55,419 --> 00:03:58,429
-- So the binaries have the same hash or
-- yes,

89
00:03:58,899 --> 00:03:59,809
exactly, same,

90
00:03:59,949 --> 00:04:03,160
-- same hash that they released as an update.
-- Hold on, hold on, hold on.

91
00:04:03,190 --> 00:04:04,559
I've never heard of this before.

92
00:04:04,570 --> 00:04:06,960
So you're saying vendors release,

93
00:04:06,970 --> 00:04:10,199
we'll put security patches and making air quotes which no one can see but us.

94
00:04:10,210 --> 00:04:13,789
So vendors create security patches. They release an advisory

95
00:04:13,940 --> 00:04:16,880
and there's literally nothing different in the binary.

96
00:04:16,890 --> 00:04:18,010
-- There's literally nothing different
-- than

97
00:04:18,420 --> 00:04:18,730
like,

98
00:04:19,488 --> 00:04:22,070
did they just mess up and ship the same thing or

99
00:04:22,269 --> 00:04:25,609
-- that's our assumption? Did they at
-- least try to lie convincingly about it?

100
00:04:26,480 --> 00:04:26,489
Uh

101
00:04:26,589 --> 00:04:29,670
Well, the advisory looks nice, I suppose. I don't know.

102
00:04:29,679 --> 00:04:31,989
Uh I don't want to put any intent behind any vendors,

103
00:04:32,000 --> 00:04:33,279
but we've seen it with multiple vendors.

104
00:04:33,290 --> 00:04:34,489
It's happened multiple times

105
00:04:34,630 --> 00:04:37,179
with multiple vendors. Thankfully, it is somewhat rare,

106
00:04:37,589 --> 00:04:42,420
but yeah, we do see it uh where uh they ship absolutely no code changes whatsoever.

107
00:04:42,450 --> 00:04:45,140
-- I just, I don't know what to say to that. We assume
-- it's just a mistake.

108
00:04:45,149 --> 00:04:47,429
We assume it's really bad. Q A that somebody

109
00:04:47,600 --> 00:04:51,459
just checked a box that said, I checked it and they didn't really, but it, it,

110
00:04:51,470 --> 00:04:52,250
it happens.

111
00:04:52,390 --> 00:04:55,380
What's more common is they ship fix, they do make code changes

112
00:04:55,700 --> 00:04:58,040
but it doesn't actually fix the reported bug.

113
00:04:58,049 --> 00:05:00,390
So the bug is still reachable and exploitable

114
00:05:00,510 --> 00:05:01,440
to thread actors.

115
00:05:01,950 --> 00:05:02,019
Yeah.

116
00:05:02,859 --> 00:05:03,290
Yeah,

117
00:05:03,880 --> 00:05:05,440
I know you've experienced this. Yeah,

118
00:05:05,769 --> 00:05:07,760
me and Josh have far too many stories about that.

119
00:05:07,809 --> 00:05:09,470
That's what we're here to talk about today, right?

120
00:05:09,480 --> 00:05:12,410
Is literally that exact data point because

121
00:05:12,739 --> 00:05:16,559
I read the story about what ZD I reported and I thought,

122
00:05:16,959 --> 00:05:21,140
I mean, Kurt and I have seen that we've been part of broken patches where it's,

123
00:05:21,149 --> 00:05:22,350
it's not on purpose.

124
00:05:22,359 --> 00:05:22,859
It's just,

125
00:05:23,190 --> 00:05:25,269
it's not uncommon that you send a developer

126
00:05:25,279 --> 00:05:27,899
reproducer and they fix that one particular corner

127
00:05:27,910 --> 00:05:32,739
case and there's 20 others next to it that were ignored or not noticed or whatever.

128
00:05:32,750 --> 00:05:34,420
-- And there's a million reasons for that,
-- right?

129
00:05:34,540 --> 00:05:34,839
-- Well,
-- or

130
00:05:34,850 --> 00:05:36,260
even simpler, like we had a,

131
00:05:36,269 --> 00:05:39,779
a customer report 600 cross site scripting vulnerabilities in a product.

132
00:05:39,790 --> 00:05:40,059
And

133
00:05:40,329 --> 00:05:42,359
the des are like, oh, it's this one class

134
00:05:42,630 --> 00:05:45,109
and they fix the one class and they all went away. But

135
00:05:45,510 --> 00:05:46,079
I mean,

136
00:05:47,059 --> 00:05:49,279
well, in the reverse of that anyway. OK.

137
00:05:49,480 --> 00:05:55,010
OK. So, so Dustin here's where I, I value your input and, and this is where

138
00:05:55,260 --> 00:05:58,850
our conversation without, you would have started going off the rails is

139
00:05:59,290 --> 00:06:01,320
why do we think this is happening?

140
00:06:01,329 --> 00:06:03,640
Do you have any data to back up the

141
00:06:03,649 --> 00:06:07,519
pattern you're seeing of more vendors doing this more often

142
00:06:07,760 --> 00:06:09,130
today than they were

143
00:06:09,429 --> 00:06:10,619
at some point in the past?

144
00:06:10,640 --> 00:06:11,000
-- Uh
-- Well,

145
00:06:11,010 --> 00:06:15,149
there are a few reasons that we look at and that we kind of think why this is happening.

146
00:06:15,160 --> 00:06:15,489
Um

147
00:06:15,709 --> 00:06:19,980
The first is just a shift from sustained engineering towards development.

148
00:06:20,329 --> 00:06:24,619
Once a product is released, no one wants to care and feed for it anymore.

149
00:06:24,790 --> 00:06:27,579
Like everybody wants the puppy, nobody wants to take care of the puppy.

150
00:06:27,799 --> 00:06:29,480
And that's kind of the way I look at it

151
00:06:29,589 --> 00:06:32,790
so that the resources just aren't there for a lot of organizations,

152
00:06:32,799 --> 00:06:34,540
especially smaller organizations

153
00:06:34,790 --> 00:06:37,269
that they're just not set up for sustained engineering,

154
00:06:37,279 --> 00:06:38,929
they're not set up for support.

155
00:06:38,940 --> 00:06:41,489
They don't have a robust response process

156
00:06:41,829 --> 00:06:45,570
to be able to deal with bugs. And we see this especially when they try to

157
00:06:45,850 --> 00:06:50,049
like set up a bug bounty program and just aren't ready to receive the amount of bugs.

158
00:06:50,100 --> 00:06:53,829
Researchers have a lot of different motivations, but it turns out cash is a big one.

159
00:06:53,839 --> 00:06:55,079
Weird. I know,

160
00:06:55,290 --> 00:06:57,049
but they're just not ready to receive the bugs.

161
00:06:57,059 --> 00:06:59,570
So they start getting these bugs and they just can't handle them.

162
00:06:59,700 --> 00:07:00,399
Uh, and they,

163
00:07:00,540 --> 00:07:02,369
they don't fix them properly.

164
00:07:02,880 --> 00:07:05,019
Another big thing that we've seen is just the

165
00:07:05,029 --> 00:07:08,320
shift away from Q A and testing organizations,

166
00:07:08,329 --> 00:07:10,940
people aren't really investing in testers anymore.

167
00:07:10,950 --> 00:07:14,380
And, and I don't know if it started with Microsoft and Sasha Nadala.

168
00:07:14,570 --> 00:07:18,910
When he came in, he eliminated a lot of the test positions. A lot of the Q A positions.

169
00:07:19,200 --> 00:07:22,230
He used to be a holy trinity at Microsoft DEV test PM.

170
00:07:22,390 --> 00:07:23,929
And he just essentially took test out of the

171
00:07:23,940 --> 00:07:25,700
equation and said DEV can do all the testing.

172
00:07:25,709 --> 00:07:29,619
Why do we need a separate org for this? And a lot of people agreed with him and, and

173
00:07:30,070 --> 00:07:32,649
moved away from having a separate test organization.

174
00:07:32,739 --> 00:07:35,970
We're seeing a skills gap now and whether that's a cause or the effect of the

175
00:07:35,980 --> 00:07:38,510
skills gap that having a that person who

176
00:07:38,519 --> 00:07:40,839
really understands the security issue at hand,

177
00:07:40,899 --> 00:07:42,910
you talked about like, oh, it's just one class.

178
00:07:42,920 --> 00:07:44,200
Let me take care of that.

179
00:07:44,470 --> 00:07:46,970
That's kind of a gap in understanding the security problem.

180
00:07:46,980 --> 00:07:49,010
So not only do you need someone who can test the

181
00:07:49,250 --> 00:07:50,970
uh the product that you have,

182
00:07:50,980 --> 00:07:53,769
but they need to understand the security problem that was reported,

183
00:07:54,040 --> 00:07:56,600
those people are fewer and fewer these days.

184
00:07:56,609 --> 00:07:58,609
Uh and they tend to be more and more expensive.

185
00:07:58,619 --> 00:08:00,339
So businesses are shying away from them.

186
00:08:00,570 --> 00:08:03,299
They're putting more on the developers themselves to handle the testing.

187
00:08:03,309 --> 00:08:06,739
And it turns out maybe that automation, maybe that reduction

188
00:08:06,869 --> 00:08:09,899
uh in personnel is not working the way they wanted it to.

189
00:08:10,019 --> 00:08:11,660
So just one quick comment, I

190
00:08:11,959 --> 00:08:13,690
in line with your skills gap comment.

191
00:08:13,700 --> 00:08:17,019
One thing I've noticed is I almost want to call it a culture gap.

192
00:08:17,390 --> 00:08:21,040
So we're all old enough that we've managed production systems and

193
00:08:21,049 --> 00:08:22,700
been called at three in the morning to fix them.

194
00:08:23,600 --> 00:08:25,829
And what I'm noticing is the majority of devs

195
00:08:26,200 --> 00:08:29,679
in the modern world have not like they go to school and they go into a Dev position

196
00:08:30,010 --> 00:08:33,690
and I've, I've literally spoken with Devs whose response to this is, oh,

197
00:08:33,700 --> 00:08:35,289
if it breaks somebody, we'll complain and we'll fix it.

198
00:08:35,299 --> 00:08:36,308
And I'm like, well, why don't we

199
00:08:36,539 --> 00:08:36,969
make it?

200
00:08:36,979 --> 00:08:38,719
So it doesn't break and have like end to

201
00:08:38,729 --> 00:08:40,729
end testing and have like telemetry in the code.

202
00:08:40,739 --> 00:08:41,169
And they're like,

203
00:08:41,960 --> 00:08:45,219
but that would take work and I'm like, yes, yes, it absolutely would take work.

204
00:08:45,229 --> 00:08:47,659
But then the system won't just fail randomly. And they're like,

205
00:08:48,090 --> 00:08:49,460
but it almost never fails. And I'm like,

206
00:08:50,200 --> 00:08:52,840
oh, well, you're not wrong because the, yeah, like,

207
00:08:53,000 --> 00:08:55,820
you know, it's like I use cloud fla and when cloud floor goes down,

208
00:08:55,830 --> 00:08:58,099
I go and I read a book because what else am I gonna do?

209
00:08:58,559 --> 00:08:58,719
What

210
00:08:58,820 --> 00:08:59,159
are you needing?

211
00:08:59,289 --> 00:09:00,380
You know, like all these people are like, oh,

212
00:09:00,390 --> 00:09:03,049
we have a plan to shift off cloud fflur in five minutes and blah, blah, blah.

213
00:09:03,059 --> 00:09:03,549
And I'm like,

214
00:09:03,900 --> 00:09:06,450
it happens maybe once a year for 30 minutes. I can live with it.

215
00:09:06,909 --> 00:09:08,229
You know, we're not Amazon

216
00:09:08,559 --> 00:09:09,250
and um

217
00:09:09,809 --> 00:09:11,179
and I can't help but think that

218
00:09:11,349 --> 00:09:16,989
the skills gap is the symptom that, but that the real thing is this culture gap of,

219
00:09:17,299 --> 00:09:17,760
like,

220
00:09:17,929 --> 00:09:19,150
I, I don't want to call them kids,

221
00:09:19,159 --> 00:09:22,270
but basically everybody under 30 has grown up with networks that just work,

222
00:09:22,500 --> 00:09:24,270
like getting on the internet is easy.

223
00:09:24,280 --> 00:09:28,179
Yeah, I mean, I started my career in the late nineties in the Air Force and, and just

224
00:09:28,429 --> 00:09:29,900
that culture of response,

225
00:09:29,909 --> 00:09:32,690
that culture of things are going to break at two o'clock in the morning,

226
00:09:32,700 --> 00:09:34,789
they never break at, you know, one o'clock in the afternoon,

227
00:09:35,010 --> 00:09:39,030
they only break on five at five pm on Fridays and like in the middle of the night,

228
00:09:39,039 --> 00:09:40,190
that's the only time things break.

229
00:09:40,590 --> 00:09:40,669
Yeah,

230
00:09:40,809 --> 00:09:43,630
you get that response mentality and you understand the

231
00:09:43,640 --> 00:09:46,780
investment upfront is gonna save you in the end.

232
00:09:46,789 --> 00:09:49,950
You know, that investment in testing and design and architecting and,

233
00:09:50,239 --> 00:09:52,580
and yeah, that's expensive and yeah, that's the boring part.

234
00:09:52,590 --> 00:09:54,869
And yeah, we just want to put it on production and see it run.

235
00:09:55,400 --> 00:09:55,969
But

236
00:09:56,119 --> 00:10:00,309
trust me, if you know, if, if five hours of test in the middle of the day will,

237
00:10:00,320 --> 00:10:02,630
will save me a 30 minute phone call in the middle of the night,

238
00:10:02,929 --> 00:10:04,460
I'm willing to make that investment.

239
00:10:04,679 --> 00:10:06,489
And I think a lot of people right now,

240
00:10:07,000 --> 00:10:10,679
yeah, I am but a lot of other people I don't see that return on investment.

241
00:10:10,690 --> 00:10:11,390
They don't see,

242
00:10:11,640 --> 00:10:13,849
they don't see. Well, that's five hours for 30 minutes.

243
00:10:13,859 --> 00:10:15,299
Why should I spend the five hours here?

244
00:10:15,340 --> 00:10:15,549
Well,

245
00:10:15,559 --> 00:10:18,150
and I think on the flip side too is we grew up

246
00:10:18,159 --> 00:10:22,309
in an era where like building and deploying software was incredibly expensive.

247
00:10:22,320 --> 00:10:23,590
Like there was not

248
00:10:23,710 --> 00:10:26,289
the level of automation for anything basically,

249
00:10:26,409 --> 00:10:29,840
like having a make file was considered the gold standard

250
00:10:29,950 --> 00:10:30,799
straight up. Right.

251
00:10:31,340 --> 00:10:31,969
And um

252
00:10:32,070 --> 00:10:35,729
and I, and I can't help but think in some ways they're not entirely wrong because

253
00:10:36,349 --> 00:10:39,130
my dads can push out an emergency patch in like 2030 minutes.

254
00:10:39,520 --> 00:10:41,440
Like they basically just do some stuff in github,

255
00:10:41,580 --> 00:10:44,849
hit a button and, and wait five minutes. Well, it's about seven minutes. I think

256
00:10:45,770 --> 00:10:48,549
so. Yeah, deployment is much faster these days than what it was.

257
00:10:49,219 --> 00:10:49,750
I want to relis

258
00:10:50,059 --> 00:10:53,919
a little bit back to the topic. So we, we just mentioned deployment

259
00:10:54,090 --> 00:10:57,830
versus product. Now, is your data focused on

260
00:10:57,950 --> 00:11:00,859
all bugs because obviously a bug bony can cover

261
00:11:00,989 --> 00:11:04,580
a service, it can cover a product, it whatever, right? It doesn't matter.

262
00:11:04,590 --> 00:11:04,739
So,

263
00:11:04,750 --> 00:11:07,174
is your data focused on products like that are

264
00:11:07,184 --> 00:11:10,734
deployed specifically or does it also encompass services?

265
00:11:10,965 --> 00:11:15,025
We don't typically buy bugs and services. So it's really focusing on products.

266
00:11:15,255 --> 00:11:17,734
Most of our data is based on the bugs that we're purchasing.

267
00:11:17,744 --> 00:11:21,315
And again, we purchased a whole lot, we, we'll purchase about 1700 this year,

268
00:11:21,594 --> 00:11:23,994
but it's also based on third party reports as

269
00:11:24,005 --> 00:11:25,864
well because we're not the only one seeing this

270
00:11:26,315 --> 00:11:27,275
Google project zero.

271
00:11:27,284 --> 00:11:29,554
Is reporting this, there are other research teams that are reporting this.

272
00:11:29,565 --> 00:11:31,234
Obviously you've seen busted patches.

273
00:11:31,840 --> 00:11:32,299
So, uh,

274
00:11:32,409 --> 00:11:32,919
fi

275
00:11:33,190 --> 00:11:34,239
busted patches. You,

276
00:11:34,690 --> 00:11:38,559
-- it, yeah, same here.
-- Like shell shock. Anybody. Like what, five CV S later.

277
00:11:39,280 --> 00:11:39,909
Exactly.

278
00:11:40,580 --> 00:11:41,020
Yeah,

279
00:11:41,590 --> 00:11:43,960
that's a story. But that's for another day.

280
00:11:44,710 --> 00:11:46,330
Ok. That's interesting that

281
00:11:47,109 --> 00:11:48,650
I, I'm not shocked by that, I guess.

282
00:11:48,659 --> 00:11:52,039
And then the other thing that I, I did want to bring up is there's just human error.

283
00:11:52,359 --> 00:11:55,570
I mean, like with the patches that, that have zero bits changed,

284
00:11:55,750 --> 00:11:58,150
I, I can only assume that's just human error.

285
00:11:58,260 --> 00:12:01,570
And as long as patches are created by humans, they're gonna be mistakes.

286
00:12:01,580 --> 00:12:04,010
So I don't think we'll ever see perfect patches.

287
00:12:04,419 --> 00:12:08,489
But, uh, we certainly hope that we see fewer busted patches than we're seeing now.

288
00:12:08,760 --> 00:12:09,099
Well.

289
00:12:09,109 --> 00:12:14,099
And, and so my, when, when I read this story about your research being published,

290
00:12:14,109 --> 00:12:16,719
my first thought wasn't malice of any sort.

291
00:12:16,729 --> 00:12:17,619
Just rather

292
00:12:17,849 --> 00:12:20,780
this is pretty typical human behavior

293
00:12:21,200 --> 00:12:21,900
where

294
00:12:22,070 --> 00:12:22,859
there is

295
00:12:23,049 --> 00:12:26,419
the, the problem isn't people trying not to patch there is either,

296
00:12:26,710 --> 00:12:29,239
you know, they're not given enough time to create a proper patch.

297
00:12:29,250 --> 00:12:33,500
They don't understand the, the root cause of the problems or, you know,

298
00:12:33,510 --> 00:12:34,580
it's something else.

299
00:12:34,590 --> 00:12:35,260
I, I think

300
00:12:35,590 --> 00:12:40,340
I don't want to accuse any company of being like, no, only half fix this problem.

301
00:12:40,349 --> 00:12:42,890
-- Like, don't fix it all the way,
-- even just simpler.

302
00:12:42,900 --> 00:12:45,929
Given a reproducer, I made the reproducer stop working.

303
00:12:46,229 --> 00:12:46,760
No,

304
00:12:46,770 --> 00:12:49,580
I did not spend 10 hours trying to dig into the legacy

305
00:12:49,590 --> 00:12:52,659
code and understand how this really works and the root causes and

306
00:12:52,789 --> 00:12:55,169
oh crap, we got rearchitect this whole thing

307
00:12:55,979 --> 00:12:56,460
because

308
00:12:56,580 --> 00:13:00,080
yeah. No, like nobody's got time for that. I've got like 17 features to add

309
00:13:00,299 --> 00:13:03,320
or just make sure the integer is greater than zero and line 13.

310
00:13:03,450 --> 00:13:04,840
We see that as well.

311
00:13:04,849 --> 00:13:08,760
I mean, uh point fixes are definitely a problem with, with the patches. We had one,

312
00:13:08,960 --> 00:13:12,719
we demonstrated in our attack an Adobe fix and we sent them

313
00:13:12,729 --> 00:13:15,280
an integer overflow and we sent them really good proof of concept.

314
00:13:15,539 --> 00:13:18,190
Uh And essentially what they did is they took the value from the proof

315
00:13:18,200 --> 00:13:21,599
of concept and dropped that into the patch and that was their patch.

316
00:13:21,609 --> 00:13:23,619
It's like broke, it broke the Poc.

317
00:13:23,630 --> 00:13:25,679
But then within an hour the patch being released,

318
00:13:25,690 --> 00:13:28,640
the researcher sent in another bug which we had to buy again

319
00:13:28,969 --> 00:13:30,559
and all he did on the Poc,

320
00:13:31,280 --> 00:13:33,739
all he all he changed on the POC was a new value there.

321
00:13:33,750 --> 00:13:36,119
And sure enough, boom code execution right again.

322
00:13:36,590 --> 00:13:40,289
So yeah, Adobe fixed it better the second time they added in math

323
00:13:40,659 --> 00:13:43,840
uh which is good in fixing energy overflows.

324
00:13:43,849 --> 00:13:45,630
But yeah, I mean, that's the sort of thing we see too.

325
00:13:45,640 --> 00:13:48,090
We just break the POC doesn't repro

326
00:13:48,320 --> 00:13:48,950
ship it.

327
00:13:49,150 --> 00:13:49,539
OK?

328
00:13:49,549 --> 00:13:51,210
I don't want to keep beating this horse because

329
00:13:51,219 --> 00:13:53,260
I think we all mostly understand the problem.

330
00:13:53,270 --> 00:13:53,849
I find

331
00:13:54,390 --> 00:13:57,489
it. It's fascinating and I'll be really excited to, to

332
00:13:57,669 --> 00:14:00,320
read more into this in the future as more and more.

333
00:14:00,330 --> 00:14:02,179
I'm sure organizations do the research. But

334
00:14:02,280 --> 00:14:05,659
now one of the other pieces to this is ZD.

335
00:14:05,669 --> 00:14:09,799
I is not just complaining, which I think is easy to do.

336
00:14:09,809 --> 00:14:12,849
You have some plans of behavior changes

337
00:14:13,280 --> 00:14:16,710
to hopefully make this better. And so I would love to hear more about that.

338
00:14:16,719 --> 00:14:19,609
Well, our standard disclosure timeline is 120 days.

339
00:14:19,619 --> 00:14:21,119
That means when we contact a vendor,

340
00:14:21,130 --> 00:14:22,549
if they have 100 and 20 days to

341
00:14:22,559 --> 00:14:25,640
either produce a security update or some other remediation

342
00:14:25,809 --> 00:14:26,869
to resolve an issue.

343
00:14:27,070 --> 00:14:30,690
Otherwise, we disclose the bug publicly. We don't go full disclosure,

344
00:14:30,840 --> 00:14:33,309
but we do provide some information publicly so

345
00:14:33,320 --> 00:14:36,080
that defenders have information that they can protect themselves

346
00:14:36,090 --> 00:14:38,590
and what we're doing uh with bugs that we

347
00:14:38,599 --> 00:14:41,830
buy that result from failed or faulty patches.

348
00:14:42,090 --> 00:14:44,090
Uh We're going with a tiered system.

349
00:14:44,380 --> 00:14:47,650
So uh for patches that are critical rated

350
00:14:47,659 --> 00:14:50,390
and where attack is imminent or already detected,

351
00:14:50,609 --> 00:14:52,669
you now have a 30 day disclosure timeline

352
00:14:53,010 --> 00:14:57,000
for critical and high severity bugs where the patch offers some protections

353
00:14:57,200 --> 00:15:02,869
uh and attacks are not uh immediate where 60 days and then everything else is 90 days.

354
00:15:03,270 --> 00:15:05,070
One of the things we were seeing is it would

355
00:15:05,080 --> 00:15:08,440
give somebody 100 and 20 days to fix something,

356
00:15:08,650 --> 00:15:10,549
they'd fix it right at 100 and 20 days,

357
00:15:10,869 --> 00:15:13,890
we, they'd release the patch and within an hour of the patch release,

358
00:15:14,409 --> 00:15:17,340
the research or somebody else would bypass it and then go

359
00:15:17,349 --> 00:15:19,650
right by it and we'd give them another 120 days.

360
00:15:19,739 --> 00:15:22,500
So it's another four months at the vendors that the enterprises are at

361
00:15:22,510 --> 00:15:27,489
risk because the vendors are taking so long to fix busted patches.

362
00:15:27,820 --> 00:15:30,729
So we're trying to incentivize them to get it right the first time.

363
00:15:30,770 --> 00:15:33,049
Otherwise they're going to be on much tighter timelines.

364
00:15:33,169 --> 00:15:36,280
And one example of this is uh in July Microsoft

365
00:15:36,340 --> 00:15:39,869
fixed a patch that was under active attack and they,

366
00:15:39,880 --> 00:15:42,030
they later said it was an Austrian private threat

367
00:15:42,039 --> 00:15:44,679
actor was using the bug to spread subzero malware.

368
00:15:44,989 --> 00:15:48,320
One of our ZD I researchers bypassed that patch within two days.

369
00:15:48,950 --> 00:15:52,770
Uh In fact, he bypassed about 10% of the entire release within two days.

370
00:15:53,099 --> 00:15:55,309
So, and that's, but that particular bug,

371
00:15:55,320 --> 00:15:58,770
that's the sort of thing we reported it under the 120 days.

372
00:15:58,849 --> 00:15:59,729
But under this,

373
00:15:59,739 --> 00:16:04,250
it would be a 30 day disclosure timeline because it was under active attack already.

374
00:16:04,340 --> 00:16:04,950
Got you.

375
00:16:05,229 --> 00:16:06,570
That makes sense. I mean,

376
00:16:06,710 --> 00:16:08,890
so if I report a bug to you

377
00:16:09,260 --> 00:16:09,929
and

378
00:16:10,299 --> 00:16:15,030
-- the vendor, the vendor gets 100 and 20 days for the initial report.
-- Yes. Correct.

379
00:16:15,099 --> 00:16:15,489
Yes.

380
00:16:15,979 --> 00:16:18,250
And then if they don't fix it correctly,

381
00:16:18,260 --> 00:16:20,330
-- then the 30 days can kick in if it's
-- critical

382
00:16:20,340 --> 00:16:23,340
severity and we think attacks are imminent were already happening.

383
00:16:23,650 --> 00:16:25,640
That's awesome. I think that's fantastic.

384
00:16:25,809 --> 00:16:29,080
Have you received any feedback on this policy by chance?

385
00:16:29,250 --> 00:16:31,000
We have surprisingly enough.

386
00:16:31,010 --> 00:16:32,969
So most of the enterprises we talked to are

387
00:16:32,979 --> 00:16:35,200
are very happy with it and encouraged by it.

388
00:16:35,270 --> 00:16:38,070
But what's really kind of shocking to me is most of the

389
00:16:38,080 --> 00:16:40,940
vendors we talked to because we talk mainly to their response,

390
00:16:40,950 --> 00:16:42,640
people, not their engineers directly.

391
00:16:43,070 --> 00:16:45,289
The response people were like this is great.

392
00:16:45,299 --> 00:16:48,549
This is something we can take back to our developers and go look,

393
00:16:48,559 --> 00:16:50,650
you got to get it right the first time or this is gonna happen.

394
00:16:51,039 --> 00:16:53,020
So the the response from the vendors has

395
00:16:53,030 --> 00:16:55,119
been much more positive than we actually expected.

396
00:16:55,130 --> 00:16:56,859
We expected quite a bit of pushback.

397
00:16:56,869 --> 00:16:57,500
But no,

398
00:16:57,510 --> 00:17:00,140
the the response has been overwhelmingly positive with

399
00:17:00,150 --> 00:17:02,580
very few people being really negative about it.

400
00:17:02,590 --> 00:17:05,329
Well, I mean, speaking from experience, one of the biggest challenges had as, as,

401
00:17:05,339 --> 00:17:07,239
as the security people,

402
00:17:07,618 --> 00:17:09,010
we didn't control the devs,

403
00:17:09,569 --> 00:17:13,660
right? Like we had to ask nicely and, or convince their managers to do stuff and

404
00:17:14,400 --> 00:17:15,660
yeah, we didn't have

405
00:17:16,329 --> 00:17:21,459
-- a lot of push or control.
-- No, we used to call it influence without authority.

406
00:17:21,510 --> 00:17:23,300
Yeah, exactly. Social capital

407
00:17:23,589 --> 00:17:25,689
and everybody hates security people because we just keep coming to

408
00:17:25,699 --> 00:17:28,140
them and bugging them for stuff and interrupting their schedules.

409
00:17:28,150 --> 00:17:30,540
-- We,
-- we don't come to them and say, hey, nothing's broken today.

410
00:17:30,739 --> 00:17:33,170
-- Maybe
-- that's what I should have done. But uh yeah, I understand.

411
00:17:33,180 --> 00:17:36,729
I mean, I've been that security person too, you know, in the Air Force at Microsoft.

412
00:17:36,739 --> 00:17:40,540
And it's, you know, it's tough going to developers who just want to work on

413
00:17:40,680 --> 00:17:41,500
the next

414
00:17:41,719 --> 00:17:45,369
and say, hey, sorry, remember that code? Somebody checked in 12 years ago.

415
00:17:45,380 --> 00:17:45,569
Yeah,

416
00:17:45,579 --> 00:17:47,609
it's broken and you have to fix it now and I

417
00:17:47,619 --> 00:17:49,489
know that new feature you're working on is really cool.

418
00:17:49,500 --> 00:17:53,130
But really you have to take time off from that and, and fix this one thing and it's,

419
00:17:53,140 --> 00:17:54,390
and it's tough to get them to do that.

420
00:17:54,400 --> 00:17:58,349
It's tough to get them to see the value add of, you know, fixing legacy code,

421
00:17:58,359 --> 00:18:00,349
especially on certain projects.

422
00:18:00,489 --> 00:18:00,709
So,

423
00:18:00,719 --> 00:18:03,260
one of the things that we've seen uh more recently with

424
00:18:03,270 --> 00:18:06,089
certain hardware vendors is we'll go to them and it's like,

425
00:18:06,099 --> 00:18:08,689
hey, uh, this entire hardware line has these bugs

426
00:18:09,160 --> 00:18:10,020
and they go, oh, really?

427
00:18:10,229 --> 00:18:13,089
That's funny because I just into life, that entire hardware line,

428
00:18:14,180 --> 00:18:16,119
like, oh, well, I guess that's one way.

429
00:18:16,530 --> 00:18:19,199
No, I could see it because I know for a lot of that hardware stuff,

430
00:18:19,209 --> 00:18:20,550
they're not gonna sell any more of them.

431
00:18:20,560 --> 00:18:20,880
So

432
00:18:22,209 --> 00:18:24,189
they're not gonna sell it anymore. So why support it?

433
00:18:24,359 --> 00:18:25,050
So, yeah,

434
00:18:25,390 --> 00:18:28,599
that was kind of astonishing to us because we didn't always buy bugs and hardware.

435
00:18:28,729 --> 00:18:31,449
That's a little bit harder for us because, you know, you report a hardware bug,

436
00:18:31,459 --> 00:18:33,469
we gotta go buy the hardware and then reproduce it and

437
00:18:33,479 --> 00:18:35,359
all this sort of stuff takes a little longer for us.

438
00:18:35,369 --> 00:18:38,380
But, uh, yeah, we were kind of surprised when we started buying hardware bugs.

439
00:18:38,390 --> 00:18:41,359
That, that was a valid response from the vendors.

440
00:18:41,369 --> 00:18:44,640
It's like, oh, we'll just end of life the entire product line, like, oh, ok.

441
00:18:44,650 --> 00:18:45,939
Well, that's the way to go, I suppose

442
00:18:47,449 --> 00:18:48,619
because they know they're not buying,

443
00:18:48,630 --> 00:18:49,750
they're not selling any more of those

444
00:18:49,760 --> 00:18:51,790
wireless routers except at Walmart or something.

445
00:18:51,800 --> 00:18:54,739
And, you know, I, I guess they don't care about those customers.

446
00:18:55,079 --> 00:18:55,420
Well,

447
00:18:55,609 --> 00:18:59,939
it's, I mean, even us being all knowledgeable in this industry, like,

448
00:18:59,949 --> 00:19:03,060
can you definitively say what, you know, is the security policy

449
00:19:03,170 --> 00:19:05,000
affecting your hardware? And the answer is no, of course not.

450
00:19:05,010 --> 00:19:07,280
Well, so one thing I'm curious about is because I've been looking at

451
00:19:07,510 --> 00:19:10,050
this for the last 10 years, sort of in economic terms, you know,

452
00:19:10,060 --> 00:19:12,500
because there's a lot of bad incentives like, hey,

453
00:19:12,510 --> 00:19:14,219
I sold you that hardware or software,

454
00:19:14,410 --> 00:19:17,229
like I have your money. Why? Like, why would I care?

455
00:19:17,369 --> 00:19:17,589
You know,

456
00:19:17,599 --> 00:19:19,189
and that's one thing Red Hat did that I liked is

457
00:19:19,199 --> 00:19:22,030
Red Hat had a subscription model so that Red Hat had

458
00:19:22,170 --> 00:19:25,189
an incentive to support the damn thing because like we want,

459
00:19:25,199 --> 00:19:27,869
we want you to keep paying us every year.

460
00:19:27,880 --> 00:19:28,630
And um

461
00:19:28,890 --> 00:19:30,020
I'm just wondering,

462
00:19:30,170 --> 00:19:30,750
so it,

463
00:19:30,760 --> 00:19:32,449
you're trying to create some better incentives with

464
00:19:32,459 --> 00:19:34,449
that shorter disclosure for the more critical stuff,

465
00:19:34,459 --> 00:19:36,630
which also has the nice effect of actually

466
00:19:37,040 --> 00:19:40,790
hopefully protecting the people being exploited because they get a patch

467
00:19:41,020 --> 00:19:42,920
in 30 days instead of 100 and 20. That's

468
00:19:43,109 --> 00:19:43,739
goal. But

469
00:19:44,449 --> 00:19:48,410
the thing I'm wondering is, is how or even can we

470
00:19:48,680 --> 00:19:49,310
kind of,

471
00:19:49,739 --> 00:19:54,469
is there anything we can do for consumers to help educate them or, or get them to

472
00:19:54,630 --> 00:19:58,069
demand better behavior consistently from the vendors? Right? Because

473
00:19:58,750 --> 00:20:02,430
I, I feel like that that demand side of security is something we always ignore.

474
00:20:02,439 --> 00:20:03,829
We were focused on the supply side.

475
00:20:03,839 --> 00:20:04,079
Well,

476
00:20:04,089 --> 00:20:06,859
I think the biggest thing that both consumers and enterprises can do

477
00:20:06,869 --> 00:20:09,410
that we're not really doing right now is vote with our wallet.

478
00:20:09,869 --> 00:20:13,199
Money, money is a big motivating factor in creating a profit.

479
00:20:13,209 --> 00:20:17,079
I I told enterprises on stage, it's like, look, if you've got an RFP

480
00:20:17,319 --> 00:20:21,250
include in there, what is your patch policy? What is your disclosure policy?

481
00:20:21,260 --> 00:20:21,770
What is,

482
00:20:21,979 --> 00:20:24,969
you know, how do you handle bad patches, that sort of thing

483
00:20:25,229 --> 00:20:28,329
because you'll be really surprised with, you know, what you can get.

484
00:20:28,339 --> 00:20:31,089
I know based on my personal preference purchases.

485
00:20:31,260 --> 00:20:35,650
Uh I won the, the home wireless system that I got is really, really fast

486
00:20:36,020 --> 00:20:36,689
and it's really,

487
00:20:36,699 --> 00:20:40,369
really awful for security and I won't be purchasing that brand again because of it.

488
00:20:40,380 --> 00:20:43,400
Now, I won't be replacing it for a while either because it's, you know,

489
00:20:43,410 --> 00:20:45,349
Wi Fi six and it's mesh and it's, you know,

490
00:20:45,359 --> 00:20:48,410
I just put it in a year ago and hopefully it'll last a couple more years.

491
00:20:48,420 --> 00:20:51,420
But that's the sort of thing. It's like I'm going to look a lot more closely at,

492
00:20:52,140 --> 00:20:53,800
uh, what we can do and,

493
00:20:53,810 --> 00:20:55,939
and I don't know how that translates to consumers

494
00:20:55,949 --> 00:20:59,530
because obviously we're more prosumer than we are consumers.

495
00:20:59,540 --> 00:21:00,680
I think that's the term. But

496
00:21:00,890 --> 00:21:04,000
how, how do we get the average person purchasing whatever,

497
00:21:04,010 --> 00:21:06,839
whether it be a phone or a piece of software or hardware

498
00:21:07,089 --> 00:21:09,599
to think more about the security of it.

499
00:21:09,869 --> 00:21:10,479
So that,

500
00:21:10,609 --> 00:21:13,390
that vendors will be rewarded for having better security.

501
00:21:13,400 --> 00:21:16,410
And I don't, I don't know how we get to there, especially on the consumer side,

502
00:21:16,560 --> 00:21:19,810
I can see a path on the enterprise side, consumer much more hard.

503
00:21:19,989 --> 00:21:23,829
Uh Just because they care more about features than security. Just in general.

504
00:21:23,839 --> 00:21:26,410
One trick there I've found is is when people ask me, you know,

505
00:21:26,420 --> 00:21:28,290
what should I get for Wi Fi phone, whatever?

506
00:21:28,300 --> 00:21:30,489
And my answer is go buy it at Costco

507
00:21:30,880 --> 00:21:32,959
because they have a one year money back guarantee.

508
00:21:33,140 --> 00:21:34,630
And so if it is problematic,

509
00:21:34,640 --> 00:21:37,410
like you can literally return your Christmas tree in July and they'll,

510
00:21:37,780 --> 00:21:40,819
they'll, you know, give you a stink eye, but they will give you your money back.

511
00:21:40,880 --> 00:21:44,459
So it kind of comes back down to that sort of insurability piece of like, yeah,

512
00:21:44,469 --> 00:21:48,130
just buy it at this place that will make you whole if it's not good.

513
00:21:48,270 --> 00:21:48,800
And

514
00:21:49,619 --> 00:21:51,180
obviously that doesn't work for everything

515
00:21:51,189 --> 00:21:52,839
because Costco is very limited selection.

516
00:21:52,849 --> 00:21:52,869
All

517
00:21:53,040 --> 00:21:53,189
right.

518
00:21:53,459 --> 00:21:56,400
All right. I want, I want to reel it back in again.

519
00:21:56,920 --> 00:21:58,199
This is basically my job,

520
00:21:58,439 --> 00:22:00,319
but this is,

521
00:22:00,329 --> 00:22:04,189
I think a fascinating tangent we're on right now where we're talking about,

522
00:22:04,199 --> 00:22:05,739
you know, how do we create some incentives?

523
00:22:05,750 --> 00:22:09,880
But what about the incentive? Like I'm, I'm, I'm a vendor

524
00:22:10,310 --> 00:22:12,880
and I want to make sure

525
00:22:13,089 --> 00:22:15,959
my developers don't have to release

526
00:22:16,130 --> 00:22:18,079
the same patch two or three times.

527
00:22:18,650 --> 00:22:19,670
What are,

528
00:22:19,959 --> 00:22:23,650
how do we start fixing that problem? Because I think there is,

529
00:22:23,890 --> 00:22:27,599
that's like a layer cake of difficult problems

530
00:22:27,849 --> 00:22:28,760
all the way down.

531
00:22:28,949 --> 00:22:33,890
Yeah, it definitely is a layer cake of uh there's a lot of things that could go into it.

532
00:22:34,079 --> 00:22:38,069
The first thing I would do is is really look at your sustained engineering.

533
00:22:38,349 --> 00:22:40,939
Like what, what really are you doing to

534
00:22:41,140 --> 00:22:44,219
test and to verify stuff as it goes out?

535
00:22:44,359 --> 00:22:47,900
Uh Both before and after uh a product release.

536
00:22:48,339 --> 00:22:50,800
Um That's the biggest thing to me is we've,

537
00:22:50,810 --> 00:22:54,810
we've pushed so much into automation and we've pushed so much on to developers.

538
00:22:55,020 --> 00:22:57,760
I think we've pushed too much in those areas, too fast

539
00:22:58,020 --> 00:23:00,339
and maybe I'm wrong on that. That's just my opinion.

540
00:23:00,489 --> 00:23:02,780
But we're seeing the push for automation really have

541
00:23:02,790 --> 00:23:04,930
kind of a negative impact in the patch world.

542
00:23:05,000 --> 00:23:07,410
Uh because a lot of the reporting that we do now

543
00:23:07,420 --> 00:23:10,680
is through API S uh to different vendors and that,

544
00:23:10,689 --> 00:23:13,839
that push towards automation has definitely hurt

545
00:23:14,130 --> 00:23:16,800
in some ways that I don't think the vendors intended.

546
00:23:17,060 --> 00:23:19,050
It's one of the reasons why the communications

547
00:23:19,060 --> 00:23:21,489
is worse because a lot of those advisories,

548
00:23:21,650 --> 00:23:24,560
you just push a button and it kicks out from a database someplace.

549
00:23:24,680 --> 00:23:26,439
There's not enough context around it.

550
00:23:26,449 --> 00:23:29,010
There's not enough real data in the, in the advisories

551
00:23:29,209 --> 00:23:32,150
to make a smart decision. And this is all part of the automation.

552
00:23:32,160 --> 00:23:34,270
So you have to look very closely at your processes

553
00:23:34,550 --> 00:23:37,329
and figure out if what you're doing is actually working to make

554
00:23:37,339 --> 00:23:40,319
things better or if it's working to make things easier on you.

555
00:23:40,920 --> 00:23:41,930
And I think in the end,

556
00:23:41,939 --> 00:23:44,420
a lot of the automation is it's just helping to make things

557
00:23:44,430 --> 00:23:47,459
easier on the vendor and not actually making anything that much better.

558
00:23:47,469 --> 00:23:50,489
Well, and there's some vendors who goes well, that's good enough for me.

559
00:23:50,500 --> 00:23:52,619
That's lowers my bottom line. That's all I care.

560
00:23:52,630 --> 00:23:56,729
-- Well,
-- until they have to fix the patch three times in a row.

561
00:23:57,520 --> 00:23:57,969
Again,

562
00:23:57,979 --> 00:24:00,180
this is something I keep coming back to is my understanding of it

563
00:24:00,189 --> 00:24:04,079
was the whole point of it was to automate stuff using computers and software

564
00:24:04,469 --> 00:24:07,900
that can work really well because you can take a bunch of smart people, you know,

565
00:24:07,910 --> 00:24:08,859
boil their knowledge,

566
00:24:08,869 --> 00:24:12,810
distill it and turn it into a web browser or a blackjack simulator or,

567
00:24:13,030 --> 00:24:14,819
you know, a GIS program or whatever.

568
00:24:15,069 --> 00:24:15,619
But

569
00:24:16,069 --> 00:24:19,459
the thing I keep finding and I'm not sure if this is true or not, but it seems to me,

570
00:24:19,469 --> 00:24:21,780
like, every vendor treats security a little bit differently.

571
00:24:21,790 --> 00:24:22,930
Like, there's no sort of,

572
00:24:24,569 --> 00:24:28,640
there's no, generally, like, there's best practices but there's no, like,

573
00:24:28,650 --> 00:24:30,420
actually here's no, just do this.

574
00:24:30,430 --> 00:24:31,359
Like, here's the list.

575
00:24:31,530 --> 00:24:32,020
Like

576
00:24:32,380 --> 00:24:34,219
if you're going to get your car fixed,

577
00:24:34,530 --> 00:24:36,199
all the mechanics are basically trained the same

578
00:24:36,209 --> 00:24:37,770
way and they all will quote you like,

579
00:24:37,780 --> 00:24:39,280
ok, you want me to do this,

580
00:24:39,290 --> 00:24:42,640
this will take 2.7 hours and we will charge you X dollars per hour.

581
00:24:43,030 --> 00:24:45,400
And whether or not it takes 2.7 hours is not your problem.

582
00:24:45,810 --> 00:24:47,040
That's what you're paying, right?

583
00:24:47,119 --> 00:24:50,579
And I feel like in the software industry, everything is this artisanal bespoke

584
00:24:51,300 --> 00:24:51,959
mess.

585
00:24:52,660 --> 00:24:53,079
And

586
00:24:53,199 --> 00:24:53,790
when they are

587
00:24:53,989 --> 00:24:55,829
making air quotes here automate it, you know, they,

588
00:24:55,839 --> 00:24:57,270
they basically just take that mess and jam it

589
00:24:57,280 --> 00:24:59,189
into a computer and I can't help but think

590
00:24:59,550 --> 00:25:02,079
so. The challenge is we don't really necessarily

591
00:25:02,400 --> 00:25:04,599
have the knowledge to actually automate it.

592
00:25:04,790 --> 00:25:06,260
And when we do automate it,

593
00:25:07,119 --> 00:25:10,180
are we kind of keeping that knowledge? Like, again, car mechanics,

594
00:25:10,339 --> 00:25:12,459
they have training programs. They have manuals like

595
00:25:13,260 --> 00:25:16,829
I've never been through real proper security training.

596
00:25:16,839 --> 00:25:18,650
And this is my job like this is my career.

597
00:25:18,660 --> 00:25:22,810
What's interesting is when it comes to this though, there, there are standards,

598
00:25:22,819 --> 00:25:26,410
there is an iso for vendor responses to bug reports

599
00:25:26,819 --> 00:25:29,959
that lays out how long you're supposed to do certain things.

600
00:25:29,969 --> 00:25:32,890
29 1 47 is supposed to be uh

601
00:25:33,089 --> 00:25:35,910
there for you to, for vendors to comply with.

602
00:25:36,069 --> 00:25:37,319
I, I don't think

603
00:25:37,609 --> 00:25:38,420
no,

604
00:25:38,430 --> 00:25:42,500
at least no one that I've seen recently has really cared whether or not they're iso

605
00:25:42,729 --> 00:25:44,520
29 1 47 compliance.

606
00:25:44,810 --> 00:25:46,229
But if we were to go towards that,

607
00:25:46,239 --> 00:25:49,130
that would at least give that baseline of what you're talking about to go.

608
00:25:49,140 --> 00:25:50,439
Ok. Here's our baseline.

609
00:25:50,810 --> 00:25:53,000
We need to be do this and it has the things like

610
00:25:53,130 --> 00:25:57,069
you have to respond to a bug report within five days to acknowledge receipt.

611
00:25:57,280 --> 00:26:00,670
Uh You have to, you know, have a timeline for fixing it,

612
00:26:00,780 --> 00:26:04,500
whether it's 100 and 20 days or 100 and 80 or 90 or whatever, lay it out,

613
00:26:04,510 --> 00:26:06,310
you have to have a contact point.

614
00:26:06,630 --> 00:26:11,030
Uh Sometimes for certain vendors, it's hard for us even to find who to contact

615
00:26:11,430 --> 00:26:13,219
like when we and not even just

616
00:26:13,609 --> 00:26:13,699
open

617
00:26:13,890 --> 00:26:16,560
source library is one thing we, we, we know we have that problem,

618
00:26:16,569 --> 00:26:19,099
but especially when like some big vendors and you're like,

619
00:26:19,300 --> 00:26:22,099
there's no Secure at whatever.com. That's,

620
00:26:22,410 --> 00:26:23,030
that's tough.

621
00:26:23,040 --> 00:26:27,369
That's one of my criteria for picking vendors that we use at the CS A is, can I find a

622
00:26:27,890 --> 00:26:30,339
thing to report a security vulnerability to? And

623
00:26:31,040 --> 00:26:32,030
like nine times out of 10,

624
00:26:32,040 --> 00:26:35,739
it takes about a minute and a half and then the other one in 10 times, it's just like

625
00:26:37,260 --> 00:26:41,030
they really don't want to hear from us. But the one thing, speaking of iso standards,

626
00:26:41,839 --> 00:26:43,890
the one thing I've not seen is

627
00:26:44,109 --> 00:26:45,839
like, how does the vendor get there?

628
00:26:45,849 --> 00:26:47,380
So, a great example is we're,

629
00:26:47,390 --> 00:26:50,969
we're currently evaluating um instant management software at the CS A

630
00:26:50,979 --> 00:26:53,739
like better up time type stuff like website falls down.

631
00:26:53,750 --> 00:26:56,310
We get an email, not only do we get a page or an email,

632
00:26:56,319 --> 00:26:58,699
but we get like a system where we can talk about it and like

633
00:26:59,069 --> 00:27:00,209
panic and like, uh

634
00:27:00,430 --> 00:27:02,579
turn it off and on, turn it off and on.

635
00:27:02,719 --> 00:27:04,900
But what I like, like when we worked at Red Hat,

636
00:27:04,910 --> 00:27:09,520
the whole security response thing was this custom built Rube Goldberg machine.

637
00:27:10,260 --> 00:27:13,280
And, and that's been my experience with all the vendors I've dealt with, like,

638
00:27:13,290 --> 00:27:15,469
they all have their custom Rube Goldberg machine.

639
00:27:16,180 --> 00:27:17,959
And that's kind of what I'm getting at is there's no like,

640
00:27:17,969 --> 00:27:19,469
package I can buy off the shelf.

641
00:27:19,479 --> 00:27:22,640
That's like, you know, oh, we're, we need a security response

642
00:27:23,060 --> 00:27:23,199
block

643
00:27:23,510 --> 00:27:23,839
thing.

644
00:27:23,979 --> 00:27:24,380
Like,

645
00:27:24,670 --> 00:27:25,760
why can't I buy that?

646
00:27:26,000 --> 00:27:28,270
-- Yeah,
-- that's the better mouse trap, I suppose.

647
00:27:28,280 --> 00:27:31,109
I mean, we've seen that in other industries as well where it's like,

648
00:27:31,119 --> 00:27:32,699
how do I run a bug bounty program?

649
00:27:32,859 --> 00:27:34,969
It's like, oh, well, I can't let me just hire

650
00:27:35,400 --> 00:27:37,319
hone or bug crowd to do that for us.

651
00:27:37,800 --> 00:27:40,540
But then it turns out that that's not as easy as they,

652
00:27:40,550 --> 00:27:42,739
they think because there's problems inherent with that.

653
00:27:42,750 --> 00:27:43,209
So,

654
00:27:43,520 --> 00:27:45,260
yeah, if we could build that better mouse trap,

655
00:27:45,270 --> 00:27:47,660
I'll let you know and I'll sell it to you for a good price.

656
00:27:48,079 --> 00:27:50,380
Uh I'll give you, I'll give you that discount. I don't know.

657
00:27:50,390 --> 00:27:54,290
But uh I retire off that if I build that. Um, you're right.

658
00:27:54,300 --> 00:27:56,609
I mean, there's not, it would be great if we could have this.

659
00:27:56,619 --> 00:28:00,819
Ok, let's go out and build Response maker 5000 and that would be it.

660
00:28:01,229 --> 00:28:03,439
-- But yeah, I don't know. That's the better
-- mousetrap.

661
00:28:03,449 --> 00:28:05,579
I mean, it's, we're not answering that today.

662
00:28:07,060 --> 00:28:07,069
A

663
00:28:07,180 --> 00:28:09,550
lot of that starts with senior leadership buy in,

664
00:28:09,849 --> 00:28:13,209
like if you don't get buy in from your senior leaders that this is important,

665
00:28:13,660 --> 00:28:14,810
it's never gonna happen.

666
00:28:14,969 --> 00:28:16,979
And I think in a lot of organizations,

667
00:28:17,119 --> 00:28:20,829
whether it's open source or closed source or service or products or whatever,

668
00:28:20,969 --> 00:28:23,849
getting that senior leadership buy in to say this is

669
00:28:23,859 --> 00:28:26,589
a real problem and we're going to fix it is,

670
00:28:26,599 --> 00:28:27,630
is really hard to get.

671
00:28:27,880 --> 00:28:33,089
I, I agree. I agree and I think that's let, let's take us out on that kind of note is

672
00:28:33,579 --> 00:28:37,319
it's always, you know, everyone takes your security seriously. Right.

673
00:28:37,329 --> 00:28:39,010
There's no organization on the planet that

674
00:28:39,020 --> 00:28:41,369
hasn't uttered those statements at some point.

675
00:28:41,709 --> 00:28:43,550
But I, I think you're correct that

676
00:28:43,910 --> 00:28:44,369
it's,

677
00:28:45,430 --> 00:28:48,380
you talk about interacting with product security

678
00:28:48,390 --> 00:28:50,089
teams like P cert teams or whatever.

679
00:28:50,099 --> 00:28:50,489
And

680
00:28:50,729 --> 00:28:55,150
I've never met a P cert team that doesn't want to take security super seriously.

681
00:28:55,160 --> 00:28:55,729
But then

682
00:28:55,939 --> 00:28:57,449
they have to go to development

683
00:28:57,790 --> 00:29:00,540
and now development's getting pressure from everyone. Right.

684
00:29:00,550 --> 00:29:04,689
And so it can be, security is one aspect of what they're doing. And

685
00:29:04,989 --> 00:29:05,739
as

686
00:29:05,869 --> 00:29:09,290
I think it was pointed out in one of the quotes I read from you about how

687
00:29:09,640 --> 00:29:13,390
a lot of developers features are, what make the money, right?

688
00:29:13,400 --> 00:29:16,130
Sustaining engineering isn't what makes money generally speaking.

689
00:29:16,140 --> 00:29:20,130
And I get that like, I, I understand that, but I think this is where you're right,

690
00:29:20,140 --> 00:29:23,380
like when you have senior leadership saying this needs to be a priority,

691
00:29:23,550 --> 00:29:27,609
that's how you make it a priority. And, and I, that makes sense to me.

692
00:29:28,099 --> 00:29:28,260
Yeah,

693
00:29:28,270 --> 00:29:30,130
it's just tough to find that senior leadership who's

694
00:29:30,140 --> 00:29:32,089
willing to stand by that because like we said,

695
00:29:32,099 --> 00:29:33,089
features make money

696
00:29:33,380 --> 00:29:35,079
and sustained engineering doesn't.

697
00:29:35,420 --> 00:29:37,979
And I think we're all the three unders, no matter where we're at,

698
00:29:37,989 --> 00:29:39,920
we're understaffed, underfunded, under pressure.

699
00:29:40,270 --> 00:29:41,560
So, you know, it's,

700
00:29:41,569 --> 00:29:44,469
it's tough when you're trying to allocate those limited resources,

701
00:29:44,479 --> 00:29:45,719
what are we going to spend it on?

702
00:29:46,250 --> 00:29:49,410
You know, we're gonna add this new feature, we're gonna fix this old bug and,

703
00:29:49,420 --> 00:29:52,640
and sometimes that can be a tough decision for businesses to make.

704
00:29:52,650 --> 00:29:55,579
I think it's especially tough now too because stuff gets

705
00:29:55,589 --> 00:29:58,069
rolled and phased out so much faster than in past,

706
00:29:58,079 --> 00:29:58,599
you know, like

707
00:29:58,989 --> 00:30:01,680
software used to come on a CD that I used for five years.

708
00:30:01,829 --> 00:30:05,410
-- Yeah,
-- especially with like a lot of agile programs and cloud resources.

709
00:30:05,420 --> 00:30:06,069
I mean, there's

710
00:30:06,219 --> 00:30:08,329
so much churn on that code

711
00:30:08,550 --> 00:30:10,709
and there's so limited integration testing.

712
00:30:10,869 --> 00:30:13,540
Uh And there's so limited documentation that uh yeah,

713
00:30:13,550 --> 00:30:15,420
we see that code churn happen just a lot.

714
00:30:15,930 --> 00:30:16,430
Uh

715
00:30:16,599 --> 00:30:18,449
And that that's good and bad, you know,

716
00:30:18,459 --> 00:30:20,750
just because it means we can get things fixed faster,

717
00:30:20,939 --> 00:30:25,910
-- means we can break it faster too.
-- I love that. I, I think let's call this one.

718
00:30:25,920 --> 00:30:29,560
I can think of no better statement to end this on. I

719
00:30:30,369 --> 00:30:32,369
Dustin. Thank you so much for joining us.

720
00:30:32,380 --> 00:30:35,930
I'll put links to all the various stories and Dustin's

721
00:30:35,939 --> 00:30:37,819
Twitter account and whatever else in the show note.

722
00:30:37,829 --> 00:30:39,729
So just go find him there, go to open

723
00:30:39,859 --> 00:30:42,479
source security podcast.com for the listeners. You can use the Pound

724
00:30:42,680 --> 00:30:42,699
do

725
00:30:42,939 --> 00:30:45,199
podcast. Hashtag Hit us up on social media.

726
00:30:45,329 --> 00:30:47,800
Dustin and Kurt. It has been an absolute treat.

727
00:30:47,810 --> 00:30:50,390
I want to thank you both for the conversation.

728
00:30:50,530 --> 00:30:52,540
You're very welcome. Thank you for having me. I really appreciate it.

729
00:30:52,550 --> 00:30:54,410
It's been a fun talk. Thanks everybody.

730
00:30:54,520 --> 00:30:57,390
Awesome. Thanks everyone and thanks Dustin. Bye bye.