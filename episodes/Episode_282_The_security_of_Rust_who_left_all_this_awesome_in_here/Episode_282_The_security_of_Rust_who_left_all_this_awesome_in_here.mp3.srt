0
00:00:05,340 --> 00:00:07,960
Hello and welcome to the open source security podcast

1
00:00:08,130 --> 00:00:11,069
with myself, Kurt Siefried and my partner Thought Crime. Josh Bresser.

2
00:00:11,460 --> 00:00:13,079
So, what are we talking about?

3
00:00:13,340 --> 00:00:15,340
Well, I finished building a tree house on the weekend.

4
00:00:15,649 --> 00:00:17,000
Oh, well, that is exciting.

5
00:00:17,209 --> 00:00:18,860
We're the base of it actually.

6
00:00:18,969 --> 00:00:20,399
-- That's not
-- our topic though, is it

7
00:00:20,559 --> 00:00:20,829
no

8
00:00:21,450 --> 00:00:23,879
related? But, but building a tree house is

9
00:00:24,180 --> 00:00:29,090
-- awesome. I have not built a tree house and I bet 30 plus years. Yeah.
-- Well, I mean,

10
00:00:29,290 --> 00:00:30,799
it helps that I have kids now because of

11
00:00:31,209 --> 00:00:31,979
it's just

12
00:00:32,290 --> 00:00:34,990
-- do, are adults allowed to build tree houses?
-- I don't see why not.

13
00:00:35,000 --> 00:00:37,630
I mean, we could build awesome tree houses. Our tree houses could have Wi

14
00:00:37,750 --> 00:00:38,110
Fi,

15
00:00:38,380 --> 00:00:38,759
wouldn't it

16
00:00:39,020 --> 00:00:40,310
just have it from the house?

17
00:00:40,319 --> 00:00:43,139
It could or you could put Wi Fi specifically in the tree

18
00:00:43,150 --> 00:00:45,330
house and you could give it an SS ID of tree house wi

19
00:00:45,430 --> 00:00:45,790
Fi.

20
00:00:45,959 --> 00:00:46,549
No, I'm just,

21
00:00:46,560 --> 00:00:48,130
I'm more thinking about how to run electrical out

22
00:00:48,139 --> 00:00:49,849
there and be code compliant because then I get,

23
00:00:49,889 --> 00:00:51,310
you need to get Nema 40.

24
00:00:51,319 --> 00:00:53,470
It's, it's fine. It'll just burn the tree down.

25
00:00:53,840 --> 00:00:55,360
It's, it's fine. I like that.

26
00:00:55,549 --> 00:00:56,340
It's a nice tree

27
00:00:56,779 --> 00:01:02,450
No, I, I detest this concept of, there are Children things and adult things.

28
00:01:02,459 --> 00:01:03,439
I feel like

29
00:01:03,630 --> 00:01:07,419
if kids are allowed to do it, I could do it and I don't care what you think about me.

30
00:01:07,430 --> 00:01:11,480
So, when I bring my kids to the park, I go down the slides, I play on the swings.

31
00:01:11,489 --> 00:01:12,400
I do all that stuff.

32
00:01:12,410 --> 00:01:15,690
Well, the one challenge I find, like I get stuck on some of the slides now.

33
00:01:15,879 --> 00:01:20,279
Yeah, I'm too fat for certain things. But, and that's ok. There's certain tubes.

34
00:01:20,290 --> 00:01:23,160
-- I don't necessarily enjoy crawling through. I
-- was going to,

35
00:01:23,264 --> 00:01:25,135
with my hips are too wide, but sure. Yeah,

36
00:01:26,694 --> 00:01:29,135
-- it's entirely wrong,
-- but it's still fun. And I love the swing.

37
00:01:29,144 --> 00:01:30,944
The swings are my favorite thing in the whole world. Man.

38
00:01:30,955 --> 00:01:34,485
I could literally sit on a swing all day long and just swing back and forth.

39
00:01:34,495 --> 00:01:35,324
It's lovely.

40
00:01:35,334 --> 00:01:37,875
What makes me sad is though is when I do that other

41
00:01:37,885 --> 00:01:39,654
kids come up and try to play with me and I'm like,

42
00:01:39,665 --> 00:01:43,114
I'm sorry, but like, I can't chase you and take you and touch you.

43
00:01:43,125 --> 00:01:47,165
-- Like, I've never had that problem.
-- Don't ask you to play with them when they're

44
00:01:47,194 --> 00:01:47,324
too

45
00:01:47,425 --> 00:01:49,525
much, look more friendly than I do.

46
00:01:50,220 --> 00:01:51,569
It's kind of, it feeds.

47
00:01:51,580 --> 00:01:55,760
So Microsoft has basically come out and said, not surprisingly, that C++

48
00:01:56,010 --> 00:01:57,559
is just not

49
00:01:57,779 --> 00:02:06,150
safe to quote C++ at its core is not a safe language which comes as a huge shock.

50
00:02:06,160 --> 00:02:07,680
I'm sure to most of our listeners,

51
00:02:07,690 --> 00:02:11,440
anyone who's ever used it completely understands that statement.

52
00:02:11,919 --> 00:02:15,729
My one thought is like, given the average C or C++ project,

53
00:02:15,740 --> 00:02:20,589
how much percentage like of time and mental effort do they spend managing memory?

54
00:02:20,619 --> 00:02:24,800
-- Not
-- enough is always the answer and more than you should is the second half of that

55
00:02:25,110 --> 00:02:26,539
or things like concurrency.

56
00:02:26,610 --> 00:02:29,639
-- I mean,
-- concurrency is a problem in almost every language so that

57
00:02:29,889 --> 00:02:32,210
-- I can forgive
-- some languages,

58
00:02:32,220 --> 00:02:35,940
give you better tooling and capabilities and some like C++

59
00:02:36,229 --> 00:02:38,720
give you a box of sharp Met

60
00:02:38,940 --> 00:02:42,250
bits that you're expected to somehow safely glue together.

61
00:02:42,380 --> 00:02:45,410
I won't disagree with that necessarily.

62
00:02:45,970 --> 00:02:46,699
But yes.

63
00:02:46,910 --> 00:02:50,190
So, and, but the good news is now we have some answers, you know, for example,

64
00:02:50,199 --> 00:02:52,759
the Rust programming language, which, well, because you did that,

65
00:02:52,770 --> 00:02:54,470
I think you had a slide deck or a talk about, you know,

66
00:02:54,479 --> 00:02:57,410
talking about web applications and how, you know, web applications

67
00:02:57,660 --> 00:02:59,860
essentially, you can solve the majority of the oo

68
00:03:00,160 --> 00:03:03,130
what is it? Top 10 or top 20 problems by just using a framework.

69
00:03:03,139 --> 00:03:07,470
You know, I'll, I'll dig up the talk. It's, it's actually online. It was at the,

70
00:03:07,740 --> 00:03:10,539
it was at Madison, Wisconsin devops days.

71
00:03:10,550 --> 00:03:14,498
-- I gave it this man, this feels like it was 100 years ago now. I don't, it was pre
-- COVID.

72
00:03:14,507 --> 00:03:15,578
Yeah. Right. Like a decade

73
00:03:15,688 --> 00:03:15,998
ago.

74
00:03:16,098 --> 00:03:17,397
It was four times.

75
00:03:17,408 --> 00:03:20,477
I mean, it's been a couple of years, at least but basically I took the O

76
00:03:20,727 --> 00:03:20,738
A

77
00:03:20,927 --> 00:03:23,917
top 10 and the talk came at a really interesting time

78
00:03:23,927 --> 00:03:27,498
because it was whenever the last switch over from the old O

79
00:03:27,697 --> 00:03:27,707
A

80
00:03:27,837 --> 00:03:28,677
list to the new OO

81
00:03:29,007 --> 00:03:29,427
list.

82
00:03:29,438 --> 00:03:30,908
So I even had some comparisons,

83
00:03:30,917 --> 00:03:33,078
which is funny because the list are the freaking same.

84
00:03:33,087 --> 00:03:37,147
Basically, I took them and broke them down into kind of categories.

85
00:03:37,158 --> 00:03:38,197
And I think I called it the O

86
00:03:38,367 --> 00:03:38,378
A

87
00:03:38,527 --> 00:03:39,507
top four.

88
00:03:39,688 --> 00:03:40,037
And

89
00:03:40,296 --> 00:03:44,345
yeah, a significant number of the problems are solved by using

90
00:03:44,555 --> 00:03:49,065
-- not see and the web framework,
-- maybe even at a higher level,

91
00:03:49,276 --> 00:03:51,776
the majority of these problems are solved by

92
00:03:51,785 --> 00:03:54,666
using a tool that already solved these problems.

93
00:03:54,675 --> 00:03:54,975
-- I
-- mean,

94
00:03:54,985 --> 00:03:59,466
that's a good point. That's true. That's the reason Rust exists. Basically.

95
00:03:59,475 --> 00:04:01,645
I, I love the fact that, you know, we're,

96
00:04:01,656 --> 00:04:04,326
we're finally getting languages where it's like memory management.

97
00:04:04,335 --> 00:04:04,485
Yeah.

98
00:04:04,496 --> 00:04:07,554
No, like it just does it, you know, we've had that for a long time,

99
00:04:07,563 --> 00:04:10,134
but performance has always been somewhat of a concern.

100
00:04:10,184 --> 00:04:13,014
-- It has. That's been the kicker,
-- right?

101
00:04:13,024 --> 00:04:16,553
Realistically, we've gotten past that where you can write high performance,

102
00:04:16,563 --> 00:04:20,563
like really ridiculously high performance code now in memory safe languages.

103
00:04:20,574 --> 00:04:21,213
Well, some of them,

104
00:04:21,223 --> 00:04:27,253
the thing to remember too about Rust is Rust is a unique beast because

105
00:04:27,264 --> 00:04:31,773
they kind of took a different attitude to memory safety where there's the Java

106
00:04:32,144 --> 00:04:34,123
kind of universe and this, I think

107
00:04:34,411 --> 00:04:38,141
small talk is really where it came from of you have your language

108
00:04:38,381 --> 00:04:42,641
and you put absolutely no effort into memory management and the system,

109
00:04:42,791 --> 00:04:46,582
there's, there's a magic dwarf in a box behind the wall

110
00:04:47,402 --> 00:04:48,541
and he does it all.

111
00:04:48,552 --> 00:04:52,141
And I mean, Rust has the attitude of, you can kind of,

112
00:04:52,152 --> 00:04:55,131
sort of tell me what to do here and I'll make sure you

113
00:04:55,141 --> 00:04:59,182
don't shoot yourself in the leg because you really just have a nerf gun

114
00:04:59,312 --> 00:05:01,261
even though you don't really know that.

115
00:05:01,910 --> 00:05:05,470
And I, I think that's the correct way to do it because I think, I mean,

116
00:05:05,480 --> 00:05:07,630
from a purely computer science perspective,

117
00:05:08,029 --> 00:05:09,269
there was a very,

118
00:05:09,320 --> 00:05:12,709
we're going to build like the ultimate machine that will make

119
00:05:12,720 --> 00:05:14,670
all the right choices and do all the right things.

120
00:05:14,679 --> 00:05:17,540
And the reality is humans program and we suck.

121
00:05:17,549 --> 00:05:21,350
So everything is programmed terribly. And if we rely on magic

122
00:05:21,470 --> 00:05:22,149
it,

123
00:05:22,299 --> 00:05:23,429
it's like you,

124
00:05:23,440 --> 00:05:25,420
you've dumped in a bunch of Turds and a bunch

125
00:05:25,429 --> 00:05:27,950
of magic and now you just have Turd covered magic.

126
00:05:27,959 --> 00:05:31,916
Well, but I mean, when you look at the quality of most software, most programmers,

127
00:05:31,927 --> 00:05:35,587
I think it's fair to say that most programmers lack

128
00:05:35,736 --> 00:05:38,786
-- the skill to actually make these decisions.
-- They all lack them.

129
00:05:38,796 --> 00:05:41,696
Kurt, I'm going to tell you now, like there's, there's people,

130
00:05:41,707 --> 00:05:44,606
there's some who are better than others and I'm not going to deny that.

131
00:05:44,617 --> 00:05:45,766
But functionally speaking,

132
00:05:45,777 --> 00:05:48,687
there is not a programmer on the planet who is programmed

133
00:05:48,696 --> 00:05:52,066
in C or C++ who hasn't added a memory leak accidentally.

134
00:05:52,076 --> 00:05:53,427
-- Absolutely.
-- Right. Exactly.

135
00:05:53,533 --> 00:05:56,093
But it's, it's interesting to me because, like, looking at Rust,

136
00:05:56,104 --> 00:05:57,394
I think two of the biggest things are, you know,

137
00:05:57,403 --> 00:05:59,813
number one obviously is memory safety, right?

138
00:05:59,824 --> 00:06:01,993
I'm not even going to say memory management at this point.

139
00:06:02,003 --> 00:06:04,114
And number two is concurrency because that's the other thing, right?

140
00:06:04,123 --> 00:06:06,473
Software has changed, like it used to be

141
00:06:06,584 --> 00:06:09,074
more than enough to have a single thread,

142
00:06:09,324 --> 00:06:12,683
you know, like a word processor, right? Just waiting for a keystroke input. OK.

143
00:06:12,694 --> 00:06:15,414
I got a keystroke input. What do I do with it? OK. I put it on the screen or?

144
00:06:15,424 --> 00:06:16,044
Oh, no, he's trying

145
00:06:16,194 --> 00:06:16,223
to

146
00:06:16,330 --> 00:06:20,161
a menu through a hot key combo. OK. You know? Oh, he wants to print this thing. OK.

147
00:06:20,170 --> 00:06:23,300
Let's go talk to the angry printer, you know, and that's not enough anymore, right?

148
00:06:23,311 --> 00:06:25,601
Like even a simple application nowadays,

149
00:06:25,610 --> 00:06:27,601
-- pretty much all of them have spell check
-- going.

150
00:06:27,610 --> 00:06:29,330
They all do lots of things.

151
00:06:29,341 --> 00:06:31,751
And part of it is because they can, I mean,

152
00:06:31,770 --> 00:06:38,131
do you remember the days when you had ac pu in a computer and it was ac pu one core,

153
00:06:38,140 --> 00:06:38,941
one thread

154
00:06:39,279 --> 00:06:43,380
and when you had any sort of multitasking it was just the, the,

155
00:06:43,390 --> 00:06:46,369
the operating system quickly switching back and forth between things.

156
00:06:46,640 --> 00:06:50,200
Well, I remember going from Windows 3.11 to Os 22

157
00:06:50,510 --> 00:06:51,880
os 22.

158
00:06:53,320 --> 00:06:56,309
No, it was 2.1. It was not 2.0 it was 2.1

159
00:06:56,450 --> 00:06:59,450
whatever. Os 22 is the best thing you've ever said.

160
00:06:59,549 --> 00:07:04,179
You know, and it blew my mind that like, oh, Windows 3.11 could sort of,

161
00:07:04,190 --> 00:07:06,260
technically you could run more than one program at a time.

162
00:07:06,269 --> 00:07:07,140
But in the sense of like

163
00:07:07,359 --> 00:07:11,059
the program is running, I've sort of put it in this box over here and if you need it,

164
00:07:11,070 --> 00:07:12,130
I can bring it back to you.

165
00:07:12,589 --> 00:07:16,369
Whereas OS two could actually run two programs

166
00:07:16,380 --> 00:07:19,140
at the same time properly without crashing repeatedly.

167
00:07:19,149 --> 00:07:22,940
-- And
-- then Windows 95 came out and ruined it all. Pretty much.

168
00:07:22,950 --> 00:07:23,339
Yes.

169
00:07:23,350 --> 00:07:26,250
And, and the other one being like this, this concurrency thing,

170
00:07:26,519 --> 00:07:27,019
you know, I,

171
00:07:27,029 --> 00:07:29,579
the other day I was doing some work on my computer

172
00:07:29,589 --> 00:07:31,820
and I ended up having to run top to see,

173
00:07:31,829 --> 00:07:32,230
you know,

174
00:07:32,470 --> 00:07:32,869
basically,

175
00:07:32,880 --> 00:07:35,700
I wanted to make sure something was actually using the CPU and

176
00:07:35,709 --> 00:07:38,100
running and doing something because I wasn't sure it was basically,

177
00:07:38,109 --> 00:07:41,450
was the gooey being non responsive and had the program basically crapped itself

178
00:07:41,559 --> 00:07:43,920
or was it actually just thinking it was doing, you know,

179
00:07:43,929 --> 00:07:46,089
apple photos doing facial recognition?

180
00:07:46,100 --> 00:07:46,239
Right.

181
00:07:46,250 --> 00:07:47,170
So when it does that,

182
00:07:47,190 --> 00:07:50,549
it just kind of the whole system grinds to a halt and the app

183
00:07:50,559 --> 00:07:53,600
just sits there and it could have crashed or it could just be processing,

184
00:07:53,609 --> 00:07:55,160
you know, 4000 photos.

185
00:07:55,500 --> 00:07:58,500
So I had to run top and the amount of stuff running on my Mac.

186
00:07:58,510 --> 00:08:01,880
-- Like, I have no idea what any of this is.
-- It is pretty bananas for sure.

187
00:08:01,890 --> 00:08:03,209
Even, even analytic system.

188
00:08:03,220 --> 00:08:07,690
Now, if you're running any sort of desktop, there's a ton of weird stuff there.

189
00:08:07,700 --> 00:08:08,649
Now, this is where

190
00:08:08,779 --> 00:08:09,760
there is a,

191
00:08:10,279 --> 00:08:12,720
I, I'm sure it exists in Homebrew or something,

192
00:08:12,730 --> 00:08:15,339
but there's a command called PS tree where you type PS

193
00:08:15,350 --> 00:08:17,750
tree and it kind of shows you where everything came from.

194
00:08:17,760 --> 00:08:20,920
And that was actually really handy for me yesterday because I

195
00:08:20,929 --> 00:08:24,260
was running some container scanners and there was some stuff running.

196
00:08:24,269 --> 00:08:28,000
I'm like, is that from the container scanner is something wrong?

197
00:08:28,010 --> 00:08:29,970
And so, yeah, like P S3 and I'm like, aha.

198
00:08:29,989 --> 00:08:33,049
Yes, it's the container scanner running Python. It's fine.

199
00:08:33,190 --> 00:08:35,260
The other thing too is one thing that

200
00:08:35,419 --> 00:08:35,429
a

201
00:08:35,640 --> 00:08:38,080
lot of people don't make the distinction between code that is

202
00:08:38,090 --> 00:08:41,308
sort of safety or security critical and code that can be,

203
00:08:41,320 --> 00:08:42,830
you know, maybe a bit more me,

204
00:08:42,969 --> 00:08:44,520
whatever. If it fails, it fails,

205
00:08:44,840 --> 00:08:45,109
you know.

206
00:08:45,119 --> 00:08:47,429
So there's things in your computer, like your, your computer,

207
00:08:47,440 --> 00:08:49,409
the kernel of the operating system or,

208
00:08:49,530 --> 00:08:50,789
you know, the networking code,

209
00:08:50,799 --> 00:08:53,330
things like that where you really want them to run reliably.

210
00:08:53,340 --> 00:08:54,760
But do you remember that episode?

211
00:08:54,770 --> 00:08:58,830
We had a while back where we talked about the security issue in the beep command on

212
00:08:58,940 --> 00:08:59,390
Debian.

213
00:09:01,460 --> 00:09:01,780
Well,

214
00:09:03,000 --> 00:09:05,770
I, I think all seriousness,

215
00:09:05,780 --> 00:09:09,469
I think that's an attitude that also needs to die eventually is saying, oh,

216
00:09:09,479 --> 00:09:10,549
this code is important.

217
00:09:10,559 --> 00:09:13,309
This code isn't the code that isn't important could

218
00:09:13,320 --> 00:09:16,489
be important someday and so treating it like just,

219
00:09:16,500 --> 00:09:18,489
you know, some, some gremlin we hate.

220
00:09:18,500 --> 00:09:19,289
That's bad.

221
00:09:19,299 --> 00:09:22,479
Well, but from like a resource allocation perspective,

222
00:09:22,489 --> 00:09:23,809
I would rather they spend time, you know,

223
00:09:23,820 --> 00:09:25,919
locking down the kernel than locking down beep.

224
00:09:25,929 --> 00:09:26,270
I mean,

225
00:09:26,940 --> 00:09:28,080
you, you'd think

226
00:09:29,320 --> 00:09:30,739
that's fair. That's fair.

227
00:09:30,950 --> 00:09:33,669
Well, it's not, I'm not saying this code isn't at

228
00:09:33,859 --> 00:09:36,479
all important or can't have a security impact.

229
00:09:36,489 --> 00:09:38,450
But like a great example is in windows.

230
00:09:38,460 --> 00:09:41,429
You know, for apparently some historical reason,

231
00:09:41,590 --> 00:09:44,979
font handling is done in the kernel. I thought they took that out.

232
00:09:45,000 --> 00:09:46,609
Well, and if they did then good,

233
00:09:46,619 --> 00:09:48,900
then they made the right choice and they put the effort into that.

234
00:09:48,909 --> 00:09:50,280
And that's a great example of, you know,

235
00:09:50,289 --> 00:09:52,080
where I want them to allocate their resources

236
00:09:52,090 --> 00:09:54,580
because I don't want some wonky character set,

237
00:09:54,590 --> 00:09:57,159
owning my system, like, has happened in the past.

238
00:09:57,200 --> 00:10:00,234
-- Right. Right.
-- You know, through web browsers and whatnot.

239
00:10:00,244 --> 00:10:04,594
Well, and it's also really difficult because true type fonts are turning complete,

240
00:10:04,604 --> 00:10:05,994
which most people don't realize,

241
00:10:06,275 --> 00:10:09,135
I think at this point anything that is interesting,

242
00:10:09,275 --> 00:10:09,474
ends up

243
00:10:09,594 --> 00:10:10,554
being turn complete.

244
00:10:11,375 --> 00:10:12,994
That's actually really true.

245
00:10:13,005 --> 00:10:15,674
I mean, postscript was turning complete pretty much from day one.

246
00:10:15,804 --> 00:10:16,875
Yeah, you're right.

247
00:10:17,034 --> 00:10:18,244
You're right.

248
00:10:18,255 --> 00:10:19,844
That's just sort of, unfortunately,

249
00:10:19,854 --> 00:10:23,974
the nature of any compute thing is it just ends up being turn complete real quick.

250
00:10:23,984 --> 00:10:27,984
-- Everything turns into emacs eventually. Well,
-- or powerpoint or

251
00:10:28,820 --> 00:10:32,820
the guy that made a computer using Excel and color changing cells.

252
00:10:32,830 --> 00:10:34,039
-- I haven't heard of
-- this.

253
00:10:34,049 --> 00:10:36,700
Powerpoint is turing complete in the sense of

254
00:10:36,710 --> 00:10:39,200
you can have like objects interact with themselves and

255
00:10:39,679 --> 00:10:42,260
-- images and stuff.
-- I mean, that doesn't surprise you.

256
00:10:42,270 --> 00:10:46,159
There, there's the weird people who figured out how to make the game magic,

257
00:10:46,169 --> 00:10:48,469
the gathering into a general purpose

258
00:10:48,770 --> 00:10:50,549
processor. I mean, you can,

259
00:10:50,950 --> 00:10:53,770
yeah, whatever, everything eventually gets

260
00:10:54,020 --> 00:10:56,239
complex enough, you can build a processor with it.

261
00:10:56,250 --> 00:11:01,130
There's the Minecraft computer processors where there was the guy who programmed

262
00:11:01,359 --> 00:11:05,210
an Atari 2600 in Minecraft, which was

263
00:11:05,630 --> 00:11:08,210
-- ridiculous
-- using Redstone or something else

264
00:11:08,320 --> 00:11:13,072
-- with Redstone.
-- Yes. He basically emulated in a Tari 2600 in Minecraft.

265
00:11:13,083 --> 00:11:15,492
And then I think he played Donkey Kong with it. Like

266
00:11:15,593 --> 00:11:16,672
just what

267
00:11:16,853 --> 00:11:18,913
I'm, I'm always impressed and jealous

268
00:11:19,143 --> 00:11:21,593
and I'm jealous because I don't have that kind of free time

269
00:11:22,203 --> 00:11:26,593
because the dedication it takes to actually follow through on that is absurd.

270
00:11:26,922 --> 00:11:29,033
What got me was building the tree house.

271
00:11:29,333 --> 00:11:31,395
It needed a bit of a foundation, right?

272
00:11:31,406 --> 00:11:34,716
Because the tree is big, but it's not big enough to like just stick a house on it,

273
00:11:34,776 --> 00:11:35,176
right?

274
00:11:35,185 --> 00:11:38,616
It's not one of those giant trees. So it's got like a nice y

275
00:11:38,825 --> 00:11:41,325
you know, fork in it that I rested one of the beams on.

276
00:11:41,335 --> 00:11:43,505
So basically the tree is one corner of the house.

277
00:11:43,645 --> 00:11:47,255
And so I used four by four. So four inch by four inch as sort of the post.

278
00:11:47,265 --> 00:11:49,216
So there's three posts in the tree to make a square

279
00:11:49,395 --> 00:11:51,296
because squares are easy to build.

280
00:11:52,299 --> 00:11:53,159
Not a perfect square.

281
00:11:53,169 --> 00:11:55,179
-- Mind you, that's, that's basically impossible to build, but
-- it

282
00:11:56,690 --> 00:11:56,710
is,

283
00:11:56,979 --> 00:11:57,099
it's

284
00:11:57,330 --> 00:12:00,719
a lumpy square I would go with, but it doesn't really matter because

285
00:12:01,109 --> 00:12:05,250
as long as the two cross beams on top are level and you know,

286
00:12:05,260 --> 00:12:07,080
reasonably parallel and far apart,

287
00:12:07,260 --> 00:12:09,340
you know, you just drop your platform on top of that,

288
00:12:09,630 --> 00:12:13,210
right? And who cares? So there's an eight by 8 ft platform sitting on top of all that.

289
00:12:13,219 --> 00:12:16,409
The uh the three posts originally, I was looking, you know, classically at like, OK,

290
00:12:16,419 --> 00:12:20,349
I got to like rent an auger, I got to drill this like 3 ft hole times three, you know,

291
00:12:20,359 --> 00:12:24,419
put in a concrete form, go get, you know, a couple 100 pounds of concrete blah, blah,

292
00:12:24,429 --> 00:12:24,669
blah.

293
00:12:24,989 --> 00:12:26,869
And I'm like, that's a lot of work. Yes,

294
00:12:26,979 --> 00:12:27,419
it is.

295
00:12:27,650 --> 00:12:29,729
And so I looked at alternative solutions

296
00:12:29,929 --> 00:12:32,150
and now it turns out there's a much better thing,

297
00:12:32,159 --> 00:12:34,330
there's this thing called an easy spike.

298
00:12:34,400 --> 00:12:36,919
And the old easy spikes are basically what exactly, what they sound like.

299
00:12:36,929 --> 00:12:41,989
It's about a 2.5 ft long metal spike with a metal

300
00:12:42,000 --> 00:12:43,869
cup on the end that holds the four by four,

301
00:12:43,880 --> 00:12:44,010
right?

302
00:12:44,020 --> 00:12:46,409
And so you're basically balancing into the ground with a sledgehammer and

303
00:12:46,419 --> 00:12:48,849
put your post on it and then there's a newer version,

304
00:12:48,859 --> 00:12:50,650
which has an adjustable top.

305
00:12:50,659 --> 00:12:52,679
So you loosen a bolt and it can wiggle around

306
00:12:52,690 --> 00:12:54,979
and move about five or 10 degrees in every direction.

307
00:12:55,169 --> 00:12:57,409
Because here's the thing, when you drive a spike into the ground,

308
00:12:57,419 --> 00:12:58,890
are you going to get it perfectly vertical?

309
00:12:58,900 --> 00:13:03,929
-- No, nobody will.
-- More importantly is if you drive it into the ground

310
00:13:04,349 --> 00:13:06,900
and you said it goes in a couple of feet,

311
00:13:07,099 --> 00:13:08,059
about 2.5 ft

312
00:13:08,309 --> 00:13:11,419
and then it's got like a metal cup on the top that sits on the ground.

313
00:13:11,440 --> 00:13:11,460
Yeah,

314
00:13:11,469 --> 00:13:15,710
but it doesn't matter because what's going to happen is the frost in the winter.

315
00:13:15,719 --> 00:13:20,159
Most people don't realize how much the ground moves when it freezes, but it will.

316
00:13:20,460 --> 00:13:22,900
So what's going to happen is the end of the part of your

317
00:13:22,909 --> 00:13:25,739
house attached to the tree isn't going to move because the tree is big

318
00:13:26,210 --> 00:13:29,330
and then the part you have on these posts is going to

319
00:13:29,340 --> 00:13:33,429
rise up probably between one and three inches in the winter,

320
00:13:33,440 --> 00:13:35,929
depending upon how much moisture you have in your soil.

321
00:13:35,940 --> 00:13:37,049
But anyways, the point is

322
00:13:37,299 --> 00:13:38,090
you pound this

323
00:13:38,239 --> 00:13:41,030
easy spike into the ground and then you loosen a bolt,

324
00:13:41,200 --> 00:13:43,859
you adjust it to get it vertical, you tighten the bolt

325
00:13:44,000 --> 00:13:46,969
and to put in three of these easy spikes into the ground and get them all adjusted.

326
00:13:46,979 --> 00:13:50,859
-- Took me like a total of two hours as opposed
-- to three days or

327
00:13:51,229 --> 00:13:53,659
concrete footings. And

328
00:13:53,770 --> 00:13:53,820
so

329
00:13:53,922 --> 00:13:57,023
you know, the simple point is there's better tooling available.

330
00:13:57,033 --> 00:13:57,882
It's like a framework.

331
00:13:57,893 --> 00:14:01,252
It's, there's better stuff available than doing it the old fashioned way.

332
00:14:01,273 --> 00:14:03,663
That's true of everything ever.

333
00:14:03,672 --> 00:14:05,752
I mean, you look at cars today, you look at,

334
00:14:05,763 --> 00:14:07,802
we were just talking about plumbing yesterday.

335
00:14:08,302 --> 00:14:08,612
I mean,

336
00:14:08,622 --> 00:14:09,942
plumbing is a great example where the

337
00:14:09,953 --> 00:14:12,343
plumbing technology available today versus say,

338
00:14:12,353 --> 00:14:13,812
like my house is 100 years old.

339
00:14:13,822 --> 00:14:16,812
I have a 100 year old plumbing in my house. It's horrific. I do not have lead.

340
00:14:16,822 --> 00:14:18,783
That was the first thing. Well,

341
00:14:19,103 --> 00:14:23,176
that was the first thing I checked when I moved in after I got asbestos taken out.

342
00:14:23,265 --> 00:14:25,776
Well, you know, it's funny to me about lead pipes is old,

343
00:14:25,786 --> 00:14:29,315
lead pipes are safe because the calcium build up inside the pipe covers it.

344
00:14:29,325 --> 00:14:30,835
Well, I still wouldn't want them.

345
00:14:30,846 --> 00:14:34,455
But yes, old lead pipes are generally relatively safe.

346
00:14:34,716 --> 00:14:39,695
-- Yeah, until you put, like acid down them or whack them with a hammer. Right.
-- Exactly.

347
00:14:39,705 --> 00:14:44,075
-- I mean, I still wouldn't keep them in my house if, if I had them. But.
-- Right.

348
00:14:44,085 --> 00:14:47,366
Well, dirty secret. A lot of supply lines in the US are still lead.

349
00:14:47,375 --> 00:14:49,575
-- Not
-- where I live at the moment.

350
00:14:49,960 --> 00:14:54,250
They did replace all the supply lines in the, in this old neighborhood I live in.

351
00:14:54,260 --> 00:14:57,739
Now I know in the city next to me

352
00:14:57,929 --> 00:15:00,580
they just got a grant from the federal government to

353
00:15:00,590 --> 00:15:03,909
replace the remaining lead pipes they have in the ground.

354
00:15:03,919 --> 00:15:05,599
Which is, I mean, that seems mind boggling.

355
00:15:05,609 --> 00:15:10,390
-- We've known lead is dangerous for 100 years.
-- We banned it in gasoline as an additive.

356
00:15:10,400 --> 00:15:15,190
-- Granted that took way too long
-- and paint and all kinds of this stuff. I mean, yeah.

357
00:15:15,500 --> 00:15:16,780
Oh, I remember that whole thing. Yeah.

358
00:15:16,789 --> 00:15:17,570
Don't, was it,

359
00:15:17,580 --> 00:15:20,609
don't chew on your blinds because they have paint that's contains lead.

360
00:15:20,619 --> 00:15:24,130
-- I remember as a child it was always window blinds. was the thing,
-- window blinds. Hey,

361
00:15:24,270 --> 00:15:25,609
-- yeah,
-- with lead covered paint,

362
00:15:25,619 --> 00:15:28,010
the technology moves forward.

363
00:15:28,020 --> 00:15:32,059
I think you could easily make the argument that like let's look at the Linux kernel,

364
00:15:32,070 --> 00:15:34,250
the Linux kernel was created in

365
00:15:34,380 --> 00:15:37,320
what? 92? Probably give or take

366
00:15:37,679 --> 00:15:38,729
94. I

367
00:15:39,390 --> 00:15:43,359
mean, somewhere in there it's written in C because I mean, quite frankly, when,

368
00:15:43,369 --> 00:15:46,020
when Linus built it c was what you used

369
00:15:46,159 --> 00:15:49,840
there literally was no other tool theoretically, you could have built it in list.

370
00:15:49,849 --> 00:15:50,320
But

371
00:15:50,599 --> 00:15:50,820
yeah,

372
00:15:50,830 --> 00:15:52,900
we'll just say C was the only tool because

373
00:15:52,909 --> 00:15:56,840
you could argue for hours about other obscure languages.

374
00:15:56,849 --> 00:15:57,609
But functionally,

375
00:15:57,619 --> 00:16:01,616
-- if you were writing an operating system in the early nineties wrote it in C
-- Well, no,

376
00:16:01,625 --> 00:16:04,176
no, no, if you were writing any program of size.

377
00:16:04,325 --> 00:16:06,515
Yeah, that's probably true because really, I mean,

378
00:16:06,526 --> 00:16:08,736
did Java even exist at that point?

379
00:16:08,745 --> 00:16:11,755
And even then Java was very slow when it first came out.

380
00:16:11,765 --> 00:16:12,955
Well, I, you know,

381
00:16:12,966 --> 00:16:14,596
the biggest thing I remember about Java originally

382
00:16:14,606 --> 00:16:16,536
is how many different Java interpreters were there.

383
00:16:16,546 --> 00:16:20,356
I remember people working on Java code base where it's like you install the,

384
00:16:20,366 --> 00:16:22,966
what was it, Norton or Semantic Java, you can't install the

385
00:16:23,072 --> 00:16:25,432
one like ours is not compatible with it.

386
00:16:25,541 --> 00:16:28,031
They were all different, even, even the sun one man,

387
00:16:28,041 --> 00:16:30,031
it was different between architecture,

388
00:16:30,041 --> 00:16:34,111
sometimes depending upon what you were doing where it acted different on windows.

389
00:16:34,122 --> 00:16:36,221
Yeah, exactly. So, I mean, c was

390
00:16:36,361 --> 00:16:37,851
the only thing that had a hope

391
00:16:38,062 --> 00:16:42,921
of sort of cross platform and actually freely available tooling thanks to the

392
00:16:43,052 --> 00:16:45,611
-- GNU project.
-- And, and so you figure

393
00:16:46,039 --> 00:16:47,099
it has been

394
00:16:47,250 --> 00:16:50,890
decades since then and we're still running

395
00:16:51,229 --> 00:16:55,020
a Linux kernel built on sea and you could easily make the argument of, oh,

396
00:16:55,030 --> 00:16:56,510
you could build it with something else and it

397
00:16:56,520 --> 00:16:58,289
would be better and in some ways it would,

398
00:16:58,460 --> 00:16:58,989
but

399
00:16:59,140 --> 00:17:03,539
you would lose the obscene amount of backwards compatibility and just

400
00:17:04,489 --> 00:17:07,530
-- battle testing of the corner cases.
-- Yeah. Right. Right.

401
00:17:07,703 --> 00:17:11,203
So, like there, there's some instances where you could maybe make that argument.

402
00:17:11,374 --> 00:17:14,453
-- Well, like
-- how often, I mean, you remember back when we worked at that company,

403
00:17:14,463 --> 00:17:14,644
you know,

404
00:17:14,654 --> 00:17:17,114
somebody would make a minor tweak to the Linux kernel that nobody

405
00:17:17,124 --> 00:17:18,743
thought was a big deal and then it turns out that,

406
00:17:18,753 --> 00:17:20,713
oh, it, like, totally destroys performance for this.

407
00:17:20,953 --> 00:17:22,792
I don't want to say corner case because it's actually

408
00:17:22,803 --> 00:17:25,163
something like 20% of the internet needs to work.

409
00:17:25,563 --> 00:17:26,374
Right. Yep.

410
00:17:26,713 --> 00:17:29,114
Yep. I remember weird things like that. It's

411
00:17:29,910 --> 00:17:32,020
like some of the security patches where it's like, well,

412
00:17:32,030 --> 00:17:33,290
this fixes the security problem.

413
00:17:33,300 --> 00:17:37,089
But I mean, my favorite was uh yeah, it was um the stack guard stuff.

414
00:17:37,099 --> 00:17:38,829
The initial research said, OK,

415
00:17:38,839 --> 00:17:42,609
like one megabyte stack guard page should work and then, you know, no,

416
00:17:42,619 --> 00:17:43,209
that's not gonna work.

417
00:17:43,219 --> 00:17:45,310
You need like a three gigabyte stack guard page,

418
00:17:45,319 --> 00:17:48,890
which means you can run like three processes on a 32 bit system now.

419
00:17:48,989 --> 00:17:51,290
Right. Right. And it was like that, that's going to be a problem.

420
00:17:51,300 --> 00:17:53,449
You need more than three processes on a system.

421
00:17:53,670 --> 00:17:54,040
Ok.

422
00:17:54,050 --> 00:17:54,410
I don't want,

423
00:17:54,420 --> 00:17:57,119
I don't want to get too much in the weeds on the Linux kernel because we're

424
00:17:57,223 --> 00:17:58,723
talking about tooling.

425
00:17:58,733 --> 00:18:02,603
-- Well, the point
-- being is that something like Rust doesn't have these issues,

426
00:18:02,613 --> 00:18:04,983
it just that this class of problem just

427
00:18:05,113 --> 00:18:09,312
-- doesn't exist,
-- it has issues, it just doesn't have these issues.

428
00:18:09,572 --> 00:18:10,162
I mean,

429
00:18:10,652 --> 00:18:13,083
-- that's, that's one of the challenges,
-- but here's the question.

430
00:18:13,093 --> 00:18:17,133
Does Rust have more issues overall or less issues overall than C I mean,

431
00:18:17,142 --> 00:18:19,243
so I wouldn't, I wouldn't think of it that way.

432
00:18:19,253 --> 00:18:20,162
I would say

433
00:18:20,463 --> 00:18:23,642
that Rust solves the problems we know about.

434
00:18:23,843 --> 00:18:24,363
But as,

435
00:18:24,536 --> 00:18:27,276
and as you start using it, you're going to find new problems,

436
00:18:27,286 --> 00:18:28,735
you didn't even know you had.

437
00:18:28,745 --> 00:18:30,676
And I, I've got a great example for this.

438
00:18:30,686 --> 00:18:36,235
So I've worked on projects that let's say didn't have proper authentication.

439
00:18:36,336 --> 00:18:36,836
Right.

440
00:18:37,046 --> 00:18:38,395
So everyone

441
00:18:38,615 --> 00:18:41,916
just comes to you and says, you need to add authentication,

442
00:18:41,926 --> 00:18:45,475
you need security on this thing because I'm, I'm basically building my own with,

443
00:18:45,485 --> 00:18:46,475
with proxies.

444
00:18:46,485 --> 00:18:50,255
So this isn't working at all, figure something out and make this work.

445
00:18:50,265 --> 00:18:51,745
And that's the only thing you hear.

446
00:18:52,010 --> 00:18:55,829
So we build authentication into the system. You get authentication.

447
00:18:55,839 --> 00:18:59,359
Now, since nobody has to harass you about authentication,

448
00:18:59,369 --> 00:19:03,810
now you have 30 different asks, whereas you used to have one,

449
00:19:03,819 --> 00:19:06,310
this is going to be the same thing with something like rust.

450
00:19:06,319 --> 00:19:08,709
So let's say you have people coming and saying, oh,

451
00:19:08,790 --> 00:19:11,199
we need memory safety and memory safety and memory safety.

452
00:19:11,209 --> 00:19:14,300
And you could easily say that because memory safety is probably

453
00:19:14,310 --> 00:19:17,829
the biggest problem in computing today or it used to be.

454
00:19:17,839 --> 00:19:18,290
We'll say

455
00:19:18,430 --> 00:19:22,699
we've definitely spent several 100 thousands of people years

456
00:19:22,800 --> 00:19:25,329
-- working on it.
-- So now you have memory safety

457
00:19:25,760 --> 00:19:28,170
check that box. Now, what do you care about?

458
00:19:28,180 --> 00:19:31,280
And like you might care about concurrency, I might care about.

459
00:19:31,290 --> 00:19:31,359
Yeah,

460
00:19:31,369 --> 00:19:34,219
-- but
-- you're at least moving the ball forwards like you're moving the game forwards.

461
00:19:34,229 --> 00:19:36,160
Right? No. Absolutely. Absolutely.

462
00:19:36,189 --> 00:19:39,540
But my point is this is, I mean, this is one of the challenges though when you're,

463
00:19:39,550 --> 00:19:43,250
when you're building new things is you solve one large problem

464
00:19:43,439 --> 00:19:47,790
and now you have 10 slightly smaller problems that are next

465
00:19:47,800 --> 00:19:49,859
and then you solve some of those and it's like this,

466
00:19:49,869 --> 00:19:51,630
this expanding tree.

467
00:19:51,699 --> 00:19:54,849
-- Well, but that's just how progress works. I mean,
-- it is. Absolutely.

468
00:19:55,430 --> 00:19:58,890
I mean, you know, that's what gets me about, like, a lot of these stalwarts of,

469
00:19:58,900 --> 00:20:00,560
you know, various computing technologies.

470
00:20:00,569 --> 00:20:00,739
It's,

471
00:20:00,979 --> 00:20:01,540
you know, they're like, oh,

472
00:20:01,550 --> 00:20:03,219
I don't want to use this new thing because you have new problems.

473
00:20:03,229 --> 00:20:06,109
Well, yes, but we also get rid of old problems. We get new capabilities

474
00:20:06,619 --> 00:20:09,689
and, you know, these people that are still, like, I look at things like,

475
00:20:09,699 --> 00:20:12,729
pretty much everything still written in C and C++ still, you know,

476
00:20:12,739 --> 00:20:16,089
we're seeing CV S for very well known memory safety related issues.

477
00:20:16,099 --> 00:20:19,829
Yeah, they'll never go away if you have c you have memory safety problems.

478
00:20:19,839 --> 00:20:23,030
I mean, the end of story, there's, there's absolutely no way to get rid of them.

479
00:20:23,040 --> 00:20:23,880
There, there are some

480
00:20:24,140 --> 00:20:27,839
is you can use the kind of abstracted away and solve like 90 some percent of it.

481
00:20:27,849 --> 00:20:29,790
But again, people just don't want to make that change.

482
00:20:29,800 --> 00:20:30,819
Like I remember, well,

483
00:20:30,829 --> 00:20:35,750
somebody I worked with who had to deal with people who refused categorically to use,

484
00:20:35,760 --> 00:20:35,959
make

485
00:20:36,079 --> 00:20:38,540
S temp because it wasn't quote unquote portable enough.

486
00:20:38,550 --> 00:20:41,469
And this is back in the, you know, late nineties, early two thousands.

487
00:20:41,810 --> 00:20:45,359
-- And they were like, every modern operating system has make secure
-- temp,

488
00:20:45,369 --> 00:20:46,199
but it's not pos

489
00:20:46,819 --> 00:20:47,880
-- exactly,
-- it's not pos

490
00:20:48,150 --> 00:20:50,890
and some older systems may not have it. And it's like, well, if

491
00:20:51,300 --> 00:20:52,400
you could just, if def

492
00:20:52,560 --> 00:20:54,910
-- that
-- I solved this a long time ago.

493
00:20:54,920 --> 00:20:58,030
So I used to work on a mail system called NH,

494
00:20:58,050 --> 00:21:00,900
and I was one of the upstream developers for NH.

495
00:21:00,910 --> 00:21:03,869
And I mean, this was, we're talking like more than a decade, right.

496
00:21:04,020 --> 00:21:07,869
And NH, was this ridiculous mail handling program that it was,

497
00:21:08,260 --> 00:21:11,280
it's almost undescribable. Weird what it is.

498
00:21:11,439 --> 00:21:14,550
-- Oh, it's a G new project. That's why
-- it's not a GNU project.

499
00:21:14,560 --> 00:21:16,550
It was, it actually has its,

500
00:21:16,560 --> 00:21:19,900
you can trace its history back to the RAND Corporation in the seventies.

501
00:21:19,910 --> 00:21:22,410
Well, that explains it's, it's hard core man.

502
00:21:22,660 --> 00:21:23,439
So anyway,

503
00:21:23,449 --> 00:21:26,839
we would get into these long arguments about adding

504
00:21:26,859 --> 00:21:30,800
support for some library or function or something that

505
00:21:30,930 --> 00:21:32,800
someone would inevitably say,

506
00:21:32,930 --> 00:21:37,810
but this doesn't work on like some sun machine from 1995

507
00:21:38,050 --> 00:21:39,920
and the argument eventually became

508
00:21:40,099 --> 00:21:41,150
OK, great.

509
00:21:41,385 --> 00:21:45,704
Then just don't ever upgrade. NH you keep running the old version of

510
00:21:45,954 --> 00:21:48,694
NH we're going to march forward by adding, you know,

511
00:21:48,704 --> 00:21:50,484
support for things like make us temp that.

512
00:21:50,494 --> 00:21:52,834
Yes, it is not available on this old version of Solaris

513
00:21:53,015 --> 00:21:53,984
and we don't care.

514
00:21:53,994 --> 00:21:56,375
-- Well, and
-- there used to be a lot more diversity in the industry, right?

515
00:21:56,385 --> 00:21:57,714
Like I remember, you know, HX

516
00:21:58,025 --> 00:21:58,145
A I,

517
00:21:58,395 --> 00:22:00,045
all that stuff was actually,

518
00:22:00,290 --> 00:22:01,829
I don't want to say widely used, but, you know,

519
00:22:01,839 --> 00:22:03,739
more than single digit percentage wise.

520
00:22:03,859 --> 00:22:07,430
Whereas now it's what Linux is probably 90 some percent

521
00:22:07,439 --> 00:22:10,380
followed by like a little bit of maybe free BS D

522
00:22:10,969 --> 00:22:12,630
and then Solaris, I guess.

523
00:22:13,290 --> 00:22:13,989
And then

524
00:22:16,189 --> 00:22:16,199
A

525
00:22:16,660 --> 00:22:18,069
it's Linux, it's all Linux

526
00:22:18,189 --> 00:22:18,530
now. Draw

527
00:22:19,359 --> 00:22:19,650
blank.

528
00:22:20,030 --> 00:22:22,949
And so I think the arguments are different these days than they used to be.

529
00:22:22,959 --> 00:22:26,449
I mean, I mean, back then we literally had people developing NH on Solaris, right?

530
00:22:26,459 --> 00:22:29,239
We had people like, I was using Linux, we had people using BSD.

531
00:22:29,250 --> 00:22:32,530
-- So well,
-- I owned a Solaris box at one point. I

532
00:22:32,540 --> 00:22:33,089
-- have
-- never

533
00:22:33,099 --> 00:22:33,890
owned one.

534
00:22:33,900 --> 00:22:38,579
Like I had a pizza box. That's awesome. You know, I got it used for like, 500 bucks.

535
00:22:39,540 --> 00:22:41,439
I don't even want to think about what it costs new. Right.

536
00:22:41,449 --> 00:22:45,069
And it used $1000 worth of power every year. So you

537
00:22:45,369 --> 00:22:45,819
not too bad,

538
00:22:45,829 --> 00:22:47,390
but basically it had to NFS Mountain

539
00:22:47,400 --> 00:22:49,880
everything because the disc guy always just like

540
00:22:50,130 --> 00:22:50,930
-- that.
-- Awesome.

541
00:22:52,160 --> 00:22:52,839
I remember,

542
00:22:52,849 --> 00:22:58,040
I remember I had a friend giving away some sun gear one time that only ran on 220 volts

543
00:22:58,510 --> 00:22:58,939
and

544
00:22:59,079 --> 00:23:00,000
it was like,

545
00:23:00,239 --> 00:23:02,260
and, and you needed three people to move it.

546
00:23:02,270 --> 00:23:05,060
And I thought part of me thinks it'd be cool to own this.

547
00:23:05,069 --> 00:23:08,489
And a big part of me says don't touch that stuff because it's

548
00:23:08,500 --> 00:23:11,699
going to be a millstone if you ever get it in the house.

549
00:23:11,709 --> 00:23:13,829
-- But
-- it's a floor ballast. Yeah.

550
00:23:13,839 --> 00:23:14,560
Right.

551
00:23:15,520 --> 00:23:16,569
Anyway, anyway,

552
00:23:16,739 --> 00:23:20,119
the point being to all of this conversation I think is

553
00:23:20,130 --> 00:23:22,400
the fact that I think there's two sides to this,

554
00:23:22,410 --> 00:23:25,390
this is how we should kind of wrap this all up is on one end.

555
00:23:25,439 --> 00:23:27,939
I think there's a certain amount of sunk cost fallacy.

556
00:23:28,180 --> 00:23:28,810
And

557
00:23:28,969 --> 00:23:31,969
there's always going to be people that say, oh, this thing is written in C,

558
00:23:31,979 --> 00:23:35,589
this thing is written in C++ and it's really big and we spend all this time

559
00:23:35,599 --> 00:23:38,680
on it and it has all the support and we should keep it around forever.

560
00:23:38,689 --> 00:23:41,150
That's a difficult decision to make because I

561
00:23:41,160 --> 00:23:43,300
think sometimes it's sunk cost fallacy sometimes.

562
00:23:43,310 --> 00:23:44,329
-- Yes, you're absolutely
-- right.

563
00:23:44,339 --> 00:23:48,079
Well, historically, large scale rewrites tend to fail.

564
00:23:48,089 --> 00:23:49,800
I would agree with that one 100%.

565
00:23:49,810 --> 00:23:53,270
-- There's only a handful of large scale rewrites that have been successful.
-- Yeah.

566
00:23:53,354 --> 00:23:55,425
And most of those, even those successful,

567
00:23:55,435 --> 00:23:58,584
it took them like five or 10 years to be successful like it, like Firefox and Mozilla

568
00:23:58,795 --> 00:24:00,214
and all that just about killed them.

569
00:24:00,224 --> 00:24:03,135
I would argue that Firefox did not do a full scale rewrite.

570
00:24:03,145 --> 00:24:08,694
They just slowly, slowly genetically engineered themselves. True.

571
00:24:08,744 --> 00:24:09,864
And, and that's the thing. Right.

572
00:24:09,875 --> 00:24:13,375
-- If you try to do like a full rewrite,
-- well, that's the only way to do a full rewrite.

573
00:24:13,505 --> 00:24:14,805
It's going to take years.

574
00:24:15,025 --> 00:24:15,265
Yeah,

575
00:24:15,474 --> 00:24:17,535
-- it's terrible of
-- any code base of size.

576
00:24:17,545 --> 00:24:18,094
Right. Right.

577
00:24:18,104 --> 00:24:21,869
And actually this is something that makes rust particularly useful in

578
00:24:21,880 --> 00:24:25,660
this space is rust can talk to sea libraries very easily.

579
00:24:25,670 --> 00:24:28,079
So you can start replacing portions of your sea

580
00:24:28,089 --> 00:24:31,709
code with rust and still make it relatively functional.

581
00:24:31,719 --> 00:24:34,829
I mean, you lose some of your memory safety if you're crawling into sea but that's

582
00:24:34,959 --> 00:24:37,349
like, that's probably an acceptable trade off.

583
00:24:37,359 --> 00:24:39,949
-- Well,
-- but you didn't have that to begin with. Right. Yeah, exactly.

584
00:24:39,959 --> 00:24:42,099
-- Like you're not losing anything.
-- I'll agree with that.

585
00:24:42,109 --> 00:24:45,155
There's that sunk cost aspect and I think this is where

586
00:24:45,454 --> 00:24:48,944
it becomes difficult and that's everyone has to make their own decisions.

587
00:24:48,954 --> 00:24:53,844
And then on the other side, I think there's the concept of progress. And

588
00:24:54,295 --> 00:24:57,275
II, I just, I had this conversation literally

589
00:24:57,444 --> 00:25:00,204
20 minutes before we started talking of,

590
00:25:00,214 --> 00:25:03,984
there are always those laggards in every space it is.

591
00:25:04,005 --> 00:25:08,685
I, I always, I always struggle with this. If at some point you just have to say

592
00:25:09,069 --> 00:25:12,969
-- good luck, you're on your own.
-- You know, people who want to ride their horse to work

593
00:25:13,239 --> 00:25:16,530
like no, we're not putting in a stable, like we'll put in a bike lock up. Sure.

594
00:25:16,540 --> 00:25:19,829
Like we can do a bike lock up, but we're not putting in a stable for your horse.

595
00:25:19,839 --> 00:25:23,829
-- And,
-- and that's always my comparison when people say about, oh, self driving cars.

596
00:25:23,839 --> 00:25:25,170
What if, what if I want to drive?

597
00:25:25,180 --> 00:25:27,569
It's like, well, what if you want to ride your horse on the interstate?

598
00:25:27,579 --> 00:25:31,729
You know, you can't, it's illegal and yeah, I, I think that's part of it is

599
00:25:32,069 --> 00:25:34,959
there, there's, there's just always going to be people who don't want to, you know,

600
00:25:34,969 --> 00:25:37,890
that, that talk about, oh, I don't know about this cloud computing thing.

601
00:25:37,900 --> 00:25:38,180
And it's

602
00:25:38,939 --> 00:25:42,680
what, why are we talking about this and I feel like this is,

603
00:25:42,689 --> 00:25:45,250
this is a similar conversation where there's just

604
00:25:45,260 --> 00:25:46,670
always going to be some people who,

605
00:25:46,680 --> 00:25:47,439
who say, oh,

606
00:25:47,699 --> 00:25:51,880
I like c, I don't want to use rust or I'm going to use Java forever or whatever. Right.

607
00:25:51,890 --> 00:25:54,479
They've got their, their pet language they like, and they love

608
00:25:54,609 --> 00:25:55,510
going to keep using it.

609
00:25:55,520 --> 00:26:00,369
And this again is a delicate dance of, at some point you just have to, you know,

610
00:26:00,380 --> 00:26:02,270
cut him off and say good luck.

611
00:26:02,280 --> 00:26:06,790
-- I wish you the best and you got to go forward.
-- Yeah. No, I'm not going to disagree. And

612
00:26:07,010 --> 00:26:11,949
of course, that's easy to say when it's not someone, you know, and like, but yeah,

613
00:26:11,959 --> 00:26:12,589
I don't know.

614
00:26:12,599 --> 00:26:12,949
I don't know.

615
00:26:12,959 --> 00:26:17,089
I think about this one a lot and I don't know if there's ever going to be a right answer.

616
00:26:17,099 --> 00:26:17,270
I,

617
00:26:17,380 --> 00:26:21,349
I think technology just continues to move forward and, and in some places,

618
00:26:21,359 --> 00:26:23,520
things like if you have containers,

619
00:26:23,530 --> 00:26:26,060
memory safety is less dangerous than if you don't.

620
00:26:26,119 --> 00:26:29,239
So now you've got all that kind of stuff to juggle too.

621
00:26:29,250 --> 00:26:32,060
Well, I just, I look at where things have gone and I look at, you know,

622
00:26:32,069 --> 00:26:33,760
I remember back in the day where, what was it?

623
00:26:33,770 --> 00:26:33,949
Like?

624
00:26:33,959 --> 00:26:36,969
One admin could easily or a good admin rather could take

625
00:26:36,979 --> 00:26:39,760
care of about 10 windows servers or 50 UNIX servers.

626
00:26:40,410 --> 00:26:41,040
And now,

627
00:26:41,380 --> 00:26:44,609
-- you know, add three zeros to that,
-- at least,

628
00:26:44,760 --> 00:26:46,520
you know, things like Kubernetes that's

629
00:26:46,739 --> 00:26:47,010
Yeah.

630
00:26:47,020 --> 00:26:48,699
And I mean, you know,

631
00:26:48,709 --> 00:26:51,709
I'm getting all our stuff moved into platform as a service because I just,

632
00:26:51,719 --> 00:26:53,479
I don't want to have to ever deal with servers again.

633
00:26:53,550 --> 00:26:56,719
There's no value for me to add. No, I hear you man.

634
00:26:56,729 --> 00:26:58,859
And so I think that's the other aspect of progress

635
00:26:58,869 --> 00:27:01,689
is that initial progress tends to be expensive and painful.

636
00:27:01,699 --> 00:27:03,459
But then at some point it gets cheap.

637
00:27:03,469 --> 00:27:05,800
Like I look at what cloud hosting costs now compared to.

638
00:27:06,150 --> 00:27:09,079
Well, can you imagine going to somebody 20 years ago and saying basically,

639
00:27:09,089 --> 00:27:11,630
I want to outsource like an entire D C's worth of compute to you.

640
00:27:11,640 --> 00:27:12,469
What's that going to cost me?

641
00:27:12,479 --> 00:27:16,079
And the answer would be, well, it's going to cost you a DC plus, you know,

642
00:27:16,089 --> 00:27:18,099
my margin of 10 or 20%.

643
00:27:19,030 --> 00:27:22,839
And now it's like, well, it's going to cost you a 0.05 cents per hour.

644
00:27:23,219 --> 00:27:24,199
Yes,

645
00:27:24,469 --> 00:27:26,989
absolutely. And yeah. Yeah. Yeah.

646
00:27:27,339 --> 00:27:30,760
And I think even due to this, this is, this is moving a lot of tooling forward.

647
00:27:30,770 --> 00:27:35,280
Things like, I mean, if you, you have platform as a service, no one is

648
00:27:35,729 --> 00:27:37,780
running letting you run C, right?

649
00:27:37,790 --> 00:27:42,469
You're going to be uploading Java or you're going to be uploading no Js or

650
00:27:42,650 --> 00:27:44,099
Python or something, right?

651
00:27:44,140 --> 00:27:45,079
Well, more to the point,

652
00:27:45,089 --> 00:27:46,729
the people who write their stuff and C are not going

653
00:27:46,739 --> 00:27:48,760
to be progressive enough to use platform as a service,

654
00:27:48,770 --> 00:27:52,099
but there are platforms of service that will let you run C and anything you want.

655
00:27:52,109 --> 00:27:52,520
Really?

656
00:27:52,640 --> 00:27:52,819
That's

657
00:27:53,140 --> 00:27:55,250
like some crazy VM that they just have, like,

658
00:27:55,260 --> 00:27:58,319
in its own little zoo away from everybody else

659
00:27:58,609 --> 00:27:59,479
pretty much

660
00:27:59,619 --> 00:28:02,439
anyway. Anyway. All right, we are, we are about out of time.

661
00:28:02,449 --> 00:28:04,750
So I, I think this is an interesting conversation.

662
00:28:04,760 --> 00:28:06,670
I know we'll keep having it forever and I know we've

663
00:28:06,680 --> 00:28:09,060
talked about similar things in the past on the show even.

664
00:28:09,069 --> 00:28:09,439
It's,

665
00:28:09,770 --> 00:28:10,479
it's just,

666
00:28:11,869 --> 00:28:11,890
it

667
00:28:12,160 --> 00:28:12,920
is

668
00:28:13,150 --> 00:28:16,770
the old curse of May you live in interesting times. And I feel like

669
00:28:16,959 --> 00:28:21,869
we are in such an incredible place of disruption right now in technology

670
00:28:21,979 --> 00:28:25,839
and I don't know exactly where it's going to end, but I assure you

671
00:28:26,010 --> 00:28:29,160
c isn't going to win this race so.

672
00:28:29,619 --> 00:28:29,900
Well,

673
00:28:29,910 --> 00:28:31,859
I think to add to that it's not just

674
00:28:31,869 --> 00:28:35,739
the rate of disruption but the adoption of disruption,

675
00:28:36,469 --> 00:28:37,660
you look, there's that great graph.

676
00:28:37,670 --> 00:28:38,859
We should maybe check in here where it showed

677
00:28:38,869 --> 00:28:41,420
the time it took for people to adopt electricity,

678
00:28:41,430 --> 00:28:43,780
radio TV, internet, smartphones.

679
00:28:43,790 --> 00:28:47,979
And I, I would love to see one of those for these kind of core technology pieces,

680
00:28:47,989 --> 00:28:51,755
like the rate of adoption for languages that use garbage collection.

681
00:28:51,775 --> 00:28:55,915
And sadly, that curve is still at the oh, probably 50% mark.

682
00:28:55,925 --> 00:28:57,724
I think that's a big part of it is just not only

683
00:28:57,734 --> 00:29:00,915
the rate of change but the amount of it in technology because,

684
00:29:00,925 --> 00:29:04,204
-- you know, when you look at what's available to us now, how much stuff is on
-- github?

685
00:29:04,395 --> 00:29:05,895
Now, you know what I'm going to,

686
00:29:05,905 --> 00:29:08,854
I don't want to talk about this right now because we're already out of time.

687
00:29:08,864 --> 00:29:09,135
But

688
00:29:09,395 --> 00:29:12,574
I think something to think about and we'll come back to this in the future is

689
00:29:12,869 --> 00:29:12,900
I

690
00:29:13,050 --> 00:29:13,770
don't think the,

691
00:29:13,780 --> 00:29:16,189
the adoption curve is as bad as you say because I bet

692
00:29:16,199 --> 00:29:19,290
if you would count the lines of code written per year,

693
00:29:19,300 --> 00:29:22,189
the number of lines of code written in memory safe languages.

694
00:29:22,199 --> 00:29:27,810
Be it no Js or Ruby or Python or Java or whatever is probably 10,000 to 1

695
00:29:28,250 --> 00:29:28,969
to see

696
00:29:29,420 --> 00:29:30,479
if you look to say github

697
00:29:30,589 --> 00:29:31,130
commits.

698
00:29:31,510 --> 00:29:32,439
I bet you anything.

699
00:29:32,449 --> 00:29:37,060
-- I,
-- I think a more useful metric because that guy did not only lines of code but

700
00:29:37,300 --> 00:29:40,660
for each line of code, how much machine executable stuff does it generate? Right?

701
00:29:40,670 --> 00:29:41,130
Because there's,

702
00:29:41,140 --> 00:29:43,239
there's a big difference between writing a web client

703
00:29:43,250 --> 00:29:45,800
and C and just calling http lib in Python.

704
00:29:46,699 --> 00:29:48,270
Yes, that is also true, you know,

705
00:29:48,280 --> 00:29:50,839
and that was one of my favorite articles to read was pointing out that,

706
00:29:51,030 --> 00:29:51,699
you know, as a,

707
00:29:51,810 --> 00:29:55,219
as a Python developer, I can write you a web client in like what three lines of code.

708
00:29:56,140 --> 00:29:59,459
Yes, there'd be an import, open it up, grab it

709
00:29:59,609 --> 00:30:05,619
-- and doing that and see. No. My answer is no
-- 1000 lines and 12 memory bugs. Anyway,

710
00:30:05,780 --> 00:30:08,339
I'm calling it. This is, this has been a good one.

711
00:30:08,349 --> 00:30:11,089
I got, oh man, you're going to be thinking about this all day now,

712
00:30:11,209 --> 00:30:14,520
so. All right, cool. We'll have plenty of show notes for this one. I'm sure.

713
00:30:14,530 --> 00:30:16,890
So, thank you, Kurt. Thank you very much for listening. You can go to open

714
00:30:17,030 --> 00:30:19,849
source security podcast.com. Hit up the show notes, use the Pound

715
00:30:20,069 --> 00:30:20,109
Oss

716
00:30:20,250 --> 00:30:25,079
podcast. Hashtag Do hit us up on social media. Kurt have a fantastic rest of your day.

717
00:30:25,410 --> 00:30:28,140
You too. Thanks everybody. Thanks everyone. Bye bye

718
00:30:32,680 --> 00:30:32,739
the.