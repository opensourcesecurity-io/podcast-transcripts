0
00:00:05,300 --> 00:00:09,529
Hello and welcome to episode 102 of the open source security podcast with myself,

1
00:00:09,539 --> 00:00:11,970
Kurt Siefried and my partner in Thought Crime, Josh Bresser.

2
00:00:12,329 --> 00:00:15,779
Hey, Kurt. And today we have a guest again, we've got Michael fire

3
00:00:15,880 --> 00:00:17,920
tag here from T Cell. Say hello, Michael.

4
00:00:18,250 --> 00:00:18,840
Hi there.

5
00:00:19,079 --> 00:00:23,309
Awesome. So, so thanks for coming. So I guess let's start here. What does T Cell do?

6
00:00:23,319 --> 00:00:30,180
Sure. So T Cell is a service for any company and team deploying their own web apps or IP

7
00:00:30,280 --> 00:00:31,229
services

8
00:00:31,540 --> 00:00:33,740
and our job is to help protect them

9
00:00:33,750 --> 00:00:35,580
when they're running in a production environment.

10
00:00:35,590 --> 00:00:36,419
And so

11
00:00:36,639 --> 00:00:40,450
it's a combination of what you might be familiar with and web app,

12
00:00:40,459 --> 00:00:42,650
firewalls and rasp technologies.

13
00:00:42,659 --> 00:00:43,659
But fundamentally,

14
00:00:43,669 --> 00:00:48,380
it's a solution for protecting apps usually deployed into cloud environments

15
00:00:48,709 --> 00:00:52,080
with pure software, no network changes or software changes,

16
00:00:52,090 --> 00:00:55,169
just kind of lightweight agents coupled with the cloud service

17
00:00:55,549 --> 00:00:59,889
that when deployed gives our customers visibility into

18
00:01:00,180 --> 00:01:03,119
risk, an attack profile or, or risk profile,

19
00:01:03,130 --> 00:01:06,279
the applications that they're rolling out tells them whether

20
00:01:06,290 --> 00:01:08,879
they're under attack and in what way tells them

21
00:01:08,889 --> 00:01:11,379
whether those attacks are being successful when the app

22
00:01:11,389 --> 00:01:12,959
is starting to do things that it shouldn't do.

23
00:01:13,139 --> 00:01:15,160
And then ultimately gives them the tools to

24
00:01:15,169 --> 00:01:17,379
start prevent those attacks to block the Attackers,

25
00:01:17,389 --> 00:01:18,970
to prevent the app from doing

26
00:01:19,129 --> 00:01:22,879
the wrong thing. And so what it ends up doing is it makes it possible for

27
00:01:23,190 --> 00:01:25,720
teams that are, you know, moving towards

28
00:01:26,193 --> 00:01:27,602
ops adopting cloud technologies,

29
00:01:27,612 --> 00:01:30,133
just basically trying to innovate really quickly with software and trying to

30
00:01:30,142 --> 00:01:34,193
figure out how to do that without security getting in the way.

31
00:01:34,233 --> 00:01:36,593
But also making sure that security actually happens.

32
00:01:36,602 --> 00:01:39,672
-- It's a tool designed to support that
-- one question I have right off the bat.

33
00:01:39,682 --> 00:01:41,752
I've actually, and maybe I'm out of date,

34
00:01:41,763 --> 00:01:44,633
but I've never heard or seen a WAF that has an agent

35
00:01:44,642 --> 00:01:48,032
component like this is an agent running on the web server.

36
00:01:48,042 --> 00:01:51,975
Yeah, it's a great, it's a new, it's a new architecture that we came up with it.

37
00:01:51,986 --> 00:01:53,825
If you're familiar with it,

38
00:01:53,835 --> 00:01:56,736
its closest analogy would be some of

39
00:01:56,746 --> 00:01:58,956
the application performance management tools like new

40
00:01:59,106 --> 00:02:02,575
relic or app dynamics, but applied for security purposes.

41
00:02:02,585 --> 00:02:06,945
So the deployment model is we've got a collection of these lightweight agents.

42
00:02:06,956 --> 00:02:09,305
There are ones that plug into the app servers or

43
00:02:09,315 --> 00:02:11,475
the web servers that you were saying like genetic Apache,

44
00:02:11,485 --> 00:02:13,035
what have you like an Apache mod

45
00:02:13,225 --> 00:02:15,735
that wires it in and connects it to our cloud service,

46
00:02:15,746 --> 00:02:16,985
which does all the heavy lifting.

47
00:02:17,429 --> 00:02:21,970
And then we have a similar set of agents that connect in more at the language level.

48
00:02:22,039 --> 00:02:25,789
So java.net PHP or Python etc

49
00:02:26,529 --> 00:02:27,199
and those,

50
00:02:27,210 --> 00:02:30,889
what those do is give visibility into the internal workings of the application.

51
00:02:30,899 --> 00:02:31,720
So for example,

52
00:02:31,729 --> 00:02:34,660
what third party libraries are getting loaded in what A PS

53
00:02:34,669 --> 00:02:38,470
are registered and exposed queries go to the database os command,

54
00:02:38,479 --> 00:02:38,970
shell commands,

55
00:02:38,979 --> 00:02:42,250
executing all the stuff that you worry about inside of an application.

56
00:02:42,550 --> 00:02:45,089
The app server agents give visibility into it

57
00:02:45,100 --> 00:02:47,889
and it does it with called runtime instrumentation.

58
00:02:47,899 --> 00:02:48,550
Meaning

59
00:02:48,710 --> 00:02:51,979
effectively deploy model is you copy the file on the server,

60
00:02:52,279 --> 00:02:55,740
change an environment variable or your start up script when it comes up,

61
00:02:55,750 --> 00:02:57,490
essentially what T cell is going to do

62
00:02:57,500 --> 00:03:01,179
with the lightweight agent is watch the application load

63
00:03:01,190 --> 00:03:03,729
up and then add hooks wherever you might have

64
00:03:03,740 --> 00:03:07,050
done manually into the service inside the application,

65
00:03:07,110 --> 00:03:10,470
which gives us the ability to generate, you know, custom logs,

66
00:03:10,479 --> 00:03:12,250
stream into the service and then,

67
00:03:12,460 --> 00:03:15,210
you know, do security and policy enforcement within the application.

68
00:03:15,220 --> 00:03:16,289
-- That's
-- really
-- cool.

69
00:03:16,460 --> 00:03:18,729
So, so let's, let's start at the beginning.

70
00:03:18,759 --> 00:03:20,610
How about for the people who don't know you mentioned

71
00:03:20,839 --> 00:03:24,970
W A and rasp, can you define what a WF and a rasp is?

72
00:03:25,539 --> 00:03:29,919
Sure uh although they're kind of moving targets, but I'll give you my definition. So

73
00:03:31,339 --> 00:03:31,470
uh a

74
00:03:31,690 --> 00:03:33,679
web app firewall

75
00:03:33,919 --> 00:03:36,600
is typically it's a proxy

76
00:03:36,889 --> 00:03:37,639
that you know,

77
00:03:37,649 --> 00:03:43,960
an HTP proxy deployed in front of a web application or sometimes an API service

78
00:03:44,279 --> 00:03:48,880
and its job is to inspect HTP requests before they come to your application

79
00:03:49,199 --> 00:03:53,770
and look for request payloads that look bad, right?

80
00:03:53,779 --> 00:03:55,940
So it might include signatures that look like SQL

81
00:03:55,949 --> 00:03:58,300
injection or cross site scripting or things like that.

82
00:03:58,429 --> 00:03:59,339
And then to some extent,

83
00:03:59,350 --> 00:04:03,119
they may inspect the HP responses for patterns that

84
00:04:03,130 --> 00:04:05,210
look like stuff that shouldn't go out the door,

85
00:04:05,220 --> 00:04:07,820
like a credit card number, you know, pattern and so forth.

86
00:04:07,880 --> 00:04:10,809
But basically there are a gate outside of the application,

87
00:04:10,899 --> 00:04:14,800
inspecting things going in and out and doing security enforcement

88
00:04:15,169 --> 00:04:16,000
there. Right.

89
00:04:16,010 --> 00:04:18,320
-- And,
-- and I guess from the traditional sense,

90
00:04:18,329 --> 00:04:21,480
there's no agents running on the end point essentially, right?

91
00:04:21,488 --> 00:04:22,470
It's like a proxy.

92
00:04:22,589 --> 00:04:25,640
Exactly. So, you know, they started off as

93
00:04:25,769 --> 00:04:28,630
the bulk of them still out there are these hardware proxies, you know,

94
00:04:28,640 --> 00:04:31,880
basically a box, you know, so if you're thinking old school,

95
00:04:31,890 --> 00:04:34,970
you've got your rack of Dell servers and you got a, you know,

96
00:04:34,980 --> 00:04:38,000
a load balancer and then you've got a box that's

97
00:04:38,010 --> 00:04:40,109
a web app firewall sitting on top of that stack.

98
00:04:40,200 --> 00:04:45,239
Since then it's migrated towards also having sort of uh cloud based deployment.

99
00:04:45,250 --> 00:04:48,290
So essentially hosted proxies, you know, integrated with their C DNS.

100
00:04:48,649 --> 00:04:52,619
There's web app firewalls that are provided by the

101
00:04:52,829 --> 00:04:55,119
cloud service writers like Amazon and so forth.

102
00:04:55,149 --> 00:04:58,220
But they're all doing the same thing which is, it's basically, it's a proxy, like,

103
00:04:58,230 --> 00:04:59,190
you know, an Apache engine

104
00:04:59,309 --> 00:05:01,480
X under the covers blue code

105
00:05:01,630 --> 00:05:03,910
and it's going to just look at a request

106
00:05:04,190 --> 00:05:04,820
is say,

107
00:05:04,829 --> 00:05:09,359
is this again within the context that one hp transaction try to make a decision.

108
00:05:09,369 --> 00:05:11,869
Is this thing good or bad? And if it's good, it'll pass it through.

109
00:05:11,880 --> 00:05:13,059
And if it's bad it'll drop it

110
00:05:13,730 --> 00:05:14,970
just like a, you know,

111
00:05:14,980 --> 00:05:17,549
lower level like a network proxy would make the same

112
00:05:17,559 --> 00:05:20,179
sort of decision based on the A TCP packet.

113
00:05:20,190 --> 00:05:20,720
So I was gonna ask,

114
00:05:20,730 --> 00:05:24,619
so you'd also mentioned filtering the outgoing stuff for credit cards.

115
00:05:24,630 --> 00:05:25,920
Um I'm curious like is there,

116
00:05:26,170 --> 00:05:29,760
do you sort of have a library of the standard, I guess, list of bad things?

117
00:05:29,769 --> 00:05:32,269
Because I know a lot of apps claim to look for social insurance numbers.

118
00:05:32,279 --> 00:05:36,179
Those look also a lot like phone numbers typically, right? 10 digits in the US.

119
00:05:36,549 --> 00:05:38,089
Yeah, you're exactly right.

120
00:05:38,100 --> 00:05:43,130
So I'm describing the feature set that the web app firewalls have purported to have,

121
00:05:43,140 --> 00:05:43,399
right?

122
00:05:43,410 --> 00:05:47,809
So, you know, inspect HP request, look for something bad, stop it on the response,

123
00:05:47,820 --> 00:05:50,459
look for something that looks like a social security number

124
00:05:50,850 --> 00:05:52,279
and stop it

125
00:05:52,480 --> 00:05:54,339
uh or a credit card number and stop it.

126
00:05:54,799 --> 00:05:58,989
The big problem with that older architecture, regardless of how it was deployed,

127
00:05:59,000 --> 00:06:01,179
whether it's agent based or cloud based or,

128
00:06:01,269 --> 00:06:03,720
or uh hardware proxy based or virtual machine.

129
00:06:03,730 --> 00:06:06,220
Whatever it is, the basic problem with those

130
00:06:06,640 --> 00:06:07,500
is that

131
00:06:07,640 --> 00:06:12,420
they're trying to make decisions based on a very limited context,

132
00:06:12,429 --> 00:06:14,220
they don't really understand the application.

133
00:06:14,589 --> 00:06:18,609
And so you end up with either and usually both of

134
00:06:18,829 --> 00:06:20,809
a ton of false positives.

135
00:06:21,029 --> 00:06:22,519
That's a good example you brought up.

136
00:06:22,529 --> 00:06:22,980
So, hey,

137
00:06:22,989 --> 00:06:24,339
I'm gonna look for credit card numbers or

138
00:06:24,350 --> 00:06:25,380
social security numbers going out the door.

139
00:06:25,390 --> 00:06:28,609
Well, you know what, a lot of, a lot of numbers look like social security numbers.

140
00:06:28,619 --> 00:06:31,799
So, you know, a number with two dashes in, it doesn't, you know,

141
00:06:31,809 --> 00:06:35,769
uh isn't necessarily the, the thing and so you get it lights, you know,

142
00:06:35,779 --> 00:06:37,929
it sounds great, but then it lights up like crazy

143
00:06:38,320 --> 00:06:40,269
and you end up, you know,

144
00:06:40,279 --> 00:06:44,670
either spending a ton of time constructing very detailed policies

145
00:06:44,679 --> 00:06:48,880
inside these proxies in an effort to reduce the false positives

146
00:06:49,220 --> 00:06:51,820
or you don't and you just get flooded with noise and you ignore it.

147
00:06:52,000 --> 00:06:55,089
And at the same time, even if you get all the policies right,

148
00:06:55,100 --> 00:06:57,170
you end up usually missing a ton of stuff.

149
00:06:57,179 --> 00:06:59,910
So, you know, take that same example, if a

150
00:07:00,049 --> 00:07:04,510
number is returned and it looks like a social security number, you know,

151
00:07:04,640 --> 00:07:05,269
123

152
00:07:05,429 --> 00:07:08,850
4 5 dash, you know, 6578, that is fine.

153
00:07:09,329 --> 00:07:13,369
But what happens when the app returns numbers that without the dashes? Right?

154
00:07:13,380 --> 00:07:17,239
So are you gonna flag every eight digit number or uh or nine digit or whatever it is?

155
00:07:17,250 --> 00:07:21,720
So the you end up with this kind of impossible problem

156
00:07:22,049 --> 00:07:22,890
of

157
00:07:23,200 --> 00:07:24,690
trying to

158
00:07:25,010 --> 00:07:26,089
essentially

159
00:07:26,609 --> 00:07:30,970
incrementally export the full logic of the application

160
00:07:31,510 --> 00:07:35,489
into an external thing that just sees individual requests and

161
00:07:35,500 --> 00:07:38,929
responses so that it can make the right security decisions.

162
00:07:39,290 --> 00:07:42,049
And the amount of policy you end up having to develop to do

163
00:07:42,059 --> 00:07:44,769
that ends up looking almost like a full application and of itself.

164
00:07:44,779 --> 00:07:45,299
And so

165
00:07:45,510 --> 00:07:47,429
the net result has been, the technology

166
00:07:47,589 --> 00:07:53,720
is fairly well adopted for kind of basic, really basic stuff, but

167
00:07:53,839 --> 00:07:58,239
it's very difficult to get real value out of in and of itself. And so

168
00:07:58,339 --> 00:08:01,709
companies like T cell and others have been innovating in this area

169
00:08:01,910 --> 00:08:04,019
to try to come up with something that

170
00:08:04,260 --> 00:08:06,269
solves two problems, right? One is

171
00:08:06,549 --> 00:08:10,700
to make the policy model for these things

172
00:08:10,850 --> 00:08:14,029
much more practical so that you can install it.

173
00:08:14,359 --> 00:08:19,730
And with a minimal amount of policy management, you're actually getting,

174
00:08:20,029 --> 00:08:20,260
you know,

175
00:08:20,269 --> 00:08:24,609
real blocking level security without breaking the app and without going insane.

176
00:08:25,130 --> 00:08:26,190
And two,

177
00:08:26,369 --> 00:08:28,339
you're actually effective at it, right?

178
00:08:28,350 --> 00:08:31,029
You're not that it's not like Swiss Cheese where,

179
00:08:31,230 --> 00:08:33,280
you know, in it sounds great in theory,

180
00:08:33,289 --> 00:08:35,729
but the reality is like any attacker would be

181
00:08:35,739 --> 00:08:37,070
able to get around your way about firewall,

182
00:08:37,080 --> 00:08:38,049
like with, with no effort.

183
00:08:38,058 --> 00:08:39,760
So that's where that's where the real efforts are.

184
00:08:39,770 --> 00:08:42,679
And that's where these different B deployment models come in,

185
00:08:42,690 --> 00:08:44,809
like doing agent based things that give

186
00:08:44,820 --> 00:08:47,099
more context introducing these things like RSP,

187
00:08:47,109 --> 00:08:47,729
which is the,

188
00:08:47,739 --> 00:08:51,169
the aspects that go inside the application itself and solve that problem.

189
00:08:51,179 --> 00:08:54,570
And I'm gonna, I'm gonna stop you for a second and make you define. Rasp

190
00:08:55,489 --> 00:08:55,520
said

191
00:08:56,380 --> 00:08:56,390
I

192
00:08:56,549 --> 00:08:57,250
was gonna get to that.

193
00:08:57,460 --> 00:08:59,250
So RSP means A W

194
00:08:59,650 --> 00:08:59,659
A

195
00:08:59,770 --> 00:09:03,090
is a proxy that sits outside of the application

196
00:09:03,539 --> 00:09:05,710
and just looks at the requests and responses

197
00:09:05,719 --> 00:09:08,280
and guesses at what's happening inside the app.

198
00:09:08,700 --> 00:09:10,440
Or rasp broadly speaking,

199
00:09:10,450 --> 00:09:14,659
is a technology to sit inside the application where it doesn't

200
00:09:14,669 --> 00:09:16,669
have to guess at what the app is going to do,

201
00:09:16,679 --> 00:09:18,950
it's going to see what's happening inside the app.

202
00:09:18,960 --> 00:09:23,559
And so when we talk about things like runtime instrumentation, what that means is,

203
00:09:23,729 --> 00:09:24,989
for example,

204
00:09:25,239 --> 00:09:28,500
in addition to seeing an HP request come in that

205
00:09:29,080 --> 00:09:32,340
a, you know, query parameter looks like SQL injection,

206
00:09:32,710 --> 00:09:35,299
A rasp and you know T cell, for example,

207
00:09:35,309 --> 00:09:39,820
would be able to also monitor the the database driver.

208
00:09:39,830 --> 00:09:41,979
Basically the thing inside the app that talks the

209
00:09:41,989 --> 00:09:46,559
database and see what queries that result in that request

210
00:09:46,679 --> 00:09:50,580
are actually sent to the database. So you see the inbound request from the browser

211
00:09:50,840 --> 00:09:53,500
but then simultaneously you can see the outbound

212
00:09:53,919 --> 00:09:57,580
SQL queries and you can couple them together. And so if you see

213
00:09:57,929 --> 00:10:00,710
bad HDP request coupled with

214
00:10:01,059 --> 00:10:01,869
bad

215
00:10:02,099 --> 00:10:03,349
SQL query,

216
00:10:03,520 --> 00:10:05,770
then you have an extremely strong indicator

217
00:10:05,780 --> 00:10:08,789
of not just a SQL injection attack attempt

218
00:10:09,250 --> 00:10:09,880
but a

219
00:10:10,109 --> 00:10:14,200
likely vulnerability found a breach attack basically in progress.

220
00:10:14,260 --> 00:10:15,419
And so that's what RFs does.

221
00:10:15,429 --> 00:10:19,530
It gives you the, the visibility into the application which gives you more context,

222
00:10:19,539 --> 00:10:20,969
which simplifies policy

223
00:10:21,369 --> 00:10:23,469
and it cuts down a lot of the noise because you

224
00:10:23,479 --> 00:10:25,900
can solve for a different problem instead of just saying,

225
00:10:25,909 --> 00:10:26,849
am I under attack?

226
00:10:26,859 --> 00:10:27,510
You can say,

227
00:10:27,880 --> 00:10:28,929
am I under attack?

228
00:10:28,940 --> 00:10:31,570
And is it working, which is a much narrower set of things to look for?

229
00:10:31,580 --> 00:10:34,260
-- And it frankly is the more relevant? Yeah,
-- that's really cool.

230
00:10:34,330 --> 00:10:35,669
I'm curious about this. So,

231
00:10:36,299 --> 00:10:38,700
yeah, because it sounds, that's one thing I've always thought about.

232
00:10:38,710 --> 00:10:40,229
Um, I remember one time I was looking at

233
00:10:40,340 --> 00:10:40,349
a,

234
00:10:40,460 --> 00:10:44,539
it was actually a my SQL proxy and one of the things it could do was filtering.

235
00:10:44,989 --> 00:10:47,429
And so yeah, my thinking was, well, hey, wait, if I'm, you know,

236
00:10:47,440 --> 00:10:51,349
filtering for these SQL injection attacks from my wordpress server then yeah,

237
00:10:51,359 --> 00:10:53,250
it would be kind of nice to be able to backtrack and be like,

238
00:10:53,260 --> 00:10:55,679
so what part of wordpress let this happen, right?

239
00:10:55,690 --> 00:10:57,010
Or generated this query.

240
00:10:57,549 --> 00:11:00,289
And so is that something that the agents kind of

241
00:11:00,965 --> 00:11:02,554
allow or help you pinpoint?

242
00:11:02,734 --> 00:11:04,515
Yeah, it's, it's that sort of thing.

243
00:11:04,525 --> 00:11:06,354
And it could be for SQL injection,

244
00:11:06,364 --> 00:11:09,344
it could be for command injection for shell commands that are coming out.

245
00:11:09,354 --> 00:11:09,674
It could be

246
00:11:09,804 --> 00:11:11,885
on the browser side for cross site scripting.

247
00:11:11,895 --> 00:11:15,715
It's, it's, it's seeing that other, the coupling

248
00:11:16,145 --> 00:11:19,104
the inputs to the the actions. And so,

249
00:11:19,520 --> 00:11:22,539
you know, for example, there have been database firewalls for a while.

250
00:11:22,549 --> 00:11:23,150
It sounds like you were,

251
00:11:23,159 --> 00:11:26,460
you were playing with one of those and they struggle again with context.

252
00:11:26,469 --> 00:11:27,299
You know, you're

253
00:11:27,409 --> 00:11:29,380
to say that you're gonna

254
00:11:29,659 --> 00:11:34,340
set a filter that says, don't, you know, don't allow queries to this table.

255
00:11:34,655 --> 00:11:35,734
Well, that's never going to work, right?

256
00:11:35,744 --> 00:11:38,695
Because, you know, at some point, someone have to have to do a query to that table.

257
00:11:38,815 --> 00:11:41,195
The question is under what context are those allowed?

258
00:11:41,205 --> 00:11:44,934
And that's always within the application. And most apps talk to the database

259
00:11:45,065 --> 00:11:49,005
under a single, you know, basically a pooled connection or a single user ID.

260
00:11:49,015 --> 00:11:49,775
It's not the

261
00:11:49,955 --> 00:11:53,034
the database connection is certainly not authenticated based

262
00:11:53,044 --> 00:11:55,395
on the end user of the application.

263
00:11:55,594 --> 00:11:57,674
And so you lose all that context. Whereas

264
00:11:57,950 --> 00:12:03,210
with this kind of technology, you can, you can get that sort of context, you can see

265
00:12:03,450 --> 00:12:07,510
what's happening on the input side as and what happens on the output side. So

266
00:12:07,630 --> 00:12:08,729
as an example,

267
00:12:09,130 --> 00:12:13,080
like people love talking about command injection and struts too.

268
00:12:16,109 --> 00:12:19,210
This has been a major part of my professional life for the last year and a half.

269
00:12:20,849 --> 00:12:20,869
Yeah.

270
00:12:22,429 --> 00:12:22,929
Yeah.

271
00:12:23,140 --> 00:12:24,289
Uh me too.

272
00:12:24,299 --> 00:12:25,900
But that, you know, it's just like, it's,

273
00:12:25,909 --> 00:12:28,450
it's nice to kind of pick an example because it, it goes.

274
00:12:28,460 --> 00:12:29,450
So like there,

275
00:12:29,840 --> 00:12:30,979
you know, you've got,

276
00:12:31,150 --> 00:12:35,539
you know, web app firewalls can look for requests that look like command injection,

277
00:12:35,549 --> 00:12:35,789
right?

278
00:12:35,799 --> 00:12:38,039
But you get flooded with noise is hard to tell what's going on.

279
00:12:38,049 --> 00:12:42,640
But you can't tell, it, can't tell you whether the app itself has a vulnerability.

280
00:12:42,650 --> 00:12:44,760
It can't tell you whether you're loading that that starts

281
00:12:44,770 --> 00:12:47,440
to live or not with a solution like T cell,

282
00:12:47,450 --> 00:12:49,090
you'll know, hey, you load it in,

283
00:12:49,419 --> 00:12:50,690
you know, you're built on struts too.

284
00:12:50,700 --> 00:12:52,940
It's an old version has this critical vulnerability.

285
00:12:52,950 --> 00:12:56,710
So you should pay extra attention to the command injection attempts.

286
00:12:57,090 --> 00:12:58,960
What it can also then say is,

287
00:12:59,250 --> 00:13:03,400
and by the way, your app never shells out because most apps don't, right?

288
00:13:03,409 --> 00:13:05,340
Or if they do it's because one developer is lazy

289
00:13:05,349 --> 00:13:07,679
and like cats a file instead of reading it.

290
00:13:07,690 --> 00:13:10,229
Well, no having seen stuff like that, I know it's true.

291
00:13:10,239 --> 00:13:10,270
I,

292
00:13:10,280 --> 00:13:12,570
I saw one person try to recruit and make us temp

293
00:13:12,580 --> 00:13:15,159
in eight lines of bash when they could have just used,

294
00:13:15,169 --> 00:13:15,650
make

295
00:13:16,000 --> 00:13:16,369
temp.

296
00:13:20,239 --> 00:13:22,799
Uh Yeah. So you see and so with

297
00:13:23,070 --> 00:13:23,090
AAS

298
00:13:23,510 --> 00:13:26,479
you get, you can see that happen. So, you know, if you

299
00:13:26,650 --> 00:13:29,549
and that's kind of part of the kind of come back to the model of

300
00:13:29,559 --> 00:13:34,179
trying to help the teams that are innovating faster and moving fast during the,

301
00:13:34,190 --> 00:13:35,950
you know, the, the Dev ops thing,

302
00:13:36,280 --> 00:13:36,890
like how does the

303
00:13:37,150 --> 00:13:38,200
guy fit into that?

304
00:13:38,349 --> 00:13:39,219
Well, you can't

305
00:13:39,359 --> 00:13:41,919
say I'm gonna do a code review of everything going out the door.

306
00:13:42,539 --> 00:13:44,080
So again, you can, you can

307
00:13:44,210 --> 00:13:46,330
that all that context provides

308
00:13:46,479 --> 00:13:49,200
the ability to pick and choose what you're going to dig into

309
00:13:49,520 --> 00:13:53,539
and what conversations you need to have with uh your development uh peers.

310
00:13:53,549 --> 00:13:57,440
So for example, when you, you can watch the app and say, does it shell out

311
00:13:57,549 --> 00:13:58,530
and under what content

312
00:13:59,210 --> 00:14:00,390
and you know,

313
00:14:00,530 --> 00:14:02,450
in some cases it makes sense, right.

314
00:14:02,460 --> 00:14:04,239
That's uh let's say you're, you know,

315
00:14:04,250 --> 00:14:06,719
there's some report generation tool that you're using that

316
00:14:06,729 --> 00:14:08,799
that runs through a shell that's pretty common.

317
00:14:09,020 --> 00:14:14,520
But in other cases, it's like, why are you doing that as a, as a shell command? And then

318
00:14:15,010 --> 00:14:15,799
you can see it.

319
00:14:15,809 --> 00:14:21,229
And then the next step is if anything, if new shell commands start popping up,

320
00:14:21,570 --> 00:14:22,020
you can,

321
00:14:22,030 --> 00:14:24,549
you can see that happening and you can

322
00:14:24,559 --> 00:14:26,719
ultimately construct a whitelist of what's allowed.

323
00:14:26,729 --> 00:14:28,229
It could be an empty whitelist

324
00:14:28,330 --> 00:14:31,369
or whitelisting that you know those that that seven line

325
00:14:31,380 --> 00:14:34,789
bash script and then but not allow anything else.

326
00:14:34,799 --> 00:14:35,710
And so that

327
00:14:36,020 --> 00:14:37,770
if you do that, if yeah,

328
00:14:37,780 --> 00:14:42,469
if you have something or a third party library has some sort of vulnerability,

329
00:14:43,080 --> 00:14:44,280
you'll, you'll, you know,

330
00:14:44,289 --> 00:14:46,719
you'll know it potentially because you saw the library getting

331
00:14:46,729 --> 00:14:48,859
loaded and it looked up the cvs for you.

332
00:14:48,869 --> 00:14:51,390
You'll know that someone's trying those types of tax scans you,

333
00:14:51,580 --> 00:14:52,109
but

334
00:14:52,250 --> 00:14:55,669
you will have a whitelist added to your application.

335
00:14:55,679 --> 00:14:59,099
That developer didn't have to do that will not let the

336
00:14:59,109 --> 00:15:02,510
app run any shell commands that weren't on the white list,

337
00:15:02,520 --> 00:15:02,739
right?

338
00:15:02,750 --> 00:15:06,700
Or you know, won't let the, you know, let's say on the browser side will, you know,

339
00:15:06,710 --> 00:15:08,630
add a content security policy header

340
00:15:08,849 --> 00:15:12,299
so that it won't let the browser pull content from any

341
00:15:12,405 --> 00:15:14,554
domains that you haven't whitelisted.

342
00:15:14,635 --> 00:15:18,044
And so that gives the, you know, that gives the active protection aspect, right?

343
00:15:18,054 --> 00:15:18,525
Where,

344
00:15:18,645 --> 00:15:19,825
you know, kind of doesn't, well,

345
00:15:19,835 --> 00:15:22,505
you know what's going on and you can have the controls to

346
00:15:22,674 --> 00:15:23,844
block the Attackers.

347
00:15:23,854 --> 00:15:28,304
But you also know is that you, you set up some guard rails around the app so it can't do

348
00:15:28,515 --> 00:15:29,905
really disastrous things.

349
00:15:30,244 --> 00:15:30,934
That's

350
00:15:31,195 --> 00:15:32,244
really cool, man.

351
00:15:32,255 --> 00:15:36,565
So I, you, you mentioned something else just a minute ago that, that really spiked.

352
00:15:36,575 --> 00:15:38,044
My interest

353
00:15:38,255 --> 00:15:41,655
is you talk about not code reviewing every commit

354
00:15:41,960 --> 00:15:44,989
for security specifically and then you talk about using something like

355
00:15:45,140 --> 00:15:47,309
a W A to get around that and, and I feel like

356
00:15:47,809 --> 00:15:48,979
this is a disconnect.

357
00:15:48,989 --> 00:15:50,700
I've seen a lot of security people where they,

358
00:15:50,710 --> 00:15:52,780
many of them still have that attitude of, oh,

359
00:15:52,789 --> 00:15:54,950
we have to do a security review of everything.

360
00:15:54,960 --> 00:15:56,590
But if you're, you know, if you're doing, you know,

361
00:15:56,599 --> 00:16:00,500
hundreds of thousands of commits a day and you're deploying every hour or two,

362
00:16:00,969 --> 00:16:03,280
that's not always a practical thing to do.

363
00:16:03,289 --> 00:16:05,150
And I think anyone who thinks they're doing it

364
00:16:05,159 --> 00:16:07,270
-- is probably lying to themselves
-- more to the point.

365
00:16:07,280 --> 00:16:10,280
You have humans doing the code reviews and it's almost lunch.

366
00:16:10,520 --> 00:16:14,219
-- Right. Right. Yes,
-- tiktok. Let's go. Right. Like, no, seriously, I've been,

367
00:16:14,539 --> 00:16:14,609
you

368
00:16:14,750 --> 00:16:14,909
know,

369
00:16:15,070 --> 00:16:18,270
I've seen that happen, we literally lunchtime results and

370
00:16:18,460 --> 00:16:21,229
-- things happening that shouldn't, you
-- know. Yeah. But a, a

371
00:16:21,359 --> 00:16:23,650
do you know it's time to go.

372
00:16:24,000 --> 00:16:25,479
Yeah, exactly. So,

373
00:16:25,909 --> 00:16:29,640
I mean, obviously, so you should do code reviews when you can,

374
00:16:30,260 --> 00:16:31,039
and

375
00:16:31,239 --> 00:16:33,200
you should be smart about

376
00:16:33,690 --> 00:16:35,099
what you're gonna be

377
00:16:35,330 --> 00:16:39,239
focused on and do you know really in depth reviews of and

378
00:16:39,250 --> 00:16:44,020
which things you're not in which reviews have to happen prior to release

379
00:16:44,280 --> 00:16:45,820
in which ones you're ok saying?

380
00:16:45,830 --> 00:16:49,320
Ok, we'll look at it but the risk, you know, we're gonna look at it but we can get,

381
00:16:49,330 --> 00:16:53,200
we can put it out the door and, and the risk is low enough that if I look at it next week,

382
00:16:53,210 --> 00:16:54,080
it's gonna be ok.

383
00:16:54,599 --> 00:16:58,150
I think that that all that's really important and, and it's,

384
00:16:58,289 --> 00:17:01,299
you know, it's about tools, it's about process is about culture.

385
00:17:01,309 --> 00:17:04,430
Like all these things come come together to support that.

386
00:17:04,680 --> 00:17:05,310
But

387
00:17:05,569 --> 00:17:07,500
what has to happen

388
00:17:07,760 --> 00:17:09,858
is frankly,

389
00:17:10,089 --> 00:17:13,140
you have to essentially take the lead from

390
00:17:13,618 --> 00:17:14,250
the

391
00:17:14,540 --> 00:17:18,959
development and operations teams on what their cadence is gonna be

392
00:17:19,468 --> 00:17:21,128
and fit into it because,

393
00:17:21,239 --> 00:17:21,519
you know,

394
00:17:21,529 --> 00:17:24,729
at least in my experience with the teams that

395
00:17:24,739 --> 00:17:26,098
are kind of moving into this newer model,

396
00:17:26,108 --> 00:17:29,989
as you said, like checking in 1000 you know, 100,000 times a day shipping every hour,

397
00:17:30,178 --> 00:17:34,479
like you're, you're not gonna win the battle of no, you can't ship

398
00:17:35,068 --> 00:17:35,448
uh

399
00:17:35,779 --> 00:17:39,568
or at least you get to pull that like once a year and you got to be right.

400
00:17:39,920 --> 00:17:42,260
Uh You know, when you say don't do it,

401
00:17:42,510 --> 00:17:44,040
you better find something, right?

402
00:17:44,050 --> 00:17:46,270
Because the next time no one, you know, people won't listen,

403
00:17:47,109 --> 00:17:48,250
which is why having like

404
00:17:48,560 --> 00:17:50,099
you getting that context

405
00:17:50,729 --> 00:17:54,099
and just knowing when to freak out and when not to

406
00:17:54,469 --> 00:17:56,910
is a good thing. So I'll give an example

407
00:17:57,089 --> 00:18:02,449
like we, so one thing that we do will give an audit of uh

408
00:18:02,939 --> 00:18:05,760
routes or api end points that get registered by the app.

409
00:18:05,770 --> 00:18:07,250
So basically, you know, like anytime

410
00:18:07,380 --> 00:18:10,869
you add functionality to an application, you're typically going to

411
00:18:10,979 --> 00:18:13,910
create new endpoints, basically like, you know,

412
00:18:13,930 --> 00:18:16,369
a rest endpoint or maybe soap or whatever it is, right?

413
00:18:16,380 --> 00:18:19,430
That, that the browser or clients gonna talk to,

414
00:18:19,619 --> 00:18:21,219
that's some new piece of functionality

415
00:18:21,489 --> 00:18:23,250
you see those are showing up all the time.

416
00:18:23,739 --> 00:18:27,160
It's good to keep an eye on those that like for example, if you see one that's,

417
00:18:27,270 --> 00:18:31,680
you know, that's called like change password, right, then

418
00:18:32,099 --> 00:18:32,609
that's, and

419
00:18:32,849 --> 00:18:33,420
then it's like,

420
00:18:33,430 --> 00:18:35,670
oh maybe that's one that we really do need to

421
00:18:35,680 --> 00:18:37,969
have a conversation about if we haven't done that yet,

422
00:18:37,979 --> 00:18:38,260
right?

423
00:18:38,270 --> 00:18:39,270
Versus,

424
00:18:39,449 --> 00:18:41,810
you know, these, you know, just basic, you know,

425
00:18:41,819 --> 00:18:44,160
generate report type things or whatever it is,

426
00:18:44,170 --> 00:18:46,869
that that's just kind of added functionality that's not,

427
00:18:47,109 --> 00:18:50,510
you know, that doesn't have any obvious security risk, right?

428
00:18:50,760 --> 00:18:52,839
By having that information,

429
00:18:53,680 --> 00:18:56,569
you can then decide when to, you know,

430
00:18:56,930 --> 00:19:01,979
you know, when to inject yourself into the process and when to kind of let it flow.

431
00:19:02,069 --> 00:19:04,300
Um And when you do inject yourself,

432
00:19:04,310 --> 00:19:07,400
it's good to have context to explain why it's important, right?

433
00:19:07,410 --> 00:19:09,579
So if you have your app and says, hey,

434
00:19:09,979 --> 00:19:13,819
this app is constantly under attack, right? For whatever reason.

435
00:19:14,229 --> 00:19:15,859
And in these ways

436
00:19:16,280 --> 00:19:19,209
when you share that with developers, it's really interesting, right?

437
00:19:19,219 --> 00:19:21,670
Then they get into it, right. It's because like no one wants to get,

438
00:19:21,819 --> 00:19:23,099
you know, they don't want to get caught. Right.

439
00:19:23,109 --> 00:19:26,260
So it's, but, you know, if you can make it less theoretical

440
00:19:26,390 --> 00:19:29,650
by using whatever tools you have to get real data on,

441
00:19:30,150 --> 00:19:32,130
you know, what risk you are, you have of the,

442
00:19:32,140 --> 00:19:36,160
you know what the attacks are that are actually happening versus one could do,

443
00:19:36,500 --> 00:19:38,910
then it gets easier to get people to work with you.

444
00:19:38,920 --> 00:19:42,510
I, I feel like this is where the world is heading

445
00:19:42,869 --> 00:19:43,500
and

446
00:19:43,859 --> 00:19:46,089
not everyone has it figured out yet.

447
00:19:46,099 --> 00:19:48,500
And so I'm, I'm curious, tell me a story about,

448
00:19:48,599 --> 00:19:51,010
have you gone into an organization yet?

449
00:19:51,020 --> 00:19:53,479
And, and basically, it's kind of been the old way

450
00:19:53,910 --> 00:19:54,439
and,

451
00:19:54,800 --> 00:19:57,280
and, and how do you, how do you help them figure it out or,

452
00:19:57,290 --> 00:19:59,119
or do they just not ever figure it out?

453
00:19:59,180 --> 00:19:59,900
Well,

454
00:20:00,119 --> 00:20:00,900
yeah, good question.

455
00:20:00,910 --> 00:20:06,569
So people come to us because at least the, the, the security guys that

456
00:20:06,729 --> 00:20:07,939
we're working with,

457
00:20:08,199 --> 00:20:11,650
they are trying to get to the new thing, like we're the tool to get to the new way.

458
00:20:11,660 --> 00:20:13,739
So if they're, if they're,

459
00:20:13,890 --> 00:20:17,119
if they're happy with the old way, they're not gonna, they're not gonna call us. Uh

460
00:20:18,015 --> 00:20:20,074
So we, we had a little bit of a skewed view of the world.

461
00:20:20,415 --> 00:20:20,925
But

462
00:20:21,025 --> 00:20:25,625
what we see is, you know, just because people want to do it doesn't mean it's easy.

463
00:20:25,635 --> 00:20:26,694
And so

464
00:20:26,864 --> 00:20:29,275
we'll see a real process, you know, some, you know,

465
00:20:29,285 --> 00:20:33,395
some organizations like everything's lined up and it just flows and frankly,

466
00:20:33,405 --> 00:20:34,814
they're probably already doing

467
00:20:35,074 --> 00:20:37,765
the right things. It's just a question of getting better.

468
00:20:37,775 --> 00:20:39,854
But then sometimes we'll go into organizations

469
00:20:40,119 --> 00:20:41,839
where they're going through a real transition.

470
00:20:41,849 --> 00:20:45,079
Like, so, you know, uh I'm thinking of one of our customers

471
00:20:45,270 --> 00:20:45,839
that

472
00:20:46,079 --> 00:20:49,869
was making that the transition from being a

473
00:20:50,560 --> 00:20:53,170
packaged on prem software company

474
00:20:53,400 --> 00:20:58,270
to delivering their software as you know, cloud services, huge, huge thing, right?

475
00:20:58,280 --> 00:21:00,280
There's a transformational for the, for the company,

476
00:21:00,660 --> 00:21:02,630
you know, and you know, you can picture

477
00:21:02,979 --> 00:21:05,989
this so this, you know, I should back up as the security team is relatively new,

478
00:21:06,000 --> 00:21:08,920
all bought in, like thinking about doing it the new way, like they're,

479
00:21:08,930 --> 00:21:09,969
they're ready to go.

480
00:21:10,229 --> 00:21:12,560
But what was interesting is that the,

481
00:21:12,819 --> 00:21:16,500
the development team, the operations team was all ready to go as well.

482
00:21:16,510 --> 00:21:18,680
But the development teams, you know, the, you know,

483
00:21:18,689 --> 00:21:20,479
particularly the management side of it,

484
00:21:20,489 --> 00:21:23,920
they've been the people who built the and built a really successful company on,

485
00:21:23,930 --> 00:21:26,189
on Prem software and certain processes.

486
00:21:26,640 --> 00:21:27,569
And so

487
00:21:27,880 --> 00:21:30,109
when they started to

488
00:21:30,439 --> 00:21:32,060
hear that, hey,

489
00:21:32,189 --> 00:21:35,030
operations and development, want

490
00:21:35,160 --> 00:21:39,449
to get engaged with the process earlier on, right?

491
00:21:39,459 --> 00:21:41,380
So they wanna, you know, talk to you,

492
00:21:41,390 --> 00:21:44,420
they wanna they wanna know what's going on as we're developing, right?

493
00:21:44,459 --> 00:21:45,359
Versus

494
00:21:45,530 --> 00:21:48,219
they'll go develop it, throw it over the fence and let it, you know,

495
00:21:48,229 --> 00:21:49,880
let someone deal with it afterwards.

496
00:21:50,189 --> 00:21:52,719
That was a really hard for them. Right. And,

497
00:21:52,989 --> 00:21:55,800
you know, some people were all in, some people were not,

498
00:21:56,219 --> 00:21:57,439
you know, frankly

499
00:21:57,719 --> 00:22:02,130
they had to have some real problems prop up in terms of, you know,

500
00:22:02,140 --> 00:22:07,280
attacks happening that would, you know, an actual breaches occur to get, you know,

501
00:22:07,290 --> 00:22:09,420
to get the real come to Jesus moment or saying, ok,

502
00:22:09,430 --> 00:22:11,260
we have to do something differently here.

503
00:22:11,479 --> 00:22:12,839
So that's, that was a really tough thing.

504
00:22:12,849 --> 00:22:16,680
It's that cultural change that, that is just kind of killer for people.

505
00:22:16,810 --> 00:22:17,400
Um,

506
00:22:17,829 --> 00:22:18,400
but

507
00:22:19,079 --> 00:22:19,989
it happens right.

508
00:22:20,000 --> 00:22:22,040
There's like, I've never seen anyone and again,

509
00:22:22,050 --> 00:22:24,150
it could be a skewed view of the world, but like it,

510
00:22:24,339 --> 00:22:26,810
it's not an avoidable change for

511
00:22:26,969 --> 00:22:28,459
almost any organization.

512
00:22:28,810 --> 00:22:31,979
So it's just a question of whether, you know, when,

513
00:22:31,989 --> 00:22:35,739
when you're going to get there and how painful you're gonna, you know,

514
00:22:35,750 --> 00:22:36,619
you're going to make it.

515
00:22:36,630 --> 00:22:40,619
Um, and it can be like, it can be awesome if you just kind of embrace it, but

516
00:22:40,770 --> 00:22:41,959
it can be painful if you,

517
00:22:42,160 --> 00:22:42,699
if you don't.

518
00:22:42,849 --> 00:22:43,050
Well,

519
00:22:43,060 --> 00:22:44,930
it's always going to be painful and I have

520
00:22:44,939 --> 00:22:46,939
a suspicion you have a lot of survivorship by,

521
00:22:47,040 --> 00:22:47,069
in

522
00:22:47,369 --> 00:22:49,800
your view because obviously someone's reaching out to you,

523
00:22:49,810 --> 00:22:51,089
they're almost certainly

524
00:22:51,189 --> 00:22:54,810
over the hump will say of denial. Right.

525
00:22:54,989 --> 00:22:56,050
That everything's fun.

526
00:22:56,469 --> 00:22:59,849
And you know what, this really made me think of when you, you're explaining. This is

527
00:23:00,150 --> 00:23:00,500
so,

528
00:23:00,510 --> 00:23:03,010
so Kurt and I have relatively young Children and I'm

529
00:23:03,020 --> 00:23:05,329
sure Kurt is familiar with this as well where you,

530
00:23:05,489 --> 00:23:07,050
you talk to other parents and they're talking

531
00:23:07,060 --> 00:23:08,790
about how brilliant and amazing their Children are.

532
00:23:08,800 --> 00:23:11,300
It's like my kids eating paste, you know, like what, what,

533
00:23:11,310 --> 00:23:12,900
what am I doing wrong as a parent?

534
00:23:12,910 --> 00:23:13,739
And I guess this is,

535
00:23:14,180 --> 00:23:17,530
this is something I suspect a lot of people need reassurance of is, is

536
00:23:17,699 --> 00:23:18,040
if,

537
00:23:18,280 --> 00:23:20,119
if you think everything's going right,

538
00:23:20,180 --> 00:23:22,040
that's when you're probably screwing something up.

539
00:23:22,050 --> 00:23:22,400
Right.

540
00:23:22,410 --> 00:23:23,239
Because every,

541
00:23:23,250 --> 00:23:25,439
these kind of changes are hard and they're

542
00:23:25,449 --> 00:23:28,219
never smooth and they're always fraught with issues.

543
00:23:28,229 --> 00:23:28,599
Right.

544
00:23:28,849 --> 00:23:30,500
Yeah. Oh, definitely. There's, and,

545
00:23:30,760 --> 00:23:31,880
you know, I think the,

546
00:23:32,410 --> 00:23:32,849
you know,

547
00:23:32,969 --> 00:23:36,469
and is of course true, just generally for security, but this is doubly true in this,

548
00:23:36,479 --> 00:23:38,479
in this context is, it's

549
00:23:38,890 --> 00:23:40,989
complacency is

550
00:23:41,250 --> 00:23:43,589
the biggest danger. It's not,

551
00:23:43,859 --> 00:23:47,400
you know, adopt, doing something wrong, it's not

552
00:23:47,510 --> 00:23:52,569
misinterpreting something it's, or investing in the wrong area or like, it's just,

553
00:23:52,780 --> 00:23:56,510
it's not doing anything is the, is the biggest security risk.

554
00:23:56,520 --> 00:23:59,099
But also I think it ultimately becomes the biggest business risk

555
00:23:59,310 --> 00:24:02,569
in terms of, you know, adopting just generally adopting DEV

556
00:24:02,750 --> 00:24:05,750
Ops Cloud, like all these pieces that are, you know, helping

557
00:24:05,949 --> 00:24:06,469
every

558
00:24:06,579 --> 00:24:09,439
team and company move so much faster and be better

559
00:24:09,599 --> 00:24:10,619
if you don't do that

560
00:24:10,800 --> 00:24:12,959
unless you're not monopoly.

561
00:24:13,209 --> 00:24:13,359
You're,

562
00:24:13,650 --> 00:24:15,229
they kind of lost too though. Right.

563
00:24:15,650 --> 00:24:18,119
Even those guys have adopted all this.

564
00:24:18,729 --> 00:24:21,150
Yeah, exactly. Exactly. Yeah.

565
00:24:21,329 --> 00:24:21,739
So,

566
00:24:21,750 --> 00:24:24,609
one thing I've been looking at is I was looking at

567
00:24:24,619 --> 00:24:26,439
some web security stuff over the last year or two and

568
00:24:26,750 --> 00:24:31,290
this idea of sort of having the application more protect itself. Right.

569
00:24:31,300 --> 00:24:31,839
Because I think,

570
00:24:32,500 --> 00:24:34,989
well, that's definitely a problem in the close source world. Right?

571
00:24:35,000 --> 00:24:39,540
Is that you get this application and you can't really do a whole lot to it, right?

572
00:24:39,979 --> 00:24:41,920
Other than wrap stuff around it and hope for the best.

573
00:24:41,930 --> 00:24:43,520
And even in the open source world, like, I mean,

574
00:24:43,530 --> 00:24:46,079
wordpress is my favorite one because, you know, it's easy to beat on

575
00:24:46,719 --> 00:24:49,819
and, you know, it's hu it's a rather huge application now and

576
00:24:50,449 --> 00:24:53,060
trying to instrument wordpress to be, you know,

577
00:24:53,069 --> 00:24:57,079
a little bit more intelligent and a little bit less dangerous with some of their,

578
00:24:57,089 --> 00:24:57,500
you know,

579
00:24:58,060 --> 00:25:02,030
their API and XML stuff which, you know, doesn't have the greatest history.

580
00:25:02,359 --> 00:25:05,119
I'm just wondering like kind of where is this all heading?

581
00:25:05,130 --> 00:25:07,180
Because I'm also now thinking, you know,

582
00:25:07,189 --> 00:25:09,469
things like microservices and serverless computing,

583
00:25:10,040 --> 00:25:13,800
-- like does this technology work with serverless?
-- Yeah.

584
00:25:14,069 --> 00:25:14,420
Yeah.

585
00:25:14,660 --> 00:25:18,219
No, it does. I mean that it, so it's a good question. There's,

586
00:25:18,520 --> 00:25:20,550
you know, there's a separate trend, all, you know,

587
00:25:20,560 --> 00:25:24,869
all in service of this general model of how are we gonna innovate fast?

588
00:25:25,109 --> 00:25:26,890
Let teams do their thing without,

589
00:25:27,099 --> 00:25:29,359
you know, uh processing them to death.

590
00:25:29,369 --> 00:25:35,329
I think microservices and serverless is, is in that ilk in that it's sort of the,

591
00:25:35,339 --> 00:25:39,880
it's about breaking things down to their essential elements and then

592
00:25:40,349 --> 00:25:44,900
giving a person or a team complete autonomy on how to execute on that.

593
00:25:45,339 --> 00:25:46,949
So this kind of technology,

594
00:25:47,069 --> 00:25:50,239
you know, lines up with that. Well, in the sense that

595
00:25:50,609 --> 00:25:54,800
if you're a security guy and you need to figure out what's going on in my,

596
00:25:54,810 --> 00:25:55,949
with this application,

597
00:25:55,959 --> 00:25:59,560
which is gonna be a collection of services like that or across my organization.

598
00:26:00,619 --> 00:26:02,619
Well, you're gonna want to have

599
00:26:02,790 --> 00:26:06,520
visibility into all these different components, but even more.

600
00:26:06,530 --> 00:26:10,550
So you can't add additional process, you can't have, you know,

601
00:26:10,560 --> 00:26:11,839
20 different microservices,

602
00:26:11,849 --> 00:26:15,020
all of which have a gate with you saying yes or no or anything like that.

603
00:26:15,420 --> 00:26:18,280
And so it fits in really well and the technology of course works, right.

604
00:26:18,290 --> 00:26:21,599
It's just, you know, it's software so it plugs in with wherever your software is.

605
00:26:21,810 --> 00:26:23,430
Um So that's easy.

606
00:26:23,619 --> 00:26:24,280
Um

607
00:26:24,560 --> 00:26:27,199
There is, you know, I, in my opinion,

608
00:26:27,910 --> 00:26:29,290
there's a bit of a

609
00:26:29,569 --> 00:26:33,030
fallacy is a little bit this word coming to my mind, but it's maybe a little strong,

610
00:26:33,040 --> 00:26:33,410
but there's,

611
00:26:33,420 --> 00:26:39,030
there's a mistake that some folk that some folks are making in thinking that

612
00:26:39,770 --> 00:26:40,010
deve

613
00:26:40,150 --> 00:26:45,089
by breaking up applications into these smaller components and having, you know,

614
00:26:45,099 --> 00:26:46,619
smaller teams execute on it.

615
00:26:47,160 --> 00:26:48,689
Uh You can

616
00:26:48,880 --> 00:26:54,219
100% push security responsibility into the development teams

617
00:26:54,229 --> 00:26:56,939
and security people just become kind of,

618
00:26:56,949 --> 00:26:58,969
you know, uh, coordinators.

619
00:26:59,040 --> 00:27:01,339
-- Yeah,
-- that's because that's worked over the last 50 years.

620
00:27:01,969 --> 00:27:02,630
But it's, it's,

621
00:27:02,760 --> 00:27:03,390
it's, it's interesting

622
00:27:03,640 --> 00:27:05,520
because it's making a resurgence right.

623
00:27:05,530 --> 00:27:09,060
There's, you know, people talk about the shift left and, you know, all, all,

624
00:27:09,069 --> 00:27:12,099
all these different things around how to push security

625
00:27:12,599 --> 00:27:16,300
earlier into the development process, which is very often, which is a, I think,

626
00:27:16,310 --> 00:27:19,300
often a good thing but it's, it's being conflated with.

627
00:27:20,060 --> 00:27:23,479
We just hope that help train the developers and developers will take care of it.

628
00:27:23,969 --> 00:27:24,589
And

629
00:27:25,010 --> 00:27:25,760
the,

630
00:27:26,349 --> 00:27:30,599
it's, you know, it just doesn't, it's not fully credible.

631
00:27:30,609 --> 00:27:33,880
And I think that's the danger with, with that is you, it's,

632
00:27:34,270 --> 00:27:38,020
it's one thing to say, ok, we're going to break things up and we do want to, you know,

633
00:27:38,030 --> 00:27:39,660
train those developers and get them,

634
00:27:39,670 --> 00:27:42,329
get them dangerous and thinking about the right things.

635
00:27:42,829 --> 00:27:45,680
But at the same time, you're gonna have to have

636
00:27:46,180 --> 00:27:51,650
tools, process and so forth to get an overlay across all the smaller components

637
00:27:52,359 --> 00:27:53,160
so that

638
00:27:53,410 --> 00:27:57,359
your security team, which is ultimately works as an overlay with development,

639
00:27:57,540 --> 00:28:01,869
can get their overlay visibility into it and do it in a way that still supports

640
00:28:02,079 --> 00:28:04,719
how the, the devs actually want to,

641
00:28:04,729 --> 00:28:06,310
to do their jobs and their jobs are

642
00:28:06,319 --> 00:28:09,400
ultimately about getting the functionality there and the and

643
00:28:09,650 --> 00:28:10,910
availability there.

644
00:28:11,449 --> 00:28:12,369
And so,

645
00:28:12,520 --> 00:28:14,380
you know, I think it's it that

646
00:28:14,729 --> 00:28:17,109
this sort of thing becomes very, very important

647
00:28:17,520 --> 00:28:19,060
and it's also important to just kind of think

648
00:28:19,069 --> 00:28:21,270
about who are the actors who needs to do what

649
00:28:21,430 --> 00:28:25,300
and not push too much on to the developers just because they

650
00:28:25,430 --> 00:28:29,989
-- have a smaller app, uh, to deal with.
-- I love that statement

651
00:28:30,250 --> 00:28:31,829
and, and I think

652
00:28:32,160 --> 00:28:35,109
that's something I guess you say it and

653
00:28:35,719 --> 00:28:38,739
I know it's true but I haven't really thought of it recently.

654
00:28:38,880 --> 00:28:41,800
It's funny how sometimes people tell you something and you're like, well, duh,

655
00:28:42,150 --> 00:28:44,260
but at the same time, like, like, it's,

656
00:28:44,270 --> 00:28:47,219
it's not a topic I think people are discussing and,

657
00:28:47,229 --> 00:28:49,540
and I do feel like that is a worrisome trend

658
00:28:50,469 --> 00:28:51,760
that we're starting to see again.

659
00:28:52,040 --> 00:28:52,130
Yeah.

660
00:28:52,609 --> 00:28:55,560
Well, you'll hear, like, I don't know if you guys are hearing about, like DEV,

661
00:28:55,670 --> 00:28:55,790
set

662
00:28:56,089 --> 00:28:56,930
ups and so forth.

663
00:28:57,969 --> 00:28:59,089
But it, it's a good,

664
00:28:59,099 --> 00:29:03,969
it's a good thing but it's being moved a little to my mind a little much towards

665
00:29:04,339 --> 00:29:07,030
translating to have developers do the work for you.

666
00:29:07,040 --> 00:29:10,040
Well, I mean, my fundamental concern about this is, is

667
00:29:10,199 --> 00:29:11,969
software development is hard,

668
00:29:12,199 --> 00:29:14,290
fundamentally, it's hard because,

669
00:29:14,609 --> 00:29:16,599
I mean, and this is assuming you have things like

670
00:29:17,290 --> 00:29:18,949
an actual set of requirements,

671
00:29:19,250 --> 00:29:19,640
right?

672
00:29:19,650 --> 00:29:19,930
I mean,

673
00:29:19,939 --> 00:29:21,469
how many people are writing software out there

674
00:29:21,479 --> 00:29:23,089
and they don't have a full set of requirements

675
00:29:23,510 --> 00:29:25,150
and ignoring all of that,

676
00:29:25,670 --> 00:29:29,630
then you also want them magically to do security as well. And, I mean, you know,

677
00:29:30,310 --> 00:29:34,369
I, I don't know. II, I haven't seen it work in my entire career

678
00:29:35,020 --> 00:29:37,849
where you can just magically educate your way out of this problem. Right.

679
00:29:37,859 --> 00:29:41,219
I mean, Josh, we've had that discussion with many people, many different places,

680
00:29:41,569 --> 00:29:42,060
talk about it

681
00:29:42,270 --> 00:29:43,099
constantly. And, I mean,

682
00:29:43,300 --> 00:29:44,319
you know, I,

683
00:29:44,430 --> 00:29:48,589
I'm just amazed that my computer turns on in the morning and, like, works,

684
00:29:48,599 --> 00:29:50,689
let alone that it's reasonably secure.

685
00:29:51,140 --> 00:29:51,910
So, yeah, I know.

686
00:29:51,920 --> 00:29:52,510
I personally,

687
00:29:52,520 --> 00:29:56,369
I don't think we can realistically educate our way out of this as well because,

688
00:29:56,869 --> 00:29:59,959
you know, by definition that means then that the junior developers, oh,

689
00:29:59,969 --> 00:30:01,089
you can't touch anything.

690
00:30:01,180 --> 00:30:03,030
But how do we get them trained up? Right.

691
00:30:03,040 --> 00:30:05,650
And that's my other thought is with this security training thing.

692
00:30:05,660 --> 00:30:06,849
How do we actually achieve it

693
00:30:07,140 --> 00:30:08,079
economically?

694
00:30:08,199 --> 00:30:09,790
Because I don't think most companies can afford to

695
00:30:09,800 --> 00:30:11,479
take a year off to train all their developers.

696
00:30:11,489 --> 00:30:13,930
Well, training doesn't scale but, but tools do

697
00:30:14,140 --> 00:30:17,869
so. All right, I'm gonna, I'm gonna bring it home. I, I like where we're ending here.

698
00:30:17,880 --> 00:30:21,119
Thank you so much, Michael. It was a fascinating conversation.

699
00:30:21,130 --> 00:30:23,969
I appreciate you taking the time to talk to us. Thank you, Kurt. Thank you

700
00:30:24,209 --> 00:30:24,829
for listening.

701
00:30:24,839 --> 00:30:27,540
You can go to open source security podcast.com to

702
00:30:27,550 --> 00:30:30,339
grab our show notes and there's a link there to

703
00:30:30,349 --> 00:30:34,540
a Facebook group and you can hit us up on social media with the Pound Os S Podcast.

704
00:30:34,550 --> 00:30:36,390
Hashtag And yeah, if nothing else,

705
00:30:36,400 --> 00:30:39,390
you two gentlemen have a fabulous rest of your day.

706
00:30:39,400 --> 00:30:40,109
Thank you.

707
00:30:40,290 --> 00:30:41,119
All right. Thanks a lot.