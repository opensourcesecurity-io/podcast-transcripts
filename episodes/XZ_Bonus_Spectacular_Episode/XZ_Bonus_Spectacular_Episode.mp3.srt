0
00:00:05,559 --> 00:00:08,949
Hello and welcome to the open source security podcast with myself,

1
00:00:08,960 --> 00:00:10,800
Kurt Siefried and my partner in accepting that

2
00:00:10,810 --> 00:00:12,789
nothing's gonna get better on this issue,

3
00:00:12,800 --> 00:00:13,899
-- Josh
-- Pressers.

4
00:00:13,909 --> 00:00:18,020
All right. So I just literally realized this moment that it is Easter Sunday.

5
00:00:18,120 --> 00:00:21,540
We are recording a podcast and many of us have been working

6
00:00:21,549 --> 00:00:25,680
-- quite a lot over the last couple of days which
-- I find comical

7
00:00:25,969 --> 00:00:27,139
on many levels.

8
00:00:27,319 --> 00:00:28,170
If all goes.

9
00:00:28,180 --> 00:00:32,979
Well, this episode is going to come out on April 1st, which is hilarious for so,

10
00:00:32,990 --> 00:00:36,104
so all of you listen, listeners are going to get a two first special this,

11
00:00:36,115 --> 00:00:38,125
this week where we've got the,

12
00:00:38,534 --> 00:00:40,205
I don't even remember what the topic is now.

13
00:00:40,215 --> 00:00:43,615
The podcast literally coming out in 45 minutes from the time we're

14
00:00:43,625 --> 00:00:46,375
recording this because I have it all on auto and then,

15
00:00:46,455 --> 00:00:51,275
and then the special April 1st, which is incredibly appropriate XZ.

16
00:00:51,284 --> 00:00:52,435
Spectacular.

17
00:00:52,444 --> 00:00:54,125
Well, the thing is like when you do something a lot,

18
00:00:54,134 --> 00:00:57,634
like when I wrote a monthly magazine column every month for eight years, I,

19
00:00:57,845 --> 00:01:01,264
I would write the column and then like literally an hour after I submitted it, it,

20
00:01:01,275 --> 00:01:02,354
it was out of my brain.

21
00:01:02,979 --> 00:01:05,779
Same thing with the podcast, right? Like, no, we record a podcast.

22
00:01:05,879 --> 00:01:08,680
And if you ask me in the afternoon, like, what did you talk about this morning?

23
00:01:08,690 --> 00:01:10,230
Like, because I've had people ask me that, like,

24
00:01:10,239 --> 00:01:11,500
what did you record with Josh this week?

25
00:01:11,510 --> 00:01:12,139
And I'm like,

26
00:01:12,330 --> 00:01:14,839
I don't know, I, I don't remember. I just,

27
00:01:15,010 --> 00:01:19,120
it's like asking me to remember like that email I sent four hours ago.

28
00:01:19,839 --> 00:01:23,220
It, well, this happens all the time where Kurt's like, oh, we should talk about this.

29
00:01:23,230 --> 00:01:25,180
I'm like, Kurt, we just literally just did that.

30
00:01:25,190 --> 00:01:28,300
We talked about that two weeks ago and he's like, oh, I don't remember like, yeah,

31
00:01:28,309 --> 00:01:28,900
whatever.

32
00:01:28,910 --> 00:01:30,830
Well, because part of it is I don't like flush,

33
00:01:30,839 --> 00:01:34,779
like I use feed to organize all my links for reading RSS, right?

34
00:01:35,000 --> 00:01:36,540
And it's not like I flushed them out.

35
00:01:37,250 --> 00:01:41,959
Ok. Anyway, before, while we could talk for hours about that topic.

36
00:01:41,970 --> 00:01:45,650
The X thing amuses me on so many levels because I

37
00:01:46,040 --> 00:01:47,660
like people have been saying this could happen for

38
00:01:48,050 --> 00:01:48,319
and it

39
00:01:48,669 --> 00:01:49,199
probably

40
00:01:49,459 --> 00:01:50,410
happened before but not been

41
00:01:51,279 --> 00:01:51,739
ok.

42
00:01:52,169 --> 00:01:54,300
-- And this is
-- before you go on.

43
00:01:54,510 --> 00:01:57,559
I want to explain what's going on because there's an enormous

44
00:01:57,569 --> 00:02:00,660
number of people who are going to wake up on Monday morning

45
00:02:01,069 --> 00:02:06,069
-- and be like, what the heck is going on. So
-- what happened is somebody wrote,

46
00:02:06,629 --> 00:02:07,639
-- I
-- would have started at the beginning,

47
00:02:07,949 --> 00:02:09,740
I was going way back to the beginning.

48
00:02:09,910 --> 00:02:12,979
-- I'm going to the very start like we're
-- gonna,

49
00:02:13,160 --> 00:02:15,570
yeah, I was about to say somebody wrote a useful piece of software called

50
00:02:16,029 --> 00:02:16,960
before.

51
00:02:17,210 --> 00:02:21,320
Before you can create what before you can bake a pie? You have to invent the universe.

52
00:02:21,330 --> 00:02:22,100
Is that what it is?

53
00:02:22,270 --> 00:02:23,039
Because you need an oven,

54
00:02:23,449 --> 00:02:24,300
we need

55
00:02:24,509 --> 00:02:26,179
to invent the universe.

56
00:02:26,470 --> 00:02:29,529
So what is Xz Kurt? Do you want to talk about it?

57
00:02:29,539 --> 00:02:34,020
And I should say the letter X letter, the letter X and the letter Z, right?

58
00:02:34,029 --> 00:02:34,919
Two letters.

59
00:02:35,149 --> 00:02:35,779
OK.

60
00:02:36,070 --> 00:02:38,380
So there are compression algorithms,

61
00:02:38,389 --> 00:02:41,699
there are lossy and lossless compression algorithms,

62
00:02:42,190 --> 00:02:43,550
lossy compression algorithms.

63
00:02:43,600 --> 00:02:47,820
A good example would be J peg quite lovely because you can make a picture smaller and

64
00:02:47,929 --> 00:02:49,970
often that's OK because you're displaying it on

65
00:02:49,979 --> 00:02:51,750
a small screen like back in the eighties

66
00:02:51,910 --> 00:02:52,539
doesn't matter.

67
00:02:52,550 --> 00:02:56,460
Then there are lossless data compression algorithms which really matter.

68
00:02:56,470 --> 00:02:57,119
For example,

69
00:02:57,130 --> 00:03:00,479
if you're compressing a piece of text like a report or an

70
00:03:00,490 --> 00:03:03,750
email because you can't just start randomly removing letters and words,

71
00:03:03,949 --> 00:03:09,220
it could have an impact. There's a lot of lossless compression algorithms like

72
00:03:09,679 --> 00:03:10,619
a lot, a lot.

73
00:03:10,869 --> 00:03:11,380
And

74
00:03:12,279 --> 00:03:14,949
to make some general hand wavy terms,

75
00:03:15,490 --> 00:03:20,009
there are a variety of tradeoffs you can make in a lossless compression algorithm.

76
00:03:20,699 --> 00:03:21,589
You can usually,

77
00:03:21,600 --> 00:03:23,309
and the general rule of thumb is you

78
00:03:23,320 --> 00:03:26,750
can spend more time compressing and less time decompressing

79
00:03:27,360 --> 00:03:30,789
or less time compressing and more time decompressing.

80
00:03:31,089 --> 00:03:31,869
Pretty much. Yes.

81
00:03:31,880 --> 00:03:34,910
And generally speaking as a rule you want that if

82
00:03:34,919 --> 00:03:37,830
you spend more time compressing for it to get smaller

83
00:03:38,630 --> 00:03:40,610
because if it doesn't get smaller, then what's the point of spending more

84
00:03:40,750 --> 00:03:41,979
time compressing it. If,

85
00:03:42,080 --> 00:03:43,740
you know, if you spend twice as much compute,

86
00:03:43,750 --> 00:03:45,619
time compressing it and it's the same size, then

87
00:03:46,210 --> 00:03:46,750
don't,

88
00:03:47,009 --> 00:03:47,190
it's not,

89
00:03:47,729 --> 00:03:47,860
don't,

90
00:03:48,529 --> 00:03:51,759
most of us are probably used to like G zip, for example. Right.

91
00:03:51,770 --> 00:03:53,600
That's the old historical one.

92
00:03:53,899 --> 00:04:00,160
And for anyone who kind of plays in the sandbox of open source XZ appears to be the

93
00:04:00,570 --> 00:04:05,009
spiritual successor of G zip where you're seeing a

94
00:04:05,020 --> 00:04:07,800
lot of things instead of it being dot TGZ,

95
00:04:07,809 --> 00:04:11,279
you're seeing dot Tar dot XZ on many, many archives.

96
00:04:11,449 --> 00:04:15,639
And one of the things that we've sort of realized is in the past,

97
00:04:16,750 --> 00:04:19,059
you really cared about data size because

98
00:04:19,070 --> 00:04:22,040
like bandwidth and storage was horrifically expensive.

99
00:04:22,250 --> 00:04:26,230
-- Well, it still is, I mean, honestly,
-- well, not compared to the eighties.

100
00:04:26,429 --> 00:04:27,359
Well, no, but I mean,

101
00:04:27,369 --> 00:04:30,190
compared to everything else going on bandwidth and storage

102
00:04:30,200 --> 00:04:32,339
are generally the big cost in the cloud.

103
00:04:32,350 --> 00:04:32,519
Right.

104
00:04:32,630 --> 00:04:33,170
Exactly.

105
00:04:33,179 --> 00:04:36,910
But what's actually really interesting though is the amount of stuff

106
00:04:36,920 --> 00:04:40,209
that is compressed once and decompressed many and by many,

107
00:04:40,220 --> 00:04:43,899
I mean, probably on the order of millions, if not billions of times.

108
00:04:44,619 --> 00:04:48,880
And so there it really makes sense to spend a lot of work up front,

109
00:04:48,940 --> 00:04:51,010
compressing the heck out of something,

110
00:04:51,160 --> 00:04:53,450
spending a ton of compute time, compressing it

111
00:04:53,869 --> 00:04:57,750
so that the clients can get it faster over the network, spend less space,

112
00:04:57,760 --> 00:05:01,230
storing it and decompress it because the thing to remember too is like,

113
00:05:01,239 --> 00:05:04,649
you're sending compressed files to embedded systems now.

114
00:05:05,019 --> 00:05:05,470
Sure,

115
00:05:05,670 --> 00:05:06,320
whatever.

116
00:05:06,940 --> 00:05:11,059
So there's a real payoff if you can have sort of like,

117
00:05:11,070 --> 00:05:13,070
do a lot of work upfront and then have the clients

118
00:05:13,184 --> 00:05:14,125
less work. So

119
00:05:14,575 --> 00:05:20,265
XC is, it was uh one of the leaders uh probably a decade or two ago,

120
00:05:20,274 --> 00:05:23,165
like when it first came out, it was like, wow, this thing is slow.

121
00:05:23,174 --> 00:05:27,005
Like I would use it and I'm like, oh my, is my computer broken? Like what the heck?

122
00:05:27,015 --> 00:05:30,875
-- Well,
-- it, so I just looked it, it, the initial release of XZ

123
00:05:31,035 --> 00:05:32,355
is from 2009

124
00:05:32,820 --> 00:05:33,600
0 2009.

125
00:05:33,910 --> 00:05:36,630
Yeah, like that's not that old in the world. I mean, J

126
00:05:36,750 --> 00:05:40,029
is probably from what, like the freaking nineties or maybe in the eighties,

127
00:05:40,040 --> 00:05:40,290
I don't know.

128
00:05:41,609 --> 00:05:45,239
Oh, no, it would be dot Z dot Capital Z compress would be before that.

129
00:05:45,299 --> 00:05:48,040
Well, that's compressed, that's different for sure. So like

130
00:05:48,424 --> 00:05:51,774
this is not, we'll say enormously old in the context of computing

131
00:05:52,304 --> 00:05:53,834
and back, even in 2009,

132
00:05:53,845 --> 00:05:56,635
like you'd compress a file on your workstation and it would be like,

133
00:05:56,644 --> 00:05:57,545
is this thing broken?

134
00:05:57,554 --> 00:05:58,295
Because it would just take so

135
00:05:58,755 --> 00:05:58,785
long

136
00:05:59,954 --> 00:06:03,454
you get stuff that was like 20% smaller, which if you're the Linux kernel, it was

137
00:06:03,684 --> 00:06:03,855
awesome.

138
00:06:05,035 --> 00:06:05,545
Well, back,

139
00:06:05,625 --> 00:06:08,274
remember when a Linux kernel had to fit on a fluffy

140
00:06:08,285 --> 00:06:10,404
like you literally couldn't build it if it didn't fit,

141
00:06:10,415 --> 00:06:11,964
fit on a fluffy anyway.

142
00:06:11,975 --> 00:06:12,385
Ok.

143
00:06:12,494 --> 00:06:12,934
So,

144
00:06:13,065 --> 00:06:13,484
so

145
00:06:13,665 --> 00:06:14,404
Xz,

146
00:06:14,415 --> 00:06:16,454
let's pretend that was a good enough explanation

147
00:06:16,464 --> 00:06:17,804
for everyone to understand what's going on.

148
00:06:18,079 --> 00:06:23,660
So now in 2024 on March 31st, when we're talking about this,

149
00:06:24,140 --> 00:06:27,859
there has been what I will call the most impressive

150
00:06:28,250 --> 00:06:29,239
attack

151
00:06:29,450 --> 00:06:31,380
that has been mounted against open source.

152
00:06:31,390 --> 00:06:35,839
We know of, we know of being the key because I we we'll explain why, what,

153
00:06:35,850 --> 00:06:37,760
why we know of is important in this.

154
00:06:37,769 --> 00:06:40,920
Well, and here's what I love is, I have often said

155
00:06:41,350 --> 00:06:44,160
that one character security flaw. Is it

156
00:06:44,359 --> 00:06:46,839
-- a backdoor or is it a
-- whoopsie?

157
00:06:46,859 --> 00:06:51,320
I mean, well, in this instance, it was definitely not a whoopsie. We'll say that.

158
00:06:51,440 --> 00:06:53,119
Yeah. So this, this is

159
00:06:53,230 --> 00:06:57,510
-- literally a one character backdoor. It's a dot It's
-- beautiful. No, no, no. Oh no, no.

160
00:06:57,519 --> 00:06:58,809
The dot is different.

161
00:06:59,049 --> 00:07:01,290
The dot is part of a longer story.

162
00:07:01,660 --> 00:07:02,100
This is

163
00:07:02,950 --> 00:07:05,820
like, that's, that's part of the beauty of this is like there's a dot

164
00:07:06,019 --> 00:07:07,489
There's a period on one line.

165
00:07:07,500 --> 00:07:13,209
-- Let's,
-- let's start with, there's a link I'm going to open from a guy on.

166
00:07:13,220 --> 00:07:15,519
Do we want to work? Let's work backwards.

167
00:07:15,529 --> 00:07:18,170
Let's just uh chronologically, let's work backwards.

168
00:07:18,779 --> 00:07:19,929
Sure, because I think that's more

169
00:07:20,079 --> 00:07:20,179
interesting.

170
00:07:20,350 --> 00:07:21,899
So what, first of all,

171
00:07:21,910 --> 00:07:23,529
what's really interesting to me and amusing to me

172
00:07:23,540 --> 00:07:25,489
is this flaw was not found through code review.

173
00:07:25,500 --> 00:07:26,820
Or somebody auditing code

174
00:07:27,290 --> 00:07:31,339
it was found because SSH was running really slow and so

175
00:07:31,839 --> 00:07:32,480
no,

176
00:07:32,839 --> 00:07:33,230
sorry,

177
00:07:34,029 --> 00:07:36,619
0.4 seconds slower

178
00:07:37,579 --> 00:07:38,380
when a,

179
00:07:38,390 --> 00:07:44,720
a post Chris Dev was trying to log in 0.4 seconds when you or I notice 0.4 seconds.

180
00:07:44,809 --> 00:07:47,339
No, absolutely not.

181
00:07:47,429 --> 00:07:50,500
Well, I, as a human, I wouldn't notice it but I,

182
00:07:50,510 --> 00:07:53,579
I do often say people should have telemetry in their code

183
00:07:53,589 --> 00:07:56,739
so they can spot that 95th percentile stuff because that indicates

184
00:07:56,880 --> 00:07:58,339
regressions, right?

185
00:07:58,769 --> 00:07:59,359
So anyway,

186
00:07:59,510 --> 00:08:02,070
so he spotted it, profiled it and,

187
00:08:02,079 --> 00:08:05,859
and basically found this problem in the latest version

188
00:08:06,040 --> 00:08:09,149
of XC which is used by OPEN SSH

189
00:08:09,339 --> 00:08:10,429
for compression.

190
00:08:10,769 --> 00:08:11,399
It's not.

191
00:08:11,649 --> 00:08:11,910
No,

192
00:08:13,450 --> 00:08:15,980
I I've only skimmed the thing. I actually haven't read the details yet.

193
00:08:15,989 --> 00:08:18,429
Let me explain the attack because this is

194
00:08:18,940 --> 00:08:21,600
beyond insane. OK.

195
00:08:21,779 --> 00:08:23,279
-- Oh
-- It's the Yeah, never mind. Yeah.

196
00:08:23,290 --> 00:08:24,799
So here's what happens

197
00:08:25,019 --> 00:08:28,739
on certain Linux distribution specifically. Red Hat

198
00:08:28,880 --> 00:08:31,529
Debian and Collie Linux are the three that are often pointed out.

199
00:08:31,540 --> 00:08:34,080
But obviously Ubuntu and some others will be similar.

200
00:08:34,539 --> 00:08:42,289
They have patched open SSH to specifically hook into system D to do system D things

201
00:08:42,429 --> 00:08:45,080
as these big distributions tend to do

202
00:08:45,390 --> 00:08:45,559
it.

203
00:08:46,179 --> 00:08:49,000
Oh So open SSH doesn't natively support system D.

204
00:08:50,380 --> 00:08:52,739
Why would it, those people probably hate the system.

205
00:08:55,559 --> 00:08:56,390
Why do they do that

206
00:08:56,820 --> 00:08:57,059
thing?

207
00:08:58,539 --> 00:08:58,820
Open BD?

208
00:08:59,880 --> 00:08:59,950
And

209
00:09:00,190 --> 00:09:02,159
here's where it gets completely banana. So,

210
00:09:02,270 --> 00:09:03,869
so system D

211
00:09:04,440 --> 00:09:05,690
uses

212
00:09:05,969 --> 00:09:10,510
XZ, the, the lib lz ma part of the XZ specifically, right?

213
00:09:11,239 --> 00:09:14,549
It, it loads it into its process space

214
00:09:14,960 --> 00:09:17,020
and it does stuff with it. Right?

215
00:09:17,030 --> 00:09:19,340
Just because it needs a compression library as every everything

216
00:09:19,530 --> 00:09:22,239
does and system D does literally everything. So, whatever

217
00:09:22,419 --> 00:09:27,489
now. So what happens is, here's where it gets weird. So here's what's gonna happen.

218
00:09:27,650 --> 00:09:30,640
So let's say, I mean, normal running system, right?

219
00:09:30,890 --> 00:09:34,479
I've got open SSH, loading some system D things

220
00:09:34,799 --> 00:09:37,559
and then they're going to interact in whatever ways they interact.

221
00:09:37,570 --> 00:09:40,020
But fundamentally you've got like open SSH, on one side,

222
00:09:40,030 --> 00:09:43,729
you've got system D on the other and things are, are supposed to get along.

223
00:09:43,739 --> 00:09:43,940
Right.

224
00:09:43,950 --> 00:09:49,340
And what's interesting is system D and open SSH are essentially the only generally

225
00:09:49,849 --> 00:09:54,299
cross distribution, default components of a Linux district.

226
00:09:56,000 --> 00:09:58,710
No, really? Because you have to be able to log into the system.

227
00:09:58,719 --> 00:10:00,190
So that's open SSH right there.

228
00:10:00,419 --> 00:10:02,760
-- And the system has to be able to boot.
-- There's,

229
00:10:04,169 --> 00:10:07,390
there's tons of shared libraries, but here's where it's gonna get sillier.

230
00:10:07,719 --> 00:10:09,469
-- No,
-- no. But I mean, from a service point of view,

231
00:10:09,940 --> 00:10:11,429
it's gonna get wacky. Don't worry.

232
00:10:11,585 --> 00:10:13,445
We, we go off the rails more than once

233
00:10:13,724 --> 00:10:14,604
in a normal running system.

234
00:10:14,614 --> 00:10:18,734
We got open ssh, you've got it talking to system D and these are

235
00:10:19,085 --> 00:10:22,594
like C binaries, right? This is we're talking about like low

236
00:10:22,705 --> 00:10:27,224
level binary libraries and, and interaction of applications on A L system

237
00:10:27,534 --> 00:10:29,445
when you have a process

238
00:10:29,604 --> 00:10:33,205
and it loads a library on the disk like a binary library

239
00:10:33,539 --> 00:10:37,080
they share, they have like a global memory space. OK?

240
00:10:37,510 --> 00:10:41,270
And so what happens is like if something needs to call a function,

241
00:10:41,280 --> 00:10:44,580
it has to go through the, the whole LD universe and be like,

242
00:10:44,590 --> 00:10:48,640
I need to call this function somebody and magic happens and it gets called OK?

243
00:10:49,539 --> 00:10:51,789
And so what happens in this attack?

244
00:10:51,799 --> 00:10:52,280
And we'll,

245
00:10:52,289 --> 00:10:54,380
we'll explain how the attack is loaded

246
00:10:54,390 --> 00:10:57,789
because the that's completely bananas by itself.

247
00:10:57,799 --> 00:11:01,419
And basically what's happening is the Lib Lz Ma

248
00:11:01,630 --> 00:11:09,010
has a function that exists in open SSH. So what happens is Lib Lz Ma

249
00:11:09,270 --> 00:11:10,640
has a function

250
00:11:11,030 --> 00:11:11,500
that

251
00:11:11,669 --> 00:11:14,479
is, is hidden inside of itself now

252
00:11:15,020 --> 00:11:20,320
that is designed to run in place of a function open SSH has

253
00:11:21,270 --> 00:11:22,619
and that's it. But here's the thing.

254
00:11:22,630 --> 00:11:26,080
So here's where here's the just completely banana part of this backdoor.

255
00:11:26,090 --> 00:11:27,940
You have a library

256
00:11:28,119 --> 00:11:28,789
at least three,

257
00:11:28,955 --> 00:11:29,924
three levels deep

258
00:11:30,575 --> 00:11:33,934
that has been backdoor to attack open SSH that in

259
00:11:33,945 --> 00:11:37,864
a normal context isn't even linked into open SSH.

260
00:11:38,065 --> 00:11:39,534
Well, and see this is something

261
00:11:39,784 --> 00:11:43,815
I've been worried and wondered about for a long time is how do I put it this way?

262
00:11:43,825 --> 00:11:46,854
Linux systems are what you call highly interconnected

263
00:11:48,200 --> 00:11:49,289
open source.

264
00:11:50,609 --> 00:11:53,369
I mean, the way operationally that it runs

265
00:11:53,890 --> 00:11:56,369
and to put it bluntly, this is why

266
00:11:56,510 --> 00:11:58,229
when I, when I talk about containers,

267
00:11:58,239 --> 00:12:01,539
I'm like you do one thing per container and you expose it through a network port

268
00:12:01,650 --> 00:12:04,330
because if it's running in the same container or

269
00:12:04,460 --> 00:12:07,690
like, it's just they can go touch each other way too much.

270
00:12:07,890 --> 00:12:08,570
There's way too many

271
00:12:08,674 --> 00:12:11,494
ways for stuff to touch each other. And this is a perfect example of it.

272
00:12:11,604 --> 00:12:13,315
I don't know if I would agree with that.

273
00:12:13,325 --> 00:12:17,174
What you said is not incorrect where in there's processes have

274
00:12:17,184 --> 00:12:19,635
some ability to kind of cross over into one another.

275
00:12:19,645 --> 00:12:23,255
But once you start loading binary libraries, it's like there's no,

276
00:12:23,265 --> 00:12:25,094
there's no anything between each other.

277
00:12:25,104 --> 00:12:29,335
However, here's where the dot you mentioned earlier comes into play.

278
00:12:29,700 --> 00:12:33,010
So apparently, Lib Lz Ma

279
00:12:33,330 --> 00:12:38,739
has a concept of a sandbox they were working on which has the ability to kind of,

280
00:12:38,750 --> 00:12:39,080
you know,

281
00:12:39,169 --> 00:12:42,000
like let's push this off into the corner and and not let it

282
00:12:42,010 --> 00:12:44,900
like trample all of the process memory space and all this stuff,

283
00:12:44,909 --> 00:12:45,080
right?

284
00:12:45,664 --> 00:12:49,825
And one of the additions the attacker added

285
00:12:49,955 --> 00:12:53,304
was a.in a file that disabled the sandbox

286
00:12:53,794 --> 00:12:54,815
and it looked you could,

287
00:12:54,825 --> 00:12:57,544
you can't even tell it's there if you don't know what to look for.

288
00:12:57,554 --> 00:12:57,864
It's

289
00:12:58,075 --> 00:13:00,575
-- wild.
-- If you're using the wrong font,

290
00:13:01,155 --> 00:13:02,984
if you're using the wrong font in your code editor,

291
00:13:02,994 --> 00:13:04,984
you might not even physically notice it.

292
00:13:05,270 --> 00:13:05,299
It

293
00:13:05,520 --> 00:13:07,489
it's yes, this is like

294
00:13:07,919 --> 00:13:09,530
the people who did this attack,

295
00:13:09,859 --> 00:13:14,679
they, they know what they're doing, right? This was not an amateur by any means. Now

296
00:13:14,890 --> 00:13:16,679
we will link to a post by Gussie.

297
00:13:16,690 --> 00:13:20,070
The dog who is famous for creating the log

298
00:13:20,080 --> 00:13:22,280
for shell logo which Jerry Bell created the log

299
00:13:22,390 --> 00:13:22,500
for

300
00:13:22,640 --> 00:13:22,820
shell. Lo

301
00:13:23,340 --> 00:13:26,929
Jerry Bell created an XZ for SHELL logo for this, which is,

302
00:13:27,299 --> 00:13:31,080
it's, it's the logo for the show. It's, it's so good. I can't not use it.

303
00:13:31,090 --> 00:13:31,539
But anyway,

304
00:13:31,549 --> 00:13:34,960
goss the dog posted a really nice blog post and I'll put a link in the

305
00:13:34,969 --> 00:13:38,729
show notes to it where he kind of mentions that one of the things happening here

306
00:13:39,059 --> 00:13:45,440
was system D was removing the like automatically loading of the XZ libraries

307
00:13:45,690 --> 00:13:51,150
by default. And this was a change that had gone into upstream system D already.

308
00:13:51,380 --> 00:13:56,119
And they think that caused the attacker to try to force

309
00:13:56,309 --> 00:13:58,919
the new XZ into like redhead and Debbie and

310
00:13:58,929 --> 00:14:01,400
-- other things and they got sloppy because they were
-- rushing

311
00:14:01,640 --> 00:14:01,989
to move.

312
00:14:02,119 --> 00:14:02,130
Ah,

313
00:14:02,250 --> 00:14:05,119
so the classic, they had a plan, they had a timeline

314
00:14:05,729 --> 00:14:08,250
and then the world changed and they had to move up the timeline and

315
00:14:08,409 --> 00:14:11,280
like every heist film has ever shown us. No, I'm serious.

316
00:14:11,289 --> 00:14:13,659
Like I'm not being facetious, but like every heist film ever,

317
00:14:13,669 --> 00:14:16,640
you move up the timeline and yeah, things go all to heck in a handbasket.

318
00:14:16,659 --> 00:14:20,559
Exactly. That, that is exactly what appears to have happened now. OK.

319
00:14:21,530 --> 00:14:24,549
That was a lot to, to unwrap. But basically

320
00:14:24,849 --> 00:14:29,140
if, if you were talking about sophistication of attacks, this is really high.

321
00:14:29,150 --> 00:14:34,640
Now we should go through this picture from uh Frogger where they detail kind of

322
00:14:34,650 --> 00:14:38,909
the timeline of how this happened and we're gonna go back all the way to 2021

323
00:14:39,039 --> 00:14:39,909
on this timeline.

324
00:14:40,210 --> 00:14:42,960
Well, actually, I think we should go backwards. So,

325
00:14:43,159 --> 00:14:45,440
so we've, we've had this happen in the last few days

326
00:14:46,489 --> 00:14:47,109
and

327
00:14:47,299 --> 00:14:52,489
what's really interesting to me is so, yeah, like you said, uh here we go. 2023 0708

328
00:14:52,719 --> 00:14:55,250
pr opened an OS S fuzz to disable if funk

329
00:14:55,260 --> 00:14:57,659
for fuzzing builds allegedly to mass the malicious changes,

330
00:14:57,669 --> 00:14:57,849
right?

331
00:14:57,859 --> 00:14:58,390
So they made

332
00:14:59,020 --> 00:15:00,250
so they're basically like

333
00:15:00,460 --> 00:15:03,299
this is a multi, like not just a multistage

334
00:15:03,469 --> 00:15:07,330
effort and attack, but it was done over a period of several years, a

335
00:15:07,820 --> 00:15:08,500
year and a half.

336
00:15:08,799 --> 00:15:10,190
Well, OK, so if we start

337
00:15:10,296 --> 00:15:10,995
at the beginning

338
00:15:11,366 --> 00:15:13,815
2021 the user which is

339
00:15:14,145 --> 00:15:17,156
Gaya Tan, if I'm pronouncing that incorrectly, I apologize

340
00:15:17,526 --> 00:15:18,435
but they created their github

341
00:15:18,536 --> 00:15:21,976
-- account in 20 21.
-- Interesting note, their SSH key,

342
00:15:22,125 --> 00:15:26,116
there were also some other SSH keys created like a day or so part

343
00:15:26,166 --> 00:15:30,825
with related to other accounts that were also egging on this whole thing.

344
00:15:31,176 --> 00:15:31,765
So

345
00:15:31,955 --> 00:15:34,315
later, basically, uh he,

346
00:15:34,421 --> 00:15:37,682
he gets involved in the mail and this is like, I kind of want to help,

347
00:15:37,692 --> 00:15:39,721
maybe kind of take over or whatever, whatever.

348
00:15:39,802 --> 00:15:42,461
And it looks like he had some sock puppets that were like, yeah, you know,

349
00:15:42,471 --> 00:15:45,481
you should let this guy help blah, blah, blah and like to put it bluntly, they,

350
00:15:45,492 --> 00:15:47,471
they kind of bullied and manipulated

351
00:15:47,642 --> 00:15:48,361
the XC

352
00:15:48,731 --> 00:15:51,942
contain uh maintainer sorry, I almost said container, sorry about that

353
00:15:52,361 --> 00:15:55,341
into allowing this, which I,

354
00:15:55,752 --> 00:15:58,471
yeah, I mean, the the this person is,

355
00:15:58,929 --> 00:15:59,229
you know,

356
00:15:59,239 --> 00:16:02,510
it's that back to that XK CD thing with the one little

357
00:16:02,520 --> 00:16:05,549
wedge with the person in Nebraska and living out in a cornfield,

358
00:16:05,559 --> 00:16:07,340
you know, maintaining this thing that

359
00:16:07,580 --> 00:16:10,190
Western civilization relies upon to work.

360
00:16:10,640 --> 00:16:11,150
So

361
00:16:11,780 --> 00:16:15,150
this, yeah, this is not like AAA little happenstance for. No,

362
00:16:15,340 --> 00:16:15,830
this is,

363
00:16:16,429 --> 00:16:17,190
this was planned.

364
00:16:17,440 --> 00:16:18,820
It's very well coordinate

365
00:16:20,159 --> 00:16:20,770
the timeline.

366
00:16:22,210 --> 00:16:24,789
You used the word coordinate. I'm gonna disagree with you there.

367
00:16:24,799 --> 00:16:26,789
This could easily be one person.

368
00:16:28,940 --> 00:16:32,739
It probably is one person, but I think they were.

369
00:16:33,549 --> 00:16:35,450
Here's the story, I don't know,

370
00:16:36,200 --> 00:16:38,229
related to their day job like they are.

371
00:16:38,919 --> 00:16:43,150
-- So
-- here's, here's what I will explain to kind of go on here.

372
00:16:43,159 --> 00:16:46,419
There is a story I saw and master on that. I don't know if I'll be able to find it.

373
00:16:46,429 --> 00:16:49,580
I will try to find it, but I don't think I will where this person talked about.

374
00:16:49,590 --> 00:16:50,140
They said

375
00:16:50,359 --> 00:16:53,020
I at one time worked for one of the, this was in the nineties,

376
00:16:53,030 --> 00:16:56,960
one of the largest cell phone manufacturers on the on the planet, right?

377
00:16:56,969 --> 00:16:59,309
So you can imagine in the nineties, there were basically two.

378
00:16:59,659 --> 00:17:02,645
They said I work for one of the largest cell phone manufacture, actors on the planet.

379
00:17:02,875 --> 00:17:07,114
And they had a person who came into the company as a contractor

380
00:17:07,714 --> 00:17:12,685
and they worked with this, the, the as a contractor for two months and they were like

381
00:17:12,824 --> 00:17:16,045
an exceptional programmer, like, phenomenally better

382
00:17:16,175 --> 00:17:17,834
than really anyone even on staff.

383
00:17:17,844 --> 00:17:20,545
And so they, uh, logically hired the person on full time,

384
00:17:20,795 --> 00:17:24,755
the person worked at the company for approximately six months as a full

385
00:17:24,765 --> 00:17:29,114
time employee and were just one of the best programmers on staff bar.

386
00:17:29,125 --> 00:17:29,925
None. Right.

387
00:17:30,969 --> 00:17:32,709
They stopped coming into work one day.

388
00:17:33,760 --> 00:17:34,910
Then they found out

389
00:17:35,119 --> 00:17:36,040
when they looked,

390
00:17:36,050 --> 00:17:39,750
the person had accessed all of the source code for all of the products.

391
00:17:40,260 --> 00:17:43,550
They sent a wellness check to the person's apartment.

392
00:17:44,359 --> 00:17:46,390
It was an empty apartment. There was nothing in it.

393
00:17:46,599 --> 00:17:47,790
See, they

394
00:17:48,030 --> 00:17:52,109
had never cashed a single paycheck. They had been issued as an employee

395
00:17:52,660 --> 00:17:56,520
and they basically had no, like real record of this human being.

396
00:17:56,530 --> 00:17:57,880
-- They could even find,
-- see,

397
00:17:57,890 --> 00:18:00,880
this makes no sense to me because you do all that work and you don't

398
00:18:01,109 --> 00:18:04,000
have like, you don't cash the paychecks. That makes no damn sense.

399
00:18:04,180 --> 00:18:06,300
-- It
-- was clearly some sort of like

400
00:18:06,589 --> 00:18:06,609
the

401
00:18:06,790 --> 00:18:08,140
Russian state espionage,

402
00:18:08,250 --> 00:18:10,829
-- but that's
-- sloppy because not cashing paychecks.

403
00:18:10,839 --> 00:18:11,959
That would be an immediate red flag.

404
00:18:11,969 --> 00:18:14,219
Like I'll be blunt if I don't know, like,

405
00:18:14,229 --> 00:18:16,430
if I had somebody working for me and they didn't cash your paycheck,

406
00:18:16,439 --> 00:18:17,449
I would immediately

407
00:18:18,000 --> 00:18:22,119
-- be suspicious or something's wrong.
-- No one knew this in the nineties.

408
00:18:22,130 --> 00:18:23,739
People cash their paychecks.

409
00:18:25,489 --> 00:18:26,140
Yes.

410
00:18:26,150 --> 00:18:29,699
But I bet you in the nineties it would take a year or more

411
00:18:29,709 --> 00:18:32,920
-- for the payroll departments to figure that I'm also saying
-- is it's sloppy from,

412
00:18:32,930 --> 00:18:34,709
if this was a so called spy

413
00:18:34,819 --> 00:18:38,119
act, which obviously it indicates it was or possibly mental illness.

414
00:18:38,130 --> 00:18:40,010
But anyways ignoring that, for example,

415
00:18:40,020 --> 00:18:42,130
they could have easily cashed the paychecks,

416
00:18:42,140 --> 00:18:44,739
they could have easily had an apartment full of crap.

417
00:18:45,130 --> 00:18:45,939
Ok. Whatever.

418
00:18:45,949 --> 00:18:50,020
I, I don't want to dwell on that point because that point is irrelevant to the story.

419
00:18:50,040 --> 00:18:51,939
Well, but that kind of leads actually.

420
00:18:51,949 --> 00:18:56,119
Well, it is relative to this one because they clearly, they set up sock puppets,

421
00:18:56,130 --> 00:18:58,579
but they set up the accounts within a day or two of each other, which

422
00:18:58,969 --> 00:19:01,469
is probably ok in the open source world because

423
00:19:01,589 --> 00:19:03,280
until after the fact,

424
00:19:03,489 --> 00:19:06,260
you know, you're not gonna know to look. Yeah, no one, no one knew.

425
00:19:06,270 --> 00:19:09,290
Like I'm always reminded of the world's biggest diamond heist in Holland.

426
00:19:09,300 --> 00:19:10,180
You know how they caught them.

427
00:19:11,079 --> 00:19:13,199
The guy was supposed to burn their garbage and he

428
00:19:13,209 --> 00:19:14,390
just threw it out by the side of the road.

429
00:19:14,400 --> 00:19:17,430
And from that they got, I forget it was either a fingerprint or a DNA and

430
00:19:17,719 --> 00:19:18,829
unraveled the whole thing,

431
00:19:19,109 --> 00:19:19,920
right? It's like

432
00:19:20,160 --> 00:19:20,770
just

433
00:19:20,920 --> 00:19:21,329
like,

434
00:19:22,109 --> 00:19:22,290
ok,

435
00:19:22,479 --> 00:19:25,550
regardless we have this attack starts in 2021

436
00:19:25,699 --> 00:19:28,430
there's an enormous amount of effort put in by

437
00:19:28,439 --> 00:19:32,709
this fake account to get into the XZ project.

438
00:19:33,250 --> 00:19:35,339
I would say enormous amount of effort. Like

439
00:19:36,010 --> 00:19:36,630
tens of

440
00:19:37,000 --> 00:19:37,869
actually, you're right.

441
00:19:37,880 --> 00:19:40,780
It wasn't an enormous amount of effort, but I think that's an important point.

442
00:19:40,790 --> 00:19:43,459
People put more work into a defcon talk than this.

443
00:19:43,680 --> 00:19:47,449
No, I'm serious. This could be just literally somebody staging a defcon talk.

444
00:19:47,459 --> 00:19:49,010
I don't think it is,

445
00:19:49,020 --> 00:19:52,310
but I'm saying it's I've seen and I've worked with

446
00:19:52,319 --> 00:19:54,550
people who've put more work into stuff than this.

447
00:19:54,939 --> 00:19:55,449
OK?

448
00:19:55,650 --> 00:19:56,949
I won't disagree with that.

449
00:19:57,290 --> 00:19:59,500
I think that is a very reasonable point.

450
00:19:59,510 --> 00:20:02,530
And I think the fact that the bar is so low to

451
00:20:02,540 --> 00:20:05,780
mount an attack like this is noteworthy as a data point.

452
00:20:05,790 --> 00:20:09,930
-- Remember
-- when that Nation State attacked D DNS and took down the entire internet

453
00:20:10,150 --> 00:20:13,619
and then it turned out to be a bunch of teenagers having a beef about Minecraft.

454
00:20:13,829 --> 00:20:17,349
Right. That's, that's what I'm saying. Like here, I'm sorry. Yes,

455
00:20:17,630 --> 00:20:19,020
this smells like a nation State,

456
00:20:19,030 --> 00:20:24,579
but it literally could be a rather clever 16 year old with way too much spare time,

457
00:20:24,910 --> 00:20:28,180
-- I
-- think because it occurred over the course of three years.

458
00:20:28,189 --> 00:20:31,550
I'm inclined to say it is not a singular attacker

459
00:20:31,680 --> 00:20:32,219
because a

460
00:20:32,349 --> 00:20:32,829
three

461
00:20:33,010 --> 00:20:35,089
year game like this is,

462
00:20:35,430 --> 00:20:36,880
-- that is a long game.
-- It

463
00:20:37,130 --> 00:20:38,530
is. But I mean,

464
00:20:38,719 --> 00:20:41,310
to have this on your resume as a defcon talk,

465
00:20:41,930 --> 00:20:45,569
not anymore. You're gonna get freaking arrested. Now,

466
00:20:45,719 --> 00:20:46,140
pause,

467
00:20:46,310 --> 00:20:51,339
-- arrested for what
-- I was wondering that is, does this break any laws?

468
00:20:51,520 --> 00:20:54,530
-- And it might
-- not, they didn't access any computer systems.

469
00:20:54,949 --> 00:20:58,310
I like until they, if they exploited this flaw,

470
00:20:58,319 --> 00:21:01,709
then they definitely violated the uh computer fraud and misuse.

471
00:21:01,719 --> 00:21:03,130
Uh What is it? This, I forget C

472
00:21:03,260 --> 00:21:03,800
FAA,

473
00:21:03,979 --> 00:21:05,959
C FAA in America and whatever

474
00:21:06,130 --> 00:21:07,380
it is in other countries.

475
00:21:07,530 --> 00:21:08,000
But

476
00:21:08,390 --> 00:21:10,920
no offense if people go to jail for writing bad code,

477
00:21:11,079 --> 00:21:15,859
-- but
-- it's not bad code. Like the level of no, it is not bad code.

478
00:21:15,869 --> 00:21:18,849
-- This is a clearly malicious
-- b

479
00:21:19,449 --> 00:21:20,119
there's

480
00:21:20,599 --> 00:21:21,359
unquestionably

481
00:21:22,010 --> 00:21:22,069
uh

482
00:21:22,209 --> 00:21:26,140
and PP has blocked signups recently because they're getting so much malicious

483
00:21:26,150 --> 00:21:28,800
junk and same with N PM and same with github like,

484
00:21:29,000 --> 00:21:32,709
yeah, that's, I mean, if it is against the law somewhere somehow,

485
00:21:32,719 --> 00:21:35,170
then we got a lot of people that need to go to jail.

486
00:21:35,280 --> 00:21:39,430
I agree with that. I think that is a very interesting question.

487
00:21:39,439 --> 00:21:43,270
-- As
-- far as I know, it doesn't violate any laws. I've never seen a law remotely.

488
00:21:43,380 --> 00:21:47,430
Yeah. My suspicion is, this is not illegal because it was not,

489
00:21:47,839 --> 00:21:50,869
nothing was like, well to our knowledge,

490
00:21:50,880 --> 00:21:53,109
nothing was successfully attacked with this.

491
00:21:53,119 --> 00:21:56,050
Was it University of Minnesota doing the Linux kernel thing?

492
00:21:56,300 --> 00:21:57,010
Yes,

493
00:21:58,650 --> 00:21:58,780
it

494
00:21:59,060 --> 00:21:59,280
was

495
00:21:59,380 --> 00:22:00,020
unethical

496
00:22:00,719 --> 00:22:02,010
but it was not illegal.

497
00:22:02,219 --> 00:22:04,209
I don't know if that one was illegal or not.

498
00:22:04,219 --> 00:22:07,609
One of the smart open source lawyers would have chimed in if it was illegal.

499
00:22:07,780 --> 00:22:10,489
That's true. They would have absolutely brought up some random,

500
00:22:10,689 --> 00:22:12,569
you know, statute that you're not allowed to

501
00:22:12,969 --> 00:22:15,209
whatever. But as, as

502
00:22:15,395 --> 00:22:17,145
I cannot imagine this being

503
00:22:17,324 --> 00:22:18,895
illegal in any way, shape or form.

504
00:22:18,905 --> 00:22:19,584
So let me, I,

505
00:22:19,594 --> 00:22:22,665
I want to now explain what the literal attack is and how

506
00:22:22,675 --> 00:22:24,984
this worked because this is also on this timeline from Froger,

507
00:22:24,994 --> 00:22:26,564
which is really good and it's amazing.

508
00:22:26,574 --> 00:22:27,035
So,

509
00:22:27,045 --> 00:22:29,354
one of the things that not everyone understands

510
00:22:29,364 --> 00:22:32,064
when you're distributing like tar balls of stuff

511
00:22:32,474 --> 00:22:33,165
is

512
00:22:33,630 --> 00:22:38,530
you un tar the archive and you'd often run dot slash configure,

513
00:22:38,640 --> 00:22:42,150
which every old person just shuddered a little bit when they heard those words

514
00:22:42,329 --> 00:22:43,170
because

515
00:22:43,589 --> 00:22:47,140
it's not like when you do like an N PM install something,

516
00:22:47,550 --> 00:22:49,630
you have to run dot slash configure and you

517
00:22:49,640 --> 00:22:52,150
might have to provide it with various flags about

518
00:22:52,160 --> 00:22:54,410
where some libraries live on your system and where

519
00:22:54,420 --> 00:22:57,430
-- you want to install the stuff or
-- populate like half

520
00:22:57,587 --> 00:22:58,837
a gigabyte of stuff and slash

521
00:22:59,107 --> 00:22:59,526
art.

522
00:23:00,136 --> 00:23:00,357
Ask

523
00:23:00,567 --> 00:23:00,587
me

524
00:23:00,717 --> 00:23:00,737
how

525
00:23:00,886 --> 00:23:01,087
I know

526
00:23:03,616 --> 00:23:04,386
I just user

527
00:23:04,487 --> 00:23:06,006
lib. I just had a tweet. Oh,

528
00:23:06,136 --> 00:23:07,817
sorry people, I shouldn't have said that.

529
00:23:08,246 --> 00:23:09,166
-- So,
-- but anyway,

530
00:23:09,496 --> 00:23:15,207
it was very common for a tar that the tar ball of source to have some things in it

531
00:23:15,616 --> 00:23:16,727
that aren't in

532
00:23:16,916 --> 00:23:20,927
-- the, well, I'll say get repo but we all know that's not what it
-- was

533
00:23:21,543 --> 00:23:25,203
is having zip so that it compiles on windows.

534
00:23:26,154 --> 00:23:29,364
Well, no, no, not even that, not even that. I'm just saying the configure script

535
00:23:29,644 --> 00:23:32,244
and there would be like, maybe some macros that could come with

536
00:23:32,354 --> 00:23:32,984
things. There be this

537
00:23:33,093 --> 00:23:35,843
weird stuff you would generate as,

538
00:23:35,854 --> 00:23:40,484
as like just a polite service to the person accepting your source code and that,

539
00:23:40,494 --> 00:23:43,404
that has, that still exists that's still a thing, right?

540
00:23:43,423 --> 00:23:48,901
And so this also contains and M four. Macro M four. Is this weird macro language that

541
00:23:49,171 --> 00:23:50,451
sadly is still used.

542
00:23:50,691 --> 00:23:52,171
I mean, send mail was based on it.

543
00:23:52,181 --> 00:23:57,441
And again, Twitching because I wrote send mail to fax gateway and M four.

544
00:23:57,750 --> 00:23:59,071
So, ok, so anyway,

545
00:23:59,301 --> 00:23:59,840
so

546
00:24:00,100 --> 00:24:02,000
it had this malicious

547
00:24:02,230 --> 00:24:03,750
M four script

548
00:24:04,220 --> 00:24:05,311
is script the right word.

549
00:24:05,590 --> 00:24:06,041
It's a Macro

550
00:24:07,220 --> 00:24:07,281
M

551
00:24:07,600 --> 00:24:08,311
four script

552
00:24:08,661 --> 00:24:09,250
that

553
00:24:10,000 --> 00:24:12,430
that only existed in the Tar ball

554
00:24:12,719 --> 00:24:14,150
and it was in the git ignore.

555
00:24:14,160 --> 00:24:17,839
So like this person wanted to make sure we didn't accidentally include it

556
00:24:19,119 --> 00:24:20,609
because the code scanner might have caught it or

557
00:24:20,619 --> 00:24:22,260
somebody might have seen this weird looking thing.

558
00:24:22,270 --> 00:24:22,510
Right.

559
00:24:23,030 --> 00:24:24,189
Right. That's right. That's right.

560
00:24:24,979 --> 00:24:27,739
So it took this um this build the host M four

561
00:24:27,800 --> 00:24:31,810
macro and then that thing would basically take one of the

562
00:24:31,939 --> 00:24:33,650
a test, a test case.

563
00:24:33,660 --> 00:24:38,569
That was, it was the, the test case was called bad three corrupt LZ ma two dot XZ.

564
00:24:38,829 --> 00:24:42,010
So the idea being what you have test cases, you have good test cases,

565
00:24:42,020 --> 00:24:43,170
you have bad test cases.

566
00:24:43,180 --> 00:24:47,349
Obviously you need, you need tests that are supposed to fail. Uh Yeah. Uh

567
00:24:47,680 --> 00:24:50,689
That's not obvious to most people. Actually, I have actually,

568
00:24:51,040 --> 00:24:53,969
I've had to spend a lot of time explaining that to some people where I'm like,

569
00:24:54,160 --> 00:24:56,829
I tested this both. So it works and it fails and they're like, what?

570
00:24:56,839 --> 00:24:59,390
And I'm like, well, it's supposed to fail when you do XY and Z and they're like,

571
00:24:59,400 --> 00:25:03,349
-- I guess, and I'm like, no, it, it actually really should fail and it does that
-- fair.

572
00:25:03,640 --> 00:25:05,500
Well, and so for things like compression libraries,

573
00:25:05,510 --> 00:25:08,280
you want to make sure like we're not overflowing a buffer when it

574
00:25:08,290 --> 00:25:11,439
tells me that it's going to decompress a bazillion bites or whatever.

575
00:25:11,449 --> 00:25:13,660
There's a, there's many reasons. Ok. So anyway,

576
00:25:13,890 --> 00:25:20,160
it is a, a corrupted XZ file. Then this M four script swaps a bunch of bites,

577
00:25:20,420 --> 00:25:23,030
right? To, to turn it from a corrupted

578
00:25:23,630 --> 00:25:27,239
XZ file into an uncorrupted XZ file

579
00:25:28,060 --> 00:25:28,770
into a bash

580
00:25:28,939 --> 00:25:29,900
file.

581
00:25:31,280 --> 00:25:35,319
Once we uncompress the XZ file, now we have a

582
00:25:35,479 --> 00:25:37,020
bash file

583
00:25:37,219 --> 00:25:40,819
which then does some more wacky stuff, right?

584
00:25:40,959 --> 00:25:43,979
And we end up eventually after all these stages of running

585
00:25:43,989 --> 00:25:46,599
all this bash crap and doing all these weird substitutions.

586
00:25:46,609 --> 00:25:47,670
So we're talking like

587
00:25:47,869 --> 00:25:51,439
probably what, four or five layers of obfuscation.

588
00:25:51,780 --> 00:25:54,510
But what I love is it also lives off the land by using XZ

589
00:25:55,130 --> 00:25:56,579
because of course it does. It is.

590
00:25:57,209 --> 00:25:58,270
But I mean, that's clever.

591
00:25:58,280 --> 00:26:01,910
That's smart because it's basically, it's, it's essentially encryption

592
00:26:02,079 --> 00:26:03,660
by, by literally flipping

593
00:26:04,239 --> 00:26:07,109
well, it, but until you flip those few bytes correctly,

594
00:26:07,119 --> 00:26:10,189
it doesn't like you could flip those bytes to a bajillion well,

595
00:26:10,199 --> 00:26:11,790
to literally every other value

596
00:26:12,010 --> 00:26:14,359
-- and it would still be a broken file. Is that
-- encryption?

597
00:26:14,369 --> 00:26:15,290
I don't know, I don't want to argue this

598
00:26:15,635 --> 00:26:16,314
ethics at that point.

599
00:26:16,324 --> 00:26:16,444
But,

600
00:26:16,454 --> 00:26:18,785
but what I'm saying is like statistically

601
00:26:18,795 --> 00:26:21,055
nobody's ever going to accidentally find out.

602
00:26:21,484 --> 00:26:25,135
No, no. Well, till now. OK. But anyway, we've got all these layers of

603
00:26:25,285 --> 00:26:26,074
abstraction.

604
00:26:26,194 --> 00:26:28,704
We eventually, eventually

605
00:26:29,125 --> 00:26:31,214
we end up with a, a

606
00:26:31,314 --> 00:26:34,435
bunch of binary code A 0.0

607
00:26:34,704 --> 00:26:35,944
file functionally.

608
00:26:36,599 --> 00:26:38,160
The in fact, oh, here's the name of it.

609
00:26:38,170 --> 00:26:42,099
It's Lib Lz Ma underscore L A dash CRC

610
00:26:42,109 --> 00:26:46,819
64 dash fast 0.0 which is a very plausible sounding

611
00:26:46,979 --> 00:26:53,069
object file and then that gets added into the linking process for the final library.

612
00:26:53,079 --> 00:26:55,270
So basically, now we've added in

613
00:26:55,489 --> 00:26:56,949
the attacker's code

614
00:26:57,229 --> 00:27:00,520
that does not exist a source anywhere we can find

615
00:27:00,650 --> 00:27:03,609
and was confiscated until the build happened.

616
00:27:03,910 --> 00:27:06,030
-- And then we linked it in,
-- I have a question for you.

617
00:27:06,449 --> 00:27:09,890
Are there any S bomb tools that would catch this in

618
00:27:09,900 --> 00:27:12,109
the sense of they would take this tar ball and go.

619
00:27:12,510 --> 00:27:14,709
Where on earth does this file come from?

620
00:27:15,189 --> 00:27:16,829
No, that's not what, what s bomb

621
00:27:16,969 --> 00:27:18,410
would do. So the way S

622
00:27:18,540 --> 00:27:21,130
bomb can help with this actually, and it's not worthless.

623
00:27:21,140 --> 00:27:22,130
I know there've been, there've been,

624
00:27:22,400 --> 00:27:26,180
it's funny because there's two camps in this where you've got one camp that's like,

625
00:27:26,189 --> 00:27:26,430
oh s

626
00:27:26,609 --> 00:27:29,040
bomb could solve this another camp. That's like, no, it can't.

627
00:27:29,050 --> 00:27:32,609
But and the but is important because this is an example where

628
00:27:32,729 --> 00:27:34,250
one of the usages for

629
00:27:34,420 --> 00:27:34,510
SBA

630
00:27:34,729 --> 00:27:36,219
is like during the BUILD,

631
00:27:36,229 --> 00:27:39,579
you kind of take like snapshots of what's going on at various points.

632
00:27:39,709 --> 00:27:42,130
This file gets written to disk at some point.

633
00:27:42,140 --> 00:27:43,979
And this is a good example where if you, you would

634
00:27:44,130 --> 00:27:48,069
a very, very mature process and I don't think anyone has a process, it mature today.

635
00:27:48,079 --> 00:27:50,560
But you could, for example, look at that file and be like,

636
00:27:50,670 --> 00:27:51,849
how did this 0.0

637
00:27:51,989 --> 00:27:53,069
file get built?

638
00:27:53,489 --> 00:27:55,229
I've never seen this before.

639
00:27:55,599 --> 00:27:58,270
Where did it come from? And then you could start asking questions.

640
00:27:58,280 --> 00:28:01,560
But that is like incredibly, incredibly advanced.

641
00:28:01,569 --> 00:28:03,869
I think for most of us, the value in SP

642
00:28:03,989 --> 00:28:05,550
would bring is just to say, OK,

643
00:28:05,780 --> 00:28:09,609
do I have any instances of a build that have a

644
00:28:09,619 --> 00:28:13,680
0.0 with this name I have ever seen in my infrastructure?

645
00:28:13,890 --> 00:28:15,199
And that has value.

646
00:28:15,209 --> 00:28:17,119
The question to me that I find interesting is

647
00:28:17,150 --> 00:28:19,209
there are legitimate cases where you have a G

648
00:28:19,329 --> 00:28:23,579
repo with a pile of files and you have a distribution mechanism that is

649
00:28:23,739 --> 00:28:27,150
not compiled. So let's simplify things greatly, not compiled.

650
00:28:27,969 --> 00:28:32,719
But it is for example, a tar ball distributed in a way where there are,

651
00:28:33,229 --> 00:28:36,079
I'm gonna say the word built artifacts in it.

652
00:28:36,800 --> 00:28:37,300
But

653
00:28:37,550 --> 00:28:41,250
the general view would be it's a tarball its source.

654
00:28:41,520 --> 00:28:45,939
But there are these kind of built or compiled or generated, that's the word I want.

655
00:28:45,949 --> 00:28:47,930
There are generated artifacts in it

656
00:28:48,089 --> 00:28:51,449
that are then distributed as part of that. And that

657
00:28:51,780 --> 00:28:53,810
is normal like that is

658
00:28:54,290 --> 00:28:56,520
we've been doing that for since forever.

659
00:28:56,630 --> 00:28:57,989
It's been normal. I think

660
00:28:58,115 --> 00:29:02,015
we're going to start asking the question if it should be normal from now on.

661
00:29:02,026 --> 00:29:05,686
Well, and, and so that raises the question, for example, you know, should these,

662
00:29:05,855 --> 00:29:08,686
the contents of these tar balls, should everything

663
00:29:08,806 --> 00:29:11,326
either be basically, should we have a, a link of like,

664
00:29:11,336 --> 00:29:13,095
here's the stuff from the get up in the tar ball,

665
00:29:13,105 --> 00:29:16,095
here's the stuff that was generated and at least make sure that's checked into the

666
00:29:16,105 --> 00:29:20,251
get up rep on a slash build or slash or whatever generated director something,

667
00:29:20,261 --> 00:29:20,552
right?

668
00:29:20,562 --> 00:29:23,621
-- So that it's visible,
-- I think we should stop generating anything.

669
00:29:23,631 --> 00:29:24,732
I think it needs to come from

670
00:29:25,141 --> 00:29:27,281
github. I think if it doesn't come from github,

671
00:29:27,572 --> 00:29:29,501
like it doesn't exist.

672
00:29:29,511 --> 00:29:32,521
Yeah, I think, yeah, because I mean,

673
00:29:32,531 --> 00:29:35,381
there are use cases where you have to have stuff that like there's

674
00:29:35,391 --> 00:29:38,491
the source code plus this generated artifact for it to kind of work.

675
00:29:38,842 --> 00:29:41,092
But I think that generated thing has to be,

676
00:29:41,760 --> 00:29:44,069
it has to have provenance. It can't just be like

677
00:29:44,270 --> 00:29:47,180
like a red hat. You know where I remember I unpacked an R PM once

678
00:29:47,369 --> 00:29:48,290
and it was like

679
00:29:48,439 --> 00:29:50,780
the build host was workstation dash something. And I'm like,

680
00:29:52,530 --> 00:29:55,510
-- it's not even a full domain
-- and look, this is one of, I mean,

681
00:29:55,520 --> 00:29:56,569
this is one of the complaints.

682
00:29:56,599 --> 00:29:56,709
Toma

683
00:29:56,869 --> 00:29:56,900
De

684
00:29:57,060 --> 00:30:00,079
Pierre has like consistently is

685
00:30:00,290 --> 00:30:02,540
there's so much of this stuff is happening like

686
00:30:02,550 --> 00:30:05,380
on random people's machines in random people ways and

687
00:30:05,670 --> 00:30:06,339
let it happen.

688
00:30:06,660 --> 00:30:07,229
It's

689
00:30:07,579 --> 00:30:10,680
like you need some provenance here. We don't have it. Ok?

690
00:30:10,689 --> 00:30:11,260
So I wanna,

691
00:30:11,270 --> 00:30:13,270
I wanna steer this conversation because I think

692
00:30:13,280 --> 00:30:15,069
there's a lot of technical details and I have

693
00:30:15,329 --> 00:30:15,339
a,

694
00:30:15,900 --> 00:30:17,410
we're recording this on a Sunday.

695
00:30:17,459 --> 00:30:21,790
I'm releasing this on a Monday and I bet you by the time anyone listens to this,

696
00:30:21,939 --> 00:30:26,619
the things we know right now are changed because that's how this stuff works.

697
00:30:26,630 --> 00:30:30,050
However, I think there's some meta topics to discuss

698
00:30:30,199 --> 00:30:33,810
and I'm just gonna ask you the first question that I know how you're gonna answer.

699
00:30:33,819 --> 00:30:36,969
I'm asking anyway, is this going to change anything?

700
00:30:37,780 --> 00:30:38,959
There will be some racial.

701
00:30:40,150 --> 00:30:41,209
Now, here's the beauty

702
00:30:41,430 --> 00:30:44,800
and I'm not saying it's because people are bad or dumb or lazy or anything.

703
00:30:44,810 --> 00:30:46,579
It's, this will raise some awareness,

704
00:30:46,910 --> 00:30:51,660
but there is nothing we can do at this scale to fix this. So for example,

705
00:30:52,109 --> 00:30:54,310
when a person comes to a project,

706
00:30:54,319 --> 00:30:59,010
are we going to somehow vet we can't even vet who they are let alone their intention?

707
00:30:59,420 --> 00:31:00,859
Sure. That's right. Right.

708
00:31:00,969 --> 00:31:02,819
So number one, we can't do that.

709
00:31:03,310 --> 00:31:06,300
It's, it's, I mean, in the sense of it's not physically possible,

710
00:31:06,310 --> 00:31:08,459
like there's also privacy laws and everything,

711
00:31:09,020 --> 00:31:12,130
right. The best we could shoot for is pseudo anonymity.

712
00:31:12,780 --> 00:31:16,689
But we also probably need to support an anonymity because to, to quote myself,

713
00:31:16,699 --> 00:31:19,579
I personally will never ever participate in open

714
00:31:19,589 --> 00:31:22,050
source software with my real name ever again.

715
00:31:22,060 --> 00:31:25,400
Moving forward because of the abuse I've received and passed from certain people.

716
00:31:25,469 --> 00:31:30,550
That's fair. That's fair. Yeah. Anyway, so have that number two. Let's assume

717
00:31:30,930 --> 00:31:33,489
we somehow magically have the resources to vet

718
00:31:33,500 --> 00:31:35,192
new people coming in and make sure they're,

719
00:31:35,262 --> 00:31:38,032
like, not bad, which, like,

720
00:31:38,243 --> 00:31:41,642
people have gotten top secret clearances and had deep background checks and, like,

721
00:31:41,652 --> 00:31:44,432
I'm just going to throw out the name Eric Ames or locally.

722
00:31:44,442 --> 00:31:49,713
We have an RC MP officer that was selling data to the Rwandan government. Like what?

723
00:31:49,922 --> 00:31:52,713
No, I'm serious. Right. It was in the news a few weeks ago.

724
00:31:52,812 --> 00:31:55,762
The RC MP is like we pat really thought like, and anyway, that's

725
00:31:55,863 --> 00:31:56,042
going off.

726
00:31:56,642 --> 00:31:56,822
So

727
00:31:57,276 --> 00:32:00,786
then this lovely, let's assume we can do that for all the new people.

728
00:32:00,796 --> 00:32:02,576
Well, what about all the existing people?

729
00:32:02,635 --> 00:32:05,715
How do we know somebody's not in there playing the long game and by long game?

730
00:32:06,086 --> 00:32:08,946
And, and we don't, I don't want to dwell on that point too much because you're right.

731
00:32:08,956 --> 00:32:09,816
We cannot,

732
00:32:10,026 --> 00:32:10,745
we cannot and,

733
00:32:10,755 --> 00:32:13,625
and someone could be malicious and still pass all the checks

734
00:32:13,635 --> 00:32:16,156
or somebody could decide to be malicious after the fact.

735
00:32:16,166 --> 00:32:16,826
So we

736
00:32:18,536 --> 00:32:18,906
let's

737
00:32:19,515 --> 00:32:19,796
duh,

738
00:32:19,965 --> 00:32:21,176
let's do code reviews.

739
00:32:22,150 --> 00:32:24,380
Well, yeah, we've tried that for 50 years.

740
00:32:24,699 --> 00:32:24,709
Uh

741
00:32:24,859 --> 00:32:27,439
Right. We can't do code reviews, not with humans at least.

742
00:32:27,810 --> 00:32:30,000
And even when we do code reviews with humans,

743
00:32:30,010 --> 00:32:32,680
like there are new classes of attacks that people come up with.

744
00:32:32,689 --> 00:32:36,079
Like, I remember the web before cross site scripting, which in hindsight is like,

745
00:32:36,089 --> 00:32:37,260
so stupidly obvious.

746
00:32:37,270 --> 00:32:38,630
It's ridiculous. But now it's like,

747
00:32:39,619 --> 00:32:44,000
OK, so we can't code review, we can't audit, we can't

748
00:32:44,239 --> 00:32:45,599
fuzz, we can't, like,

749
00:32:45,609 --> 00:32:48,920
we can't technology or process our way out of this because of scale.

750
00:32:48,930 --> 00:32:50,030
And this raised the issue.

751
00:32:50,040 --> 00:32:52,939
A simple nomad uh you know, from git lab was talking about this. And I'm like,

752
00:32:53,739 --> 00:32:57,540
but basically if somebody does actually have a solution for this,

753
00:32:57,609 --> 00:32:59,660
they're not going to give it for free to the open source community,

754
00:32:59,670 --> 00:33:01,280
they're going to sell it for a lot of money.

755
00:33:01,560 --> 00:33:03,579
They would try except there isn't one.

756
00:33:03,650 --> 00:33:07,439
Well, actually enterprise is probably not willing to pay for this either.

757
00:33:07,449 --> 00:33:10,030
So that's the beauty of this is even if we do

758
00:33:10,040 --> 00:33:12,560
learn from this and even if we had good recommendations,

759
00:33:12,650 --> 00:33:15,660
we, we're going to implement them with what magical resources

760
00:33:15,829 --> 00:33:17,359
here's I think the,

761
00:33:17,369 --> 00:33:21,310
the way I would kind of frame this and I wrote some blog

762
00:33:21,319 --> 00:33:25,020
stuff for work because they wanted it as these things tend to go.

763
00:33:25,030 --> 00:33:26,599
I've been trying to figure out how to summarize

764
00:33:26,609 --> 00:33:28,709
this in half a page that isn't depressing.

765
00:33:28,719 --> 00:33:31,430
Here's what I basically said. I'm like, number one,

766
00:33:31,609 --> 00:33:33,160
this problem is unsolvable.

767
00:33:33,170 --> 00:33:37,189
-- Anyone who tells you they can solve this problem is 100% lying to you.
-- OK.

768
00:33:37,199 --> 00:33:39,390
Pause for a second when you say solvable. Do you mean

769
00:33:39,839 --> 00:33:42,189
like, it's obviously not 100% solvable, like

770
00:33:42,569 --> 00:33:45,770
whatever? But is it even remotely that we can make this better.

771
00:33:46,119 --> 00:33:47,760
-- No,
-- and I'm not sure we can even

772
00:33:47,770 --> 00:33:48,020
-- do
-- that.

773
00:33:48,030 --> 00:33:49,140
We can't, today,

774
00:33:49,150 --> 00:33:53,099
we lack the knowledge and understanding of this sort of

775
00:33:53,109 --> 00:33:56,640
attack to even do anything remotely educated at this point.

776
00:33:56,650 --> 00:33:57,930
So anyone claiming

777
00:33:58,079 --> 00:33:58,609
like

778
00:33:58,949 --> 00:34:02,660
we got you like, no, they're either they're lying to you or they're,

779
00:34:02,670 --> 00:34:03,890
they're beyond dumb.

780
00:34:04,050 --> 00:34:04,890
It could be both.

781
00:34:05,219 --> 00:34:05,680
But

782
00:34:06,729 --> 00:34:08,250
so, but however,

783
00:34:08,639 --> 00:34:14,399
I, I hearken the, the theme I think to the observable universe, right Where I've got,

784
00:34:14,409 --> 00:34:18,870
I was at Elastic for a while and I've got some observable background behind me

785
00:34:19,260 --> 00:34:24,389
where if you think about like deploying services at scale, right?

786
00:34:24,938 --> 00:34:29,850
You no one says we're going to build a service that will never crash, right?

787
00:34:30,050 --> 00:34:34,889
No one would imagine saying that because that's beyond stupid, right?

788
00:34:35,330 --> 00:34:39,270
So what the observable people do is they start with the

789
00:34:39,418 --> 00:34:40,228
assumption

790
00:34:40,639 --> 00:34:44,050
we are going to have problems inside of our infrastructure.

791
00:34:44,219 --> 00:34:48,770
So we are going to augment our infrastructure in ways

792
00:34:48,780 --> 00:34:51,120
that let us observe what's happening inside of it.

793
00:34:51,129 --> 00:34:55,668
And ideally, we can identify problems we or they come catastrophic, right?

794
00:34:55,679 --> 00:34:59,169
And I think this is kind of what we have to think about in the

795
00:34:59,179 --> 00:35:03,070
context of security is we have to have the ability to look at our software,

796
00:35:03,080 --> 00:35:03,419
like

797
00:35:03,570 --> 00:35:06,969
we have to know what we're running. If, if you are a company,

798
00:35:07,350 --> 00:35:12,209
any organization, let's say of, of even remote size,

799
00:35:12,760 --> 00:35:14,320
if someone comes to you and says,

800
00:35:14,330 --> 00:35:18,610
I want to know every version of XZ we have running in our infrastructure,

801
00:35:18,739 --> 00:35:21,139
you should be able to answer that question in 10 minutes or less.

802
00:35:21,149 --> 00:35:22,520
And if you can't like,

803
00:35:22,750 --> 00:35:26,550
-- go figure out how to do it.
-- Well, no, but we learned from Log for Jay that

804
00:35:27,399 --> 00:35:29,439
with people. It was a heroic effort for months.

805
00:35:29,479 --> 00:35:32,620
So I'm gonna, I just want to raise one thing quickly to knock it out of the way

806
00:35:33,000 --> 00:35:33,739
there is.

807
00:35:33,899 --> 00:35:35,929
In theory, you can make bulletproof software,

808
00:35:35,939 --> 00:35:38,780
but you have to have unlimited money and a very constrained use case.

809
00:35:38,790 --> 00:35:40,840
So the example being like NASA, where they'd have like,

810
00:35:40,879 --> 00:35:42,419
they would literally write the software like

811
00:35:42,429 --> 00:35:44,719
twice using totally different teams and methods

812
00:35:44,939 --> 00:35:45,580
that

813
00:35:46,729 --> 00:35:49,040
basically cannot work anymore.

814
00:35:49,050 --> 00:35:50,540
Because software, this isn't,

815
00:35:50,550 --> 00:35:54,429
the seventies software is too complicated and big and complex

816
00:35:55,020 --> 00:35:56,399
for that to ever be a thing.

817
00:35:56,409 --> 00:35:58,790
And it certainly can't happen in the open source world

818
00:35:58,800 --> 00:36:01,459
where we have zero resourcing because if we had resourcing,

819
00:36:01,899 --> 00:36:03,040
well, yeah, we,

820
00:36:03,050 --> 00:36:06,649
we wouldn't be just grabbing random open source libraries and hoping for the best.

821
00:36:07,000 --> 00:36:09,719
That's the second thing is this actually raises something that I've been,

822
00:36:09,729 --> 00:36:10,919
I need to write an article about this.

823
00:36:10,929 --> 00:36:11,770
It's all to do it.

824
00:36:11,929 --> 00:36:15,350
You can't have security unless you can die gracefully. And by that, I mean,

825
00:36:15,540 --> 00:36:18,850
if you can't shut a system down to like reboot it,

826
00:36:18,860 --> 00:36:21,610
you can't have security because how are you going to operationally

827
00:36:21,770 --> 00:36:22,739
update it?

828
00:36:22,949 --> 00:36:25,110
You can't have operations without that ability,

829
00:36:25,679 --> 00:36:28,850
but a lot of people don't have that ability or when they do have to shut stuff down.

830
00:36:28,860 --> 00:36:30,090
It's a total nightmare.

831
00:36:30,310 --> 00:36:32,820
Well, then the universe has planed your downtime for you.

832
00:36:32,830 --> 00:36:35,330
How often do you get an email from a cloud provider?

833
00:36:35,340 --> 00:36:38,370
Maybe you don't because like, I run all the cloud services at the CS A,

834
00:36:38,639 --> 00:36:41,419
I get an email at least once every month or two saying, you know,

835
00:36:41,429 --> 00:36:43,709
we're going to have an outage window on day X

836
00:36:43,810 --> 00:36:46,300
to like, basically do some upgrades or maintenance or whatever.

837
00:36:46,310 --> 00:36:48,449
And I'm kind of like you're a major, like

838
00:36:48,590 --> 00:36:51,840
I would say like a tier one sass like Atlassian,

839
00:36:52,000 --> 00:36:56,659
-- why do you need an outage window of like two hours? Uh I
-- don't ask questions.

840
00:36:56,669 --> 00:37:00,139
-- I, I don't, I know it's hard but I'm,
-- I'm just saying like, clearly

841
00:37:00,510 --> 00:37:02,659
as we've learned, like when they do actually have an oopsie,

842
00:37:02,669 --> 00:37:04,540
then it's really ugly and bad,

843
00:37:05,030 --> 00:37:05,629
you know?

844
00:37:05,830 --> 00:37:06,409
Ok.

845
00:37:06,419 --> 00:37:11,010
So what I'm saying is we, these, these traditional solutions, they don't,

846
00:37:11,020 --> 00:37:13,060
they can't work in the modern world.

847
00:37:13,070 --> 00:37:16,090
No, no. And that's, that's kind of the point, right? Is

848
00:37:16,520 --> 00:37:19,729
in order for us to tackle problems like this,

849
00:37:20,080 --> 00:37:22,290
we need to change

850
00:37:22,439 --> 00:37:25,830
everything and I know this is sounds ridiculous and it's never gonna happen,

851
00:37:25,840 --> 00:37:27,570
but like we need to change almost everything.

852
00:37:27,679 --> 00:37:30,580
But what we do from the way we build the software to the way we're,

853
00:37:30,590 --> 00:37:32,580
we're sourcing our components to the way we're

854
00:37:32,590 --> 00:37:34,639
dealing with the software as it's being built,

855
00:37:34,649 --> 00:37:37,699
as it's being deployed as it's being run as it's being end of life.

856
00:37:38,090 --> 00:37:41,389
Like these are all important stages of the software like life

857
00:37:41,399 --> 00:37:44,540
cycle and we basically just YOLO all of them today.

858
00:37:44,550 --> 00:37:45,419
Let me ask you a question.

859
00:37:45,429 --> 00:37:50,159
How is a company like Red Hat building a distribution differently than say

860
00:37:50,689 --> 00:37:52,179
Slackware? One point? Oh, did it?

861
00:37:52,699 --> 00:37:53,280
What is,

862
00:37:53,689 --> 00:37:55,919
no, no. What is fundamentally different? And

863
00:37:56,310 --> 00:37:56,320
I

864
00:37:56,639 --> 00:37:58,840
can, no, it is. It's no, no, no, that's, that's

865
00:37:59,169 --> 00:38:00,050
conceptually,

866
00:38:02,179 --> 00:38:04,389
I'm going to tell you to stop talking and you're going

867
00:38:04,399 --> 00:38:06,040
to put on your Dunce cap for a few minutes.

868
00:38:06,050 --> 00:38:08,679
I'm going to explain something that happened. That's really important.

869
00:38:08,689 --> 00:38:11,169
And it's about what Debian has done for this incident

870
00:38:11,419 --> 00:38:14,600
because what Debian has done is the gold standard for

871
00:38:14,610 --> 00:38:17,280
the way everyone should have handled this particular problem.

872
00:38:17,540 --> 00:38:17,830
Now,

873
00:38:17,946 --> 00:38:20,956
Debian unstable had

874
00:38:21,085 --> 00:38:23,656
a the the two vulnerable versions of XZ in it.

875
00:38:23,676 --> 00:38:27,466
So and and this specifically could target Debian systems,

876
00:38:27,656 --> 00:38:31,486
right? This exploit worked on Debian systems. We know that for a fact.

877
00:38:31,496 --> 00:38:36,456
So what Debian did is Debian has, we'll say mostly reproducible builds.

878
00:38:36,466 --> 00:38:39,565
They're not fully reproducible builds, but they're pretty close,

879
00:38:39,575 --> 00:38:40,766
they're close enough.

880
00:38:40,845 --> 00:38:43,246
So what they did is Debian shut down

881
00:38:43,701 --> 00:38:45,852
all of their build infrastructure, right?

882
00:38:45,902 --> 00:38:49,332
They shut it all down because obviously when an incident like

883
00:38:49,342 --> 00:38:53,201
this happens and we didn't yet know what this exploit was doing

884
00:38:53,352 --> 00:38:54,652
-- could be solar winds,
-- right?

885
00:38:54,662 --> 00:38:58,552
The, the correct thing to do is to literally just like shut it all down, right?

886
00:38:58,562 --> 00:39:00,931
We'll figure it out later. Then what happened

887
00:39:01,172 --> 00:39:05,041
was the Debian security team worked with their BUILD team and a lot.

888
00:39:05,052 --> 00:39:08,681
And remember this is Debian, this is a bunch of freaking volunteers. This isn't like

889
00:39:08,909 --> 00:39:12,699
some crazy, you know, company with billions of dollars.

890
00:39:12,889 --> 00:39:13,610
But

891
00:39:14,370 --> 00:39:16,290
so Debian shuts it all down.

892
00:39:16,300 --> 00:39:16,889
Then their,

893
00:39:16,899 --> 00:39:22,530
their security team and their build team basically start rebuilding unstable.

894
00:39:22,550 --> 00:39:25,139
Now you can't just rebuild unstable because here's the

895
00:39:25,149 --> 00:39:27,530
thing to remember when you're building a Linux distribution,

896
00:39:27,780 --> 00:39:30,370
you have to build things in an order and you have to sometimes go

897
00:39:30,379 --> 00:39:33,860
back to older things and rebuild those and things get built in certain ways,

898
00:39:33,870 --> 00:39:34,209
right?

899
00:39:34,620 --> 00:39:36,070
So it's really hard.

900
00:39:36,239 --> 00:39:40,280
Well, like you need to build a compiler before you can like compile the things with

901
00:39:40,550 --> 00:39:41,030
libraries.

902
00:39:41,129 --> 00:39:44,679
But sorry to backtrack what I'm in is conceptually a distribution goes out,

903
00:39:44,689 --> 00:39:47,040
grabs a bunch of software, builds it and ships it

904
00:39:47,199 --> 00:39:48,280
that hasn't changed.

905
00:39:48,629 --> 00:39:49,810
No. But the things Debian

906
00:39:49,959 --> 00:39:52,040
is doing, I think is important, right?

907
00:39:52,050 --> 00:39:54,479
Because they had to start with stable and they

908
00:39:54,489 --> 00:39:59,239
had to get themselves back to unstable using not

909
00:39:59,449 --> 00:40:01,800
the official build infrastructure because the official build

910
00:40:01,810 --> 00:40:04,030
infrastructure wasn't an unknown state at this point,

911
00:40:04,040 --> 00:40:04,360
right?

912
00:40:04,620 --> 00:40:06,429
They start rebuilding things.

913
00:40:06,560 --> 00:40:08,429
They're, they're making, they're, they're,

914
00:40:08,520 --> 00:40:11,479
they're close enough to reproducible build that they

915
00:40:11,489 --> 00:40:13,310
can do verification to say like the thing I

916
00:40:13,320 --> 00:40:17,590
built is exactly the thing that was an unstable so that they can prove it right.

917
00:40:17,729 --> 00:40:20,159
And they basically got themselves back to the point

918
00:40:20,290 --> 00:40:21,840
where minus

919
00:40:21,979 --> 00:40:24,399
a particular version of XZ

920
00:40:24,510 --> 00:40:25,669
in unstable,

921
00:40:25,949 --> 00:40:28,149
they could, they put unstable back together

922
00:40:28,260 --> 00:40:30,550
and they're like, this is, this is correct. This is it.

923
00:40:30,639 --> 00:40:34,040
So now what they're doing is they're turning it up back on and they're just

924
00:40:34,050 --> 00:40:36,030
treating it like a normal security update where

925
00:40:36,040 --> 00:40:38,199
they can basically yank the old packages,

926
00:40:38,209 --> 00:40:41,000
put new packages in place and continue back on.

927
00:40:41,209 --> 00:40:44,919
That level of due diligence is amazing to me. And I,

928
00:40:45,229 --> 00:40:49,300
I promise you there are in a, a lot of Linux distributions

929
00:40:49,530 --> 00:40:50,840
that have not

930
00:40:51,149 --> 00:40:56,389
cannot and will not do this. So like Debian, holy crap, you,

931
00:40:56,979 --> 00:41:00,520
that actually, I mean, that speaks to the one of being able to turn it off and on again.

932
00:41:01,250 --> 00:41:02,320
That's literally no

933
00:41:02,520 --> 00:41:03,030
seriously

934
00:41:03,330 --> 00:41:03,679
like

935
00:41:04,280 --> 00:41:06,629
to be the ability to bootstrap yourself,

936
00:41:07,080 --> 00:41:07,360
right?

937
00:41:07,370 --> 00:41:10,010
Like I actually have like a bootstrap process for my home network,

938
00:41:10,020 --> 00:41:11,110
which is pretty simple.

939
00:41:11,120 --> 00:41:13,649
That's, this feels bigger than bootstrapping even.

940
00:41:13,659 --> 00:41:17,909
This is like this is you have to invent boots first and then like, uh just,

941
00:41:17,919 --> 00:41:18,550
it's amazing.

942
00:41:18,560 --> 00:41:20,050
But this also speaks to,

943
00:41:20,340 --> 00:41:23,560
you know, being able to find where every single, like basically,

944
00:41:23,570 --> 00:41:25,949
if I provide you a set of files,

945
00:41:26,399 --> 00:41:26,729
I

946
00:41:26,843 --> 00:41:28,863
should be able to show where they came from,

947
00:41:29,072 --> 00:41:29,502
right?

948
00:41:29,633 --> 00:41:30,393
I think you would agree.

949
00:41:31,032 --> 00:41:34,863
And that I think was what's interesting to me here is that we have this history of,

950
00:41:34,873 --> 00:41:37,183
well, I can show you where most of them came from.

951
00:41:37,193 --> 00:41:37,742
But like,

952
00:41:37,943 --> 00:41:38,423
you know,

953
00:41:39,002 --> 00:41:41,083
and that's where this reproducible building comes from.

954
00:41:41,093 --> 00:41:43,752
Whereas it's, I can't really show it's like, well,

955
00:41:43,762 --> 00:41:48,183
basically I shove this into GCC version X and like out pops this thing and like,

956
00:41:48,393 --> 00:41:48,472
man,

957
00:41:48,933 --> 00:41:49,822
but if now,

958
00:41:49,833 --> 00:41:53,775
but if you have that same version of GCC and you do it and you get the same thing.

959
00:41:54,085 --> 00:41:55,256
Oh OK. Cool.

960
00:41:55,305 --> 00:41:57,496
And that's I think why reproducible builds are important is

961
00:41:57,506 --> 00:42:01,375
for that is for that bootstrap slash validation piece where

962
00:42:01,625 --> 00:42:04,645
you don't have to have your build infrastructure be this like fortress.

963
00:42:04,656 --> 00:42:05,315
It's like no,

964
00:42:05,325 --> 00:42:07,325
I have the same build infrastructure on my laptop and

965
00:42:07,335 --> 00:42:09,256
I get the same binary bit for bit cool.

966
00:42:09,266 --> 00:42:09,895
Like I think

967
00:42:10,156 --> 00:42:10,575
for

968
00:42:10,785 --> 00:42:11,575
however,

969
00:42:12,105 --> 00:42:12,696
so

970
00:42:12,825 --> 00:42:16,295
there are two things I want to explain about reproducible builds.

971
00:42:16,305 --> 00:42:18,055
So reproducible builds

972
00:42:18,530 --> 00:42:21,439
would not stop this particular attack because

973
00:42:21,659 --> 00:42:26,780
-- if you built XZ twice, you're gonna get the same thing. Both times
-- stupido

974
00:42:26,979 --> 00:42:28,479
would reproducible builds.

975
00:42:28,649 --> 00:42:32,520
I can't think of a single specific CV E that would have been addressed by this.

976
00:42:33,020 --> 00:42:36,370
The only thing reproducible builds would potentially catch

977
00:42:36,379 --> 00:42:39,239
is where the build infrastructure itself is compromised.

978
00:42:39,250 --> 00:42:39,479
Like

979
00:42:40,179 --> 00:42:41,449
that, that is

980
00:42:41,560 --> 00:42:41,790
what

981
00:42:41,969 --> 00:42:42,080
the

982
00:42:42,590 --> 00:42:43,889
but that no,

983
00:42:45,669 --> 00:42:46,550
-- there's a
-- buffer overflow

984
00:42:46,810 --> 00:42:49,129
theoretical given the current situation.

985
00:42:49,340 --> 00:42:51,659
But that is exactly the situation that

986
00:42:51,669 --> 00:42:54,199
Debbie and security team was trying to address

987
00:42:54,209 --> 00:42:56,689
when they were saying are our build hosts

988
00:42:56,699 --> 00:42:59,801
still trustworthy and they proved they are.

989
00:42:59,881 --> 00:43:03,791
That is the question. Reproducible builds don't solve security problems.

990
00:43:03,801 --> 00:43:07,270
-- They solve trustworthiness problems, which
-- is a security problem.

991
00:43:07,591 --> 00:43:11,121
-- Well, I guess
-- because if I need to, like, for example, if I have to rebuild my house,

992
00:43:11,131 --> 00:43:12,740
I can get concrete that is known to be good.

993
00:43:13,270 --> 00:43:14,910
No, this, that, that tangents boring.

994
00:43:15,051 --> 00:43:16,710
I want to bring up another point.

995
00:43:16,720 --> 00:43:20,071
Now, you just mentioned about how many CD ES could this solve?

996
00:43:20,601 --> 00:43:23,650
CD E doesn't cover malicious software. Kurt,

997
00:43:23,811 --> 00:43:25,611
why did this get a CV E?

998
00:43:25,902 --> 00:43:28,842
Well, it doesn't cover intentional backdoors.

999
00:43:29,211 --> 00:43:29,691
So,

1000
00:43:29,842 --> 00:43:30,791
and, and thank

1001
00:43:31,261 --> 00:43:35,802
Red Hat. Thank you Red Hat for doing this because holy crap.

1002
00:43:35,812 --> 00:43:37,152
If this didn't have a CV E,

1003
00:43:37,162 --> 00:43:39,852
all of our lives would be like 10 times worse than they are now.

1004
00:43:39,862 --> 00:43:42,731
But technically speaking, Red Hat broke the rules.

1005
00:43:42,822 --> 00:43:45,541
-- Thank you Red Hat for breaking the rules.
-- I was actually checking.

1006
00:43:45,552 --> 00:43:50,802
I have a, I have a long email thread thread from when I was still on the C uh ve board

1007
00:43:50,922 --> 00:43:52,011
back in 2018

1008
00:43:52,242 --> 00:43:53,853
where basically the consensus was.

1009
00:43:53,863 --> 00:43:56,202
Well, if, if we gave a back door a CV E,

1010
00:43:56,212 --> 00:44:01,032
-- we'd have to give all the malware A CV E and I'm like,
-- good, do that.

1011
00:44:01,212 --> 00:44:04,712
Yeah. Are we gonna run out of numbers? Like, do we not have infinity numbers?

1012
00:44:05,012 --> 00:44:07,542
And so someone actually asked this question as they said

1013
00:44:07,552 --> 00:44:11,472
N PM removed like 245,000 malicious packages last year.

1014
00:44:11,482 --> 00:44:14,433
Should they all get CV ES? They should,

1015
00:44:14,562 --> 00:44:14,752
but

1016
00:44:15,552 --> 00:44:18,433
the thing is there should be machine readable data in there so that you can easily

1017
00:44:18,684 --> 00:44:18,823
it.

1018
00:44:19,253 --> 00:44:20,533
Right? I love these people that are like,

1019
00:44:21,424 --> 00:44:24,053
and they're like, I'm like, are you reading these by yourself?

1020
00:44:24,063 --> 00:44:25,944
Like the same thing with the Linux kernel thing where they're like,

1021
00:44:25,954 --> 00:44:28,293
but it's too many CV S and I'm like, well, if you're on the Linux kernel,

1022
00:44:28,303 --> 00:44:30,013
should you not be concerned about this?

1023
00:44:30,394 --> 00:44:34,283
Now, I, I will say that the, uh uh uh uh what is it? The,

1024
00:44:34,503 --> 00:44:36,934
-- the github vulnerability database,
-- github

1025
00:44:37,104 --> 00:44:39,053
security advisories, GHS A.

1026
00:44:39,364 --> 00:44:43,073
-- Yeah,
-- GHSAGH SAS have a, like malicious

1027
00:44:43,224 --> 00:44:44,204
software

1028
00:44:44,483 --> 00:44:44,793
ca

1029
00:44:45,564 --> 00:44:48,024
and they track all this stuff like it's, it's in there.

1030
00:44:48,084 --> 00:44:51,135
So if you're, if you're pulling from their API, you can, you can get that stuff,

1031
00:44:51,145 --> 00:44:52,354
which is great and it's important.

1032
00:44:52,364 --> 00:44:53,445
Ok. Ok.

1033
00:44:53,554 --> 00:44:55,985
So we've got, we covered what Debian's doing.

1034
00:44:55,995 --> 00:44:58,715
We covered the fact that maybe it should or shouldn't have a CV E.

1035
00:44:58,725 --> 00:45:01,364
-- Well,
-- and this only affected rolling releases.

1036
00:45:01,645 --> 00:45:05,534
So essentially for most people, it did not affect prod,

1037
00:45:05,754 --> 00:45:06,324
not yet.

1038
00:45:06,334 --> 00:45:07,395
It would have though,

1039
00:45:07,445 --> 00:45:11,235
-- had this made it from Debbie and unstable into Debbie and stable,
-- right?

1040
00:45:11,530 --> 00:45:15,040
Had it not been caught? Absolutely. Yes. It would have gone from Fedora Tyrell

1041
00:45:15,270 --> 00:45:16,060
and from

1042
00:45:16,459 --> 00:45:17,669
-- blah, blah, blah.
-- That's right.

1043
00:45:18,000 --> 00:45:18,909
That's right. Ok.

1044
00:45:18,969 --> 00:45:22,590
There's one more piece of this, I think I wanna discuss kind of in,

1045
00:45:22,600 --> 00:45:25,270
in terms of doing some, you know, we,

1046
00:45:25,280 --> 00:45:28,030
we it's always easy to talk about what just happened

1047
00:45:28,290 --> 00:45:30,800
with the eyes of reality in front of us.

1048
00:45:31,000 --> 00:45:34,520
You were talking about verifying people, right? And how hard that is

1049
00:45:34,760 --> 00:45:35,850
and we can't do it,

1050
00:45:36,000 --> 00:45:40,189
right. I think one of the things to think about in the context of software today

1051
00:45:40,520 --> 00:45:41,209
is

1052
00:45:41,719 --> 00:45:46,310
you have to almost assume that any dependency you're using is malicious.

1053
00:45:46,449 --> 00:45:47,570
And what does that mean?

1054
00:45:47,580 --> 00:45:49,770
And I don't just mean from a trust perspective,

1055
00:45:49,780 --> 00:45:52,489
but like this is like a giant risk equation now, right?

1056
00:45:52,500 --> 00:45:53,719
Where I'm going to assume

1057
00:45:53,860 --> 00:45:57,149
every piece of software I depend on is malicious in some way.

1058
00:45:57,429 --> 00:46:01,689
So how do we make sure that using a malicious piece of software doesn't like

1059
00:46:01,699 --> 00:46:05,810
completely break the entire system and we don't know the answer to this yet.

1060
00:46:05,820 --> 00:46:08,879
-- But I think that is the question.
-- We have a good peril.

1061
00:46:08,889 --> 00:46:11,860
Number one, you said verifying people and that's step one,

1062
00:46:11,870 --> 00:46:13,209
step one is verifying the person.

1063
00:46:13,219 --> 00:46:16,370
Step two is ongoing verification because what if they sell their account?

1064
00:46:16,510 --> 00:46:19,370
-- But
-- we can't verify open source.

1065
00:46:19,379 --> 00:46:20,479
Well, and that's what I'm saying is

1066
00:46:20,610 --> 00:46:24,139
so number one, you don't have to just verify the person, you have to ongoing,

1067
00:46:24,149 --> 00:46:26,379
verify them and make sure they don't sell their account or something.

1068
00:46:26,389 --> 00:46:29,825
And number two or number three rather, you'd have to kind of verify their intent.

1069
00:46:29,916 --> 00:46:32,845
And this leads Ashley there is now a thing that

1070
00:46:32,855 --> 00:46:35,625
monitors chrome extensions to see if they have a new owner

1071
00:46:35,795 --> 00:46:37,226
because it has come up now

1072
00:46:37,815 --> 00:46:38,045
that

1073
00:46:38,285 --> 00:46:40,976
people have been offered quite reasonably,

1074
00:46:41,075 --> 00:46:44,545
not great but reasonable sums of money to sell their chrome extensions

1075
00:46:44,555 --> 00:46:47,236
so that like tracking code and stuff can be jammed into them

1076
00:46:48,085 --> 00:46:51,775
and well, and then potentially some really most malicious stuff could happen.

1077
00:46:51,906 --> 00:46:54,936
And so we've already seen this where

1078
00:46:55,622 --> 00:46:59,251
this is where somebody like transfers their account because in Google

1079
00:46:59,261 --> 00:47:02,991
to transfer a chrome extension from one user to another,

1080
00:47:03,001 --> 00:47:04,172
it's like three or four clicks,

1081
00:47:04,352 --> 00:47:05,681
it's pretty easy

1082
00:47:06,031 --> 00:47:09,961
and it, it's, there's like a record of it happening. But if I were to just

1083
00:47:10,092 --> 00:47:11,431
hand over my github

1084
00:47:12,221 --> 00:47:13,802
user name, well, which is, you know,

1085
00:47:13,812 --> 00:47:17,041
obviously Kurt siefried and my credentials and, you know, and,

1086
00:47:17,052 --> 00:47:21,862
and I guess mail a copy of or I'm not a copy, mail my two fa hardware token or,

1087
00:47:21,872 --> 00:47:24,602
or update it to a software one and send them the seed

1088
00:47:25,399 --> 00:47:26,860
like GTO would be like, well, you know,

1089
00:47:26,870 --> 00:47:30,320
he's using a new IP address which I'm doing all the time now because of my VPN.

1090
00:47:30,330 --> 00:47:30,600
But

1091
00:47:30,840 --> 00:47:31,939
there's,

1092
00:47:32,229 --> 00:47:34,459
there's no way to do this.

1093
00:47:35,110 --> 00:47:36,560
You would need like literal

1094
00:47:37,020 --> 00:47:37,939
NSA level of

1095
00:47:38,520 --> 00:47:39,530
like 10 minutes long. We

1096
00:47:39,739 --> 00:47:43,340
know. But the point is people think this can be done because they keep suggesting it.

1097
00:47:44,169 --> 00:47:44,189
I'm

1098
00:47:44,830 --> 00:47:48,139
a people I know, but a lot of people think that it can be done,

1099
00:47:48,610 --> 00:47:48,899
which

1100
00:47:49,520 --> 00:47:52,239
I want to address that as well. Let's just say, um

1101
00:47:52,429 --> 00:47:54,419
there's a lot of brain dead takes about this.

1102
00:47:54,429 --> 00:47:58,149
And I'm gonna throw the open SSF under the bus here because II,

1103
00:47:58,250 --> 00:48:02,260
I don't know, I'll, I'll, I'll see if archive.org has this blog post they wrote,

1104
00:48:02,270 --> 00:48:02,820
but it is

1105
00:48:03,239 --> 00:48:08,370
the most insensitive moronic blog post I've seen in a long time.

1106
00:48:09,189 --> 00:48:11,689
And it basically says, oh, if we run

1107
00:48:12,020 --> 00:48:15,540
open SSF scorecard against XZ, it gets a really low score.

1108
00:48:15,550 --> 00:48:18,409
So if they would have run scorecard, they could have avoided this. And it's like,

1109
00:48:18,760 --> 00:48:19,800
what? No,

1110
00:48:20,820 --> 00:48:21,449
no,

1111
00:48:21,689 --> 00:48:24,530
but it's just, you know, it's like pull your hair out, stupid thing to say.

1112
00:48:25,139 --> 00:48:27,379
And I think here's the thing, but here's the thing, Kurt,

1113
00:48:27,510 --> 00:48:30,149
this is the freaking open SSF these are supposed to

1114
00:48:30,159 --> 00:48:32,629
be the people that are like helping defend open source.

1115
00:48:32,639 --> 00:48:35,409
They're, they clearly have no idea what's even going on.

1116
00:48:35,419 --> 00:48:37,679
Well, they're also trying to advance their own agenda, but it also raises,

1117
00:48:38,429 --> 00:48:39,760
I can't live without XC.

1118
00:48:39,770 --> 00:48:44,010
Like I have to be able to uncompress XC data for my system to work.

1119
00:48:44,129 --> 00:48:44,370
Yes.

1120
00:48:44,379 --> 00:48:47,209
The world needs this library 100% like, OK,

1121
00:48:47,219 --> 00:48:49,209
here's one of the other terrifying things.

1122
00:48:49,260 --> 00:48:51,524
So when you build a Linux kernel,

1123
00:48:51,635 --> 00:48:54,064
you can compress the kernel with XZ

1124
00:48:54,514 --> 00:48:58,465
and this particular attacker was trying to get themselves added as

1125
00:48:58,475 --> 00:49:02,344
one of the XZ like maintainers to the Linux kernel.

1126
00:49:02,354 --> 00:49:05,165
So think about that one, if they had pulled that off.

1127
00:49:05,695 --> 00:49:07,385
Now, that's the long game.

1128
00:49:07,504 --> 00:49:09,895
Literally, you need a one bit flip in the Linux kernel.

1129
00:49:09,905 --> 00:49:14,995
And that would be a remotely exploitable. Like you send a wonky TCP packet and boop

1130
00:49:15,629 --> 00:49:16,310
because we've seen that.

1131
00:49:16,610 --> 00:49:18,540
Like, we've had those flaws. This is not

1132
00:49:18,689 --> 00:49:19,179
theory.

1133
00:49:19,399 --> 00:49:24,429
-- There have been like literal.
-- And now here's the uncomfortable reality.

1134
00:49:24,439 --> 00:49:25,909
I think we should end this show on

1135
00:49:26,489 --> 00:49:29,189
which is we found out this attack,

1136
00:49:29,850 --> 00:49:33,149
there is a 0% chance. This is the only one

1137
00:49:33,530 --> 00:49:37,590
and we only found out this attack by literally winning the lottery.

1138
00:49:37,949 --> 00:49:41,870
-- It was very much winning the lottery.
-- Yes. Like I'm actually almost,

1139
00:49:43,290 --> 00:49:44,270
it's almost

1140
00:49:44,469 --> 00:49:45,790
improbable

1141
00:49:46,270 --> 00:49:51,030
that that person found and did enough research to track down this regression.

1142
00:49:51,290 --> 00:49:54,540
But like the Cuckoo's Nest, you know, Clifford stole where uh what was it,

1143
00:49:54,550 --> 00:49:56,520
a 26 cent accounting

1144
00:49:56,870 --> 00:49:57,780
issue?

1145
00:49:57,929 --> 00:50:01,310
You know, it led them to these German hackers in the system, right?

1146
00:50:02,000 --> 00:50:03,709
But I mean, and that's the thing is like,

1147
00:50:04,959 --> 00:50:07,340
well, we've won the lottery once this year. Great.

1148
00:50:07,350 --> 00:50:09,820
I don't know that this is a sustainable way of doing it. It,

1149
00:50:10,070 --> 00:50:12,459
it obviously is not, we need.

1150
00:50:12,709 --> 00:50:16,250
And what to do is like, there's people saying, oh, we should pay maintainers.

1151
00:50:16,260 --> 00:50:19,110
There's people saying we need, we need to put this stuff in foundations.

1152
00:50:19,120 --> 00:50:19,439
There's,

1153
00:50:19,530 --> 00:50:23,899
there's all these hot takes about how to solve this problem by doing this one thing.

1154
00:50:24,330 --> 00:50:26,399
And there isn't going to be one easy answer.

1155
00:50:26,409 --> 00:50:29,399
Like I would love to say we should pay every maintainer and I agree with that.

1156
00:50:29,409 --> 00:50:33,399
-- We should,
-- but some of them don't even want to be paid or can't legally be paid.

1157
00:50:33,540 --> 00:50:37,340
And there's a guy again, I've seen the thread unmasked it now for everything.

1158
00:50:37,350 --> 00:50:40,219
You can imagine. There's a guy who runs, it's called like S TB.

1159
00:50:40,679 --> 00:50:46,479
It's a single, is it SS TB image, I think? Um, let me just look it up quick.

1160
00:50:46,699 --> 00:50:48,330
Um, yeah. Yeah. It's called S TB.

1161
00:50:48,340 --> 00:50:51,010
It's single file, public domain libraries for CN C++.

1162
00:50:51,020 --> 00:50:52,879
It's used by like a lot of game devs

1163
00:50:53,312 --> 00:50:57,211
like images and whatnot. And, and if you look at this, the STV uh uh github

1164
00:50:57,312 --> 00:50:58,931
repo, I'll put a link to it in the show notes

1165
00:50:59,392 --> 00:51:02,251
and they've got a freaking giant warning at the top. I'm just gonna read it.

1166
00:51:02,261 --> 00:51:04,511
This is in like bold huge text is,

1167
00:51:04,521 --> 00:51:07,931
this project discusses security relevant bugs in public in github

1168
00:51:08,072 --> 00:51:09,291
issues and full request.

1169
00:51:09,302 --> 00:51:13,201
And it may take significant time for security fixes to be implemented or merged

1170
00:51:13,402 --> 00:51:17,822
if this poses an unreasonable risk to your project, do not use STV library.

1171
00:51:18,021 --> 00:51:21,461
And the reason is, it's this guy said like it's him and his friend

1172
00:51:21,681 --> 00:51:22,291
and they do it

1173
00:51:22,404 --> 00:51:23,023
for fun.

1174
00:51:23,033 --> 00:51:25,954
They don't want to be paid even if they were paid,

1175
00:51:25,964 --> 00:51:27,743
they probably won't be paid enough to matter.

1176
00:51:27,753 --> 00:51:28,523
Like they,

1177
00:51:28,714 --> 00:51:30,983
they, they, they, they do this a week a year.

1178
00:51:30,993 --> 00:51:33,833
Basically, they work on this library and they're happy with that.

1179
00:51:34,293 --> 00:51:36,033
But anyway, the point is

1180
00:51:36,233 --> 00:51:37,904
we do not know

1181
00:51:38,253 --> 00:51:43,934
what to do about this problem. That is the honest to God reality of where we are.

1182
00:51:43,944 --> 00:51:46,823
We don't know how to solve the maintainer problems.

1183
00:51:46,833 --> 00:51:49,063
We don't know how to solve the technical problems.

1184
00:51:49,073 --> 00:51:51,384
We don't know how to solve like the downstream

1185
00:51:51,496 --> 00:51:52,516
user problems.

1186
00:51:52,525 --> 00:51:55,795
This is a million problems that, that quite frankly,

1187
00:51:55,805 --> 00:51:57,835
uh many open source people have realized.

1188
00:51:57,845 --> 00:52:01,355
-- But now everyone is learning about,
-- I'm gonna disagree with you there.

1189
00:52:01,365 --> 00:52:05,145
We are only seeing the tip of the iceberg. Literally,

1190
00:52:05,525 --> 00:52:09,035
we have no idea. Like you said, there's a million problems. Yes, they're,

1191
00:52:09,186 --> 00:52:09,696
they're,

1192
00:52:09,815 --> 00:52:11,355
we're into the unknown.

1193
00:52:11,365 --> 00:52:12,355
Like we're,

1194
00:52:12,365 --> 00:52:15,716
most people aren't even acknowledging that there's the unknown unknowns yet.

1195
00:52:15,946 --> 00:52:19,676
And they're like, oh we saw this dragon. So there's a dragon cool. But like you said,

1196
00:52:20,275 --> 00:52:20,345
our

1197
00:52:20,750 --> 00:52:25,159
do we need to go through all the new developers in the last two years, five years,

1198
00:52:25,169 --> 00:52:26,189
10 years, 20 years

1199
00:52:26,620 --> 00:52:28,260
when you're talking about that is idiotic.

1200
00:52:28,270 --> 00:52:30,199
You're wasting your time to even bring that up as a one.

1201
00:52:30,649 --> 00:52:30,679
But

1202
00:52:30,899 --> 00:52:32,689
people are bringing this up.

1203
00:52:32,699 --> 00:52:35,830
People have been saying, remember the Google blog where they literally were like,

1204
00:52:35,840 --> 00:52:38,360
we need to identify everybody in open source and blah, blah, blah,

1205
00:52:38,889 --> 00:52:41,250
that's Google. They want to do that for a different reason.

1206
00:52:41,260 --> 00:52:41,550
You know,

1207
00:52:41,560 --> 00:52:45,810
like people serious people have seriously proposed

1208
00:52:45,820 --> 00:52:47,870
this type of solution in the past

1209
00:52:48,149 --> 00:52:48,479
and

1210
00:52:48,600 --> 00:52:49,040
current.

1211
00:52:49,530 --> 00:52:53,810
No, I I know I get that and, and look, here's what I would say as,

1212
00:52:53,820 --> 00:52:54,889
as this will be kind of my,

1213
00:52:54,899 --> 00:52:57,870
my closing thought on this is so I know like people like Toma de

1214
00:52:57,979 --> 00:53:01,610
Pierre. Toma is out in front of a lot of people all the time

1215
00:53:01,830 --> 00:53:03,229
and he has

1216
00:53:03,600 --> 00:53:08,409
his advice is often hard to accept, but it's, it's pretty good and I think he gets it.

1217
00:53:08,879 --> 00:53:13,449
But here's the thing, he's someone doing the work. He's not a talking head

1218
00:53:13,570 --> 00:53:15,979
that's being paid by some giant company

1219
00:53:16,189 --> 00:53:17,439
to push an agenda.

1220
00:53:17,550 --> 00:53:21,030
Like this is a guy doing the Lord's work for free.

1221
00:53:21,040 --> 00:53:25,399
Essentially, there are a lot of people like Toma

1222
00:53:25,610 --> 00:53:28,270
and those are the people we need to listen to

1223
00:53:28,590 --> 00:53:31,139
because the people who solve this problem are

1224
00:53:31,149 --> 00:53:34,639
not the people running the open ssf clearly,

1225
00:53:34,820 --> 00:53:37,719
it's not the people working for some big company.

1226
00:53:37,729 --> 00:53:43,379
It's going to be the people doing this for fun because they understand the problems

1227
00:53:43,649 --> 00:53:44,260
and to just

1228
00:53:44,580 --> 00:53:45,449
clarify a bit,

1229
00:53:46,100 --> 00:53:49,629
the people that are going to solve this problem for the open source world

1230
00:53:49,870 --> 00:53:53,699
because there will be people that want to and perhaps do solve this problem.

1231
00:53:54,139 --> 00:53:57,679
And it's a commercial product which doesn't help the open source world even a tiny,

1232
00:53:57,689 --> 00:53:58,040
little bit.

1233
00:53:58,050 --> 00:53:59,050
In most cases,

1234
00:53:59,419 --> 00:53:59,770
it has

1235
00:53:59,959 --> 00:54:01,120
-- to
-- be and that's compatible

1236
00:54:01,790 --> 00:54:02,199
source.

1237
00:54:02,729 --> 00:54:03,280
So,

1238
00:54:03,469 --> 00:54:04,729
and, and Kurt, the open

1239
00:54:04,889 --> 00:54:07,239
source world is just called the world.

1240
00:54:08,060 --> 00:54:09,310
Exactly.

1241
00:54:10,169 --> 00:54:14,260
I I'm excited by this because nothing will change.

1242
00:54:15,000 --> 00:54:17,919
-- So I have job security, which is fantastic.
-- That's true. Good news.

1243
00:54:17,929 --> 00:54:20,070
Security people were all still employed.

1244
00:54:20,129 --> 00:54:24,959
But some of the stuff I've been saying for a long time is kind of like, see, like I said,

1245
00:54:24,969 --> 00:54:27,780
so and I'm, I'm gonna, I think here's how I'm gonna end the show.

1246
00:54:28,229 --> 00:54:29,659
How about this as a goal?

1247
00:54:30,010 --> 00:54:33,050
We are able to look at any file

1248
00:54:33,570 --> 00:54:36,639
on the file system that is from

1249
00:54:36,850 --> 00:54:39,699
the distro, let's say, or from pi pie

1250
00:54:39,830 --> 00:54:41,840
or you whacked it in with N PM.

1251
00:54:42,560 --> 00:54:46,379
And I think it's not unreasonable to say as a goal, not a short term goal,

1252
00:54:46,389 --> 00:54:47,889
mind you but a long term goal.

1253
00:54:47,929 --> 00:54:52,790
But any file on the file system that is essentially from

1254
00:54:53,489 --> 00:54:55,590
some software distribution thing.

1255
00:54:56,239 --> 00:55:00,909
I should be able to track it down and figure out how and when it got to be there.

1256
00:55:01,070 --> 00:55:01,790
And the

1257
00:55:01,959 --> 00:55:05,129
like how like how did this happen? Like, oh, it's not in the tar ball.

1258
00:55:05,139 --> 00:55:06,649
Oh It's part of the build process. Oh It's

1259
00:55:06,770 --> 00:55:07,629
blah, blah, blah.

1260
00:55:08,030 --> 00:55:09,350
And we're nowhere near that.

1261
00:55:09,739 --> 00:55:10,949
Not even a tiny bit

1262
00:55:11,159 --> 00:55:13,219
like I got dot Wheels all over my system.

1263
00:55:13,229 --> 00:55:14,590
And if you ask me where they're from,

1264
00:55:14,679 --> 00:55:17,129
there's no is there does pipe pie have like an R PM

1265
00:55:17,139 --> 00:55:20,459
verify equivalent in PP for me to see where those wheels came from

1266
00:55:20,699 --> 00:55:22,290
that still what solve this problem?

1267
00:55:22,300 --> 00:55:25,909
No, no, but I'm saying that would be a step in the right direction.

1268
00:55:25,919 --> 00:55:27,830
It's one of the steps and I think, I mean,

1269
00:55:27,840 --> 00:55:29,669
there's people working on like reproducible build,

1270
00:55:29,679 --> 00:55:31,270
things like Debbie is doing a great job

1271
00:55:31,469 --> 00:55:32,750
and, and definitely,

1272
00:55:32,919 --> 00:55:35,350
well, but what I'm pointing out is pi pie and wheels.

1273
00:55:35,360 --> 00:55:38,919
Like I ran into the problem with the pi pie uh lip uh the,

1274
00:55:38,929 --> 00:55:41,830
the Python curl library interface thing on a jigger

1275
00:55:41,989 --> 00:55:44,010
can't find my certificates

1276
00:55:44,139 --> 00:55:44,800
because it's

1277
00:55:45,030 --> 00:55:46,669
the Python Pi pie.

1278
00:55:47,449 --> 00:55:47,760
The curl

1279
00:55:48,090 --> 00:55:50,629
stuff is built on an arch Linux distribution

1280
00:55:50,770 --> 00:55:52,500
and there's no way to fix that.

1281
00:55:52,840 --> 00:55:54,050
So it looks in one spot.

1282
00:55:54,060 --> 00:55:57,679
And so I have a bunch of, you know, hack together code and I put breadcrumbs in all the

1283
00:55:57,909 --> 00:56:00,439
spaces where people were complaining about this being broken.

1284
00:56:00,449 --> 00:56:03,510
So they can see the curl, you know, the, the Python code to fix this.

1285
00:56:03,550 --> 00:56:05,540
But the point is like even something as quote unquote,

1286
00:56:05,550 --> 00:56:08,429
air quotes as simple as pi P install lip curl.

1287
00:56:08,439 --> 00:56:10,419
I think it's lip curl. I wanna say anyways, whatever.

1288
00:56:10,850 --> 00:56:13,889
I don't know where that stuff came from or how it got to be there or what it was built on.

1289
00:56:14,330 --> 00:56:18,370
-- Well, I, I think that's a lot of a goal
-- and I'm not saying this will solve it,

1290
00:56:18,590 --> 00:56:21,219
but as a goal, that would be a good step.

1291
00:56:21,395 --> 00:56:22,165
I, I agree.

1292
00:56:22,175 --> 00:56:25,425
And I think my one other piece to that is like I just interrupted and said,

1293
00:56:25,435 --> 00:56:28,375
this wouldn't solve the problem we're talking about and it wouldn't, but

1294
00:56:28,955 --> 00:56:32,254
just because something doesn't solve one problem doesn't mean it's not valuable.

1295
00:56:32,264 --> 00:56:34,165
And as we saw the the work Debian did.

1296
00:56:34,175 --> 00:56:34,294
The,

1297
00:56:34,304 --> 00:56:37,955
the reproducible builds are extremely valuable in this sort of situation

1298
00:56:37,965 --> 00:56:40,895
even though they aren't directly related to the issue at hand.

1299
00:56:40,905 --> 00:56:44,245
So, ok, we've been going on about this for darn near an hour already

1300
00:56:44,475 --> 00:56:46,425
and I think we've covered more things than I can

1301
00:56:46,435 --> 00:56:48,574
count and I have to edit this freaking episode still.

1302
00:56:48,584 --> 00:56:48,925
So

1303
00:56:49,225 --> 00:56:49,685
it's,

1304
00:56:50,379 --> 00:56:52,199
that's gonna be neat.

1305
00:56:52,209 --> 00:56:56,649
This, this 1 may be a little, this one will be a little rougher than most I think at the,

1306
00:56:56,659 --> 00:56:58,199
at the editing table.

1307
00:56:58,290 --> 00:56:59,879
But it look at the end of the day.

1308
00:56:59,889 --> 00:57:02,399
Here's the thing, I'm sure we're gonna talk about this again.

1309
00:57:02,449 --> 00:57:04,729
I'm actually leaving for, for

1310
00:57:04,989 --> 00:57:08,350
Bides Milwaukee in Cipher Con on, on Tuesday night

1311
00:57:09,179 --> 00:57:12,370
to go. I'm sure this will be the talk of the hallway for the,

1312
00:57:12,510 --> 00:57:14,956
all the, all the shows and I can't wait to see what I learn.

1313
00:57:14,966 --> 00:57:15,246
Like,

1314
00:57:15,256 --> 00:57:19,446
I'm trying to figure out how do I express this in a half page to a

1315
00:57:19,456 --> 00:57:22,246
page for like high level people that isn't

1316
00:57:22,256 --> 00:57:25,105
utterly depressing and so terrible that they like,

1317
00:57:25,115 --> 00:57:26,345
immediately dismiss it.

1318
00:57:26,355 --> 00:57:29,406
So here's what I did for my kid,

1319
00:57:29,726 --> 00:57:33,065
my, my wife and kid were like, because I'm, I was, I, so every, no,

1320
00:57:33,075 --> 00:57:34,266
no one else knows this.

1321
00:57:34,355 --> 00:57:38,145
I've just spent, I literally got home like an hour before Kurt Knight's hit record,

1322
00:57:38,342 --> 00:57:40,562
which has been like two hours at this point.

1323
00:57:40,862 --> 00:57:43,001
I was visiting colleges with my oldest

1324
00:57:43,132 --> 00:57:45,721
and at one point during the trip, I obviously got really weird.

1325
00:57:45,731 --> 00:57:49,521
They're like, what's going on? I'm like, just Google for something called XZ.

1326
00:57:49,711 --> 00:57:53,521
They're like, what does that even mean? I'm like, I'm, I'll tell you some other day.

1327
00:57:53,531 --> 00:57:55,552
Like, that's the most you're getting out of me right now.

1328
00:57:56,162 --> 00:57:58,541
And they, my, my wife is like, I have no idea what this is.

1329
00:57:58,552 --> 00:58:01,882
My kid was like, this looks bad. I was like, yes, yes. It is.

1330
00:58:02,622 --> 00:58:07,562
This is the scene from what's the mutant fungus TV show?

1331
00:58:08,419 --> 00:58:10,129
I'm spacing out among us.

1332
00:58:10,300 --> 00:58:12,889
No, not among us. Um The last of us,

1333
00:58:13,060 --> 00:58:15,120
this is the scene from the last of us

1334
00:58:15,129 --> 00:58:18,010
where the military general is talking to the expert

1335
00:58:18,770 --> 00:58:21,219
and she's like, can I please go home to my family? And he's like,

1336
00:58:21,379 --> 00:58:23,659
but what do we do? And she's like, can I please go home to my family?

1337
00:58:23,669 --> 00:58:26,399
And he's like, but we have to solve this. She's like, yeah. No, we can't.

1338
00:58:26,409 --> 00:58:29,149
Can I please go home to my family? So I can say goodbye to them basically.

1339
00:58:29,159 --> 00:58:31,669
And he's like, what do you mean? She's like, we can't solve this. We can't fix this.

1340
00:58:31,679 --> 00:58:32,209
We're doomed,

1341
00:58:33,340 --> 00:58:33,919
right?

1342
00:58:34,449 --> 00:58:38,429
We're not doomed. But I mean, this is this level like I feel like that expert.

1343
00:58:38,439 --> 00:58:40,260
Do you feel like that expert where it's just like

1344
00:58:40,469 --> 00:58:43,060
all these things we've been anticipating with Pandora?

1345
00:58:43,459 --> 00:58:43,939
All right.

1346
00:58:44,760 --> 00:58:47,639
Damn it, Kurt, you're just made this episode longer than a show.

1347
00:58:47,649 --> 00:58:50,250
Here's, here's what I want to end this on.

1348
00:58:50,260 --> 00:58:52,939
We should not lose hope over this happening.

1349
00:58:53,229 --> 00:58:54,260
This is

1350
00:58:54,429 --> 00:58:57,909
I think a natural progression of

1351
00:58:58,030 --> 00:59:01,060
what is we call open source.

1352
00:59:01,510 --> 00:59:03,419
I do not think we should lose hope.

1353
00:59:03,429 --> 00:59:07,780
I do not think that we should necessarily make any drastic actions due to this.

1354
00:59:08,050 --> 00:59:13,360
I think this is an opportunity to learn new things and to solve new problems.

1355
00:59:13,550 --> 00:59:17,379
I am not hopeless at all. I think open source is going to be fine.

1356
00:59:17,389 --> 00:59:19,149
I think society is going to be fine,

1357
00:59:19,459 --> 00:59:22,050
-- to be clear. I'm not hopeless either.
-- This is,

1358
00:59:22,479 --> 00:59:24,040
this is a big deal

1359
00:59:24,250 --> 00:59:27,770
and I don't think we're gonna learn as many lessons as we should,

1360
00:59:27,889 --> 00:59:31,050
but I think we will learn some lessons from this.

1361
00:59:31,060 --> 00:59:34,370
Well, I I'm not saying it's hopeless. I'm just saying for example,

1362
00:59:34,760 --> 00:59:37,780
same thing with Log for J what happened? Not really a lot. And you know what?

1363
00:59:37,790 --> 00:59:39,370
It's ok like life goes on.

1364
00:59:39,530 --> 00:59:40,729
No, I'm serious. Like it

1365
00:59:40,830 --> 00:59:41,100
is

1366
00:59:41,580 --> 00:59:42,879
-- crap
-- from Log for J.

1367
00:59:43,189 --> 00:59:43,629
I,

1368
00:59:44,399 --> 00:59:47,679
like I would say as an industry, we didn't learn anything.

1369
00:59:47,689 --> 00:59:52,050
But I think as individuals, a lot of smart people learned a lot of smart people things

1370
00:59:52,399 --> 00:59:52,909
and I

1371
00:59:53,100 --> 00:59:53,139
think,

1372
00:59:54,250 --> 00:59:55,560
but if we done anything actionable,

1373
00:59:55,570 --> 00:59:57,570
like started washing our hands to prevent the plague

1374
00:59:57,580 --> 00:59:59,530
from happening and the answer is not really.

1375
00:59:59,750 --> 01:00:01,060
And that's ok like

1376
01:00:01,520 --> 01:00:03,219
it, that just life goes on.

1377
01:00:03,510 --> 01:00:05,219
-- Like
-- I'm hopeful

1378
01:00:05,333 --> 01:00:08,972
this will cause some lawmakers to take some

1379
01:00:09,123 --> 01:00:14,072
actions because I think Log for Jay did compel some lawmakers to take some actions.

1380
01:00:14,083 --> 01:00:18,472
But we now come back to the issue of lawmakers are going to talk to people like the

1381
01:00:18,482 --> 01:00:21,512
open ssf and giant corporations when the people they

1382
01:00:21,522 --> 01:00:24,302
actually need to go talk to are Toma de

1383
01:00:24,452 --> 01:00:25,242
Pierre.

1384
01:00:25,802 --> 01:00:26,433
And that

1385
01:00:26,545 --> 01:00:27,855
is the challenge.

1386
01:00:28,176 --> 01:00:31,726
All right, I'm ending this. This has been, we're over an hour now. Good job.

1387
01:00:31,775 --> 01:00:34,656
Thank you, Kurt. Thank you, everyone who made it this far. Go to

1388
01:00:34,956 --> 01:00:36,105
our security podcast.com.

1389
01:00:36,115 --> 01:00:39,196
Hit up the, we'll have a bunch of show notes to a bunch of crazy stuff.

1390
01:00:39,206 --> 01:00:40,746
Uh I guess, yeah, I have what

1391
01:00:40,885 --> 01:00:40,956
yon

1392
01:00:41,166 --> 01:00:42,916
do I says podcast hashtag hit us

1393
01:00:43,085 --> 01:00:46,555
on Mastodon, I guess. Happy April fools everybody.

1394
01:00:46,795 --> 01:00:47,696
What a

1395
01:00:48,246 --> 01:00:52,045
what a what a week. All right. Thanks Kurt. I talk to you later, man.

1396
01:00:52,055 --> 01:00:53,585
-- Thanks
-- everybody. Bye bye.

1397
01:00:53,625 --> 01:00:54,686
Bye bye.