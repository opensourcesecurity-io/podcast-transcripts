0
00:00:05,489 --> 00:00:08,109
Hello and welcome to the open source security podcast

1
00:00:08,210 --> 00:00:08,840
with myself,

2
00:00:08,850 --> 00:00:13,029
Kurt Siefried and my partner and looking for exploit code for CV S Josh Pressers.

3
00:00:13,039 --> 00:00:17,590
I don't do that very actually. Ok. You know what I, I sort of did that just now.

4
00:00:17,600 --> 00:00:21,950
So I, I have a, I have a story to tell that's completely related to the topic,

5
00:00:21,959 --> 00:00:23,479
which is odd for me.

6
00:00:23,639 --> 00:00:24,270
But

7
00:00:24,729 --> 00:00:25,510
so

8
00:00:25,649 --> 00:00:27,260
obviously I, I work in a

9
00:00:27,365 --> 00:00:31,266
core and we have a vulnerability scanner called Gripe NVD collapsed

10
00:00:31,395 --> 00:00:34,366
-- and it didn't
-- collapse. It's just having a nap.

11
00:00:34,375 --> 00:00:36,026
Yeah, it's pining for the fjords.

12
00:00:36,105 --> 00:00:36,936
Exactly.

13
00:00:37,116 --> 00:00:38,945
-- So
-- just very quietly

14
00:00:38,956 --> 00:00:40,956
we're doing all this work on vulnerability data,

15
00:00:40,965 --> 00:00:45,066
like all over the place to make sure that it's as good as we it could be and,

16
00:00:45,076 --> 00:00:49,055
and for lots of reasons, but we needed, we, we got some false negative reports.

17
00:00:49,242 --> 00:00:52,652
Negative being a vulnerability exists and gripe isn't detecting it

18
00:00:52,832 --> 00:00:55,091
against tomcat, which is some Java

19
00:00:55,262 --> 00:00:57,551
web framework thing. I don't even know what to call it

20
00:00:57,672 --> 00:00:58,582
anyway.

21
00:00:58,832 --> 00:01:00,422
-- We use github's data
-- to

22
00:01:00,742 --> 00:01:03,341
interrupt. Isn't everything in Java basically a framework.

23
00:01:03,352 --> 00:01:04,912
It might be, I don't know

24
00:01:05,122 --> 00:01:09,262
-- middleware, call it middleware. Like I
-- don't think is there anything small in Java?

25
00:01:09,482 --> 00:01:11,022
No, no, there is not.

26
00:01:11,300 --> 00:01:12,440
So anyway, github

27
00:01:12,699 --> 00:01:19,699
has all these tomcat vulnerabilities labeled against tomcat the Tomcat jar.

28
00:01:19,709 --> 00:01:23,839
But the way detecting vulnerabilities in Java works is you look for a jar

29
00:01:23,970 --> 00:01:27,199
and then you look for vulnerabilities affecting that jar, right?

30
00:01:27,209 --> 00:01:28,919
That's how that, how that is. And I mean, that's

31
00:01:29,019 --> 00:01:30,330
-- just how like Maven works
-- at

32
00:01:30,370 --> 00:01:30,389
all

33
00:01:30,569 --> 00:01:32,669
and that jar might be like eight layers deep

34
00:01:32,769 --> 00:01:33,639
ignoring that

35
00:01:34,059 --> 00:01:35,760
there is no tomcat jar.

36
00:01:36,110 --> 00:01:40,370
There is, you can install Tomcat with Maven, but you don't get a tomcat jar.

37
00:01:40,379 --> 00:01:44,510
It just, it's like uh what are those pseudo packages in, in Linux distributions?

38
00:01:44,519 --> 00:01:46,589
Right? Where it just installs all the real crap

39
00:01:47,029 --> 00:01:48,160
anyway, there's no Tom Kar.

40
00:01:48,750 --> 00:01:52,169
So there's 100 and 44 Tom Cat vulnerabilities in github

41
00:01:52,330 --> 00:01:55,599
against Tom Cat which don't match anything because there's no Tom Kar.

42
00:01:56,419 --> 00:02:02,250
So I went through them all and the old stuff was shockingly difficult to research

43
00:02:02,360 --> 00:02:07,069
where I'm basically looking for patches to say this affects that jar, right?

44
00:02:07,080 --> 00:02:10,610
And I can prove it because this patch is for that thing.

45
00:02:10,937 --> 00:02:13,798
And as much as you want to complain

46
00:02:13,809 --> 00:02:16,179
about like vulnerabilities and things like that today,

47
00:02:16,188 --> 00:02:20,779
when you're looking at things from like 2004, like the, the early two thousands,

48
00:02:21,128 --> 00:02:25,429
-- the, the half the links don't work because they're all dead.
-- Well, Roots

49
00:02:25,569 --> 00:02:26,358
show.com

50
00:02:26,619 --> 00:02:31,119
-- sun.com,
-- this isn't even that this is like this is Apache stuff, right?

51
00:02:31,169 --> 00:02:35,949
Like the Apache has changed URL S that just 404. Now

52
00:02:36,128 --> 00:02:39,798
it links to source code repositories. It don't exist anymore.

53
00:02:39,945 --> 00:02:40,805
Fun fact,

54
00:02:40,815 --> 00:02:43,936
I pushed ages ago for us for the CV project

55
00:02:43,945 --> 00:02:45,406
to start mirroring that stuff because I was like,

56
00:02:45,416 --> 00:02:46,365
it will go away.

57
00:02:46,526 --> 00:02:47,815
Yeah. And it totally is.

58
00:02:47,936 --> 00:02:51,365
Now what, what was wild is in a bunch of the CV ES.

59
00:02:51,576 --> 00:02:55,766
The links were to archive.org so somebody had gone in and

60
00:02:55,776 --> 00:02:59,725
changed the reference links from whatever it was to archive.org,

61
00:02:59,735 --> 00:03:00,955
which I thought was pretty cool.

62
00:03:00,966 --> 00:03:02,735
But anyway, I got through, I bet

63
00:03:02,916 --> 00:03:05,166
100 and 20 or so I could figure out.

64
00:03:05,175 --> 00:03:08,845
And the other ones, I'm like, whatever, I'm, they're, they're so old. Like if you

65
00:03:08,951 --> 00:03:09,382
running to

66
00:03:09,492 --> 00:03:11,841
camp three at this point, you're doomed.

67
00:03:11,852 --> 00:03:12,341
Like,

68
00:03:12,352 --> 00:03:15,182
-- scanning for vulnerabilities is pointless
-- when people

69
00:03:15,192 --> 00:03:16,031
ask me about that kind of thing.

70
00:03:16,042 --> 00:03:18,632
I'm like, basically, if your software is more than a year out of date,

71
00:03:18,942 --> 00:03:19,582
like you said,

72
00:03:19,591 --> 00:03:21,141
you're doomed and it's not just because it's a year

73
00:03:21,151 --> 00:03:22,972
out of date and there's probably a vulnerability in it.

74
00:03:23,151 --> 00:03:26,091
It's, you're doomed because it's a year out of date and you can't update it.

75
00:03:26,382 --> 00:03:29,001
Like this proves that you can't update it because it's a year out of date.

76
00:03:29,011 --> 00:03:32,552
Well, and, and here's the other great part is just finding

77
00:03:32,781 --> 00:03:37,621
a, a Tomcat three TGZ I could download to poke around at, to get a,

78
00:03:38,087 --> 00:03:40,477
like, like, what, what even is this thing anymore?

79
00:03:40,908 --> 00:03:44,578
It took me a really long time just to find Tomcat three to download.

80
00:03:44,587 --> 00:03:48,757
It's there in Apache to their credit, have archives of this stuff hidden away,

81
00:03:48,768 --> 00:03:52,707
but it is not easy to find and you can't just type into Google like Tomcat three.

82
00:03:52,718 --> 00:03:56,117
Download. Oh, no, that does not work. Anyway,

83
00:03:56,397 --> 00:03:58,817
we have a vastly more interesting topic today

84
00:03:59,427 --> 00:04:03,548
and it is around that paper that came out, uh, maybe a week ago.

85
00:04:03,557 --> 00:04:06,378
-- give or take from the time we're recording this 17th of
-- April.

86
00:04:08,694 --> 00:04:10,054
Yeah, exactly a week. Right.

87
00:04:10,744 --> 00:04:11,703
Anyway, so,

88
00:04:11,953 --> 00:04:13,733
well, exactly a week for us.

89
00:04:14,093 --> 00:04:18,023
So it's called LLM agents can autonomously exploit one day vulnerabilities.

90
00:04:18,033 --> 00:04:18,743
So basically,

91
00:04:19,093 --> 00:04:23,023
and I assume what they mean by one day is like this is now in public for one day.

92
00:04:23,313 --> 00:04:24,283
It's public stuff. Yeah.

93
00:04:24,444 --> 00:04:24,743
Yeah.

94
00:04:24,903 --> 00:04:25,394
And

95
00:04:25,634 --> 00:04:28,544
well, yes, that's, yes. LL MS can absolutely do that.

96
00:04:28,704 --> 00:04:31,063
Just like people with very low skill can do.

97
00:04:31,123 --> 00:04:33,824
Well, I don't think people with low skill. Well, sort of,

98
00:04:33,954 --> 00:04:34,033
I

99
00:04:34,373 --> 00:04:34,473
think it,

100
00:04:35,194 --> 00:04:35,674
so here's the,

101
00:04:36,600 --> 00:04:37,899
there are vulnerabilities,

102
00:04:37,989 --> 00:04:40,410
there are vulnerabilities for which we know

103
00:04:40,489 --> 00:04:43,019
that the vulnerability is definitely exploitable.

104
00:04:43,220 --> 00:04:46,140
But actually building the exploit to do it

105
00:04:46,290 --> 00:04:47,799
can be very, very difficult.

106
00:04:47,869 --> 00:04:50,329
And then there are vulnerabilities like cross site scripting is one

107
00:04:50,339 --> 00:04:53,750
of my favorites that are really easy to test and to show

108
00:04:53,970 --> 00:04:55,540
and to exploit. Like you put in

109
00:04:55,859 --> 00:04:59,850
a bunch of code into like the login box and it spits out

110
00:04:59,970 --> 00:05:02,709
Java Alert saying hello and welcome to the world

111
00:05:02,720 --> 00:05:04,619
or same thing for uh like SQL injection,

112
00:05:04,630 --> 00:05:04,779
right?

113
00:05:04,790 --> 00:05:07,269
You just put in an extra quote and then the whole thing, Barfs.

114
00:05:07,690 --> 00:05:08,459
And so, you know that it,

115
00:05:09,750 --> 00:05:13,709
I want to talk about what these people said they did. So I read the paper.

116
00:05:13,890 --> 00:05:17,910
It's not very long, it's like, what a dozen pages, maybe 20 pages.

117
00:05:17,920 --> 00:05:19,429
It, it's very short. Anyway,

118
00:05:19,670 --> 00:05:21,190
the paper has

119
00:05:21,559 --> 00:05:23,230
annoyingly few details is

120
00:05:23,339 --> 00:05:25,899
-- I will describe it as
-- I can tell you how they did it

121
00:05:25,910 --> 00:05:28,239
because I can read between the lines because I've been doing this.

122
00:05:28,250 --> 00:05:30,429
Well, I'm, I'm not worried about how they did it.

123
00:05:30,440 --> 00:05:33,679
I think there's more interesting pieces to this than how they did it,

124
00:05:33,899 --> 00:05:36,839
how they did. It is actually, here's the thing people are forgetting.

125
00:05:36,850 --> 00:05:41,859
Do you know what I spend the vast majority of my time doing with a is, is thinking about

126
00:05:41,959 --> 00:05:46,600
how do I currently do this work? How do I currently ask humans to do this work? And then

127
00:05:47,630 --> 00:05:50,910
basically turning that into a prompt to feed to the A I.

128
00:05:51,079 --> 00:05:53,380
And so a perfect example of this is that the CS A,

129
00:05:53,390 --> 00:05:55,089
we want to have a support bot and I'm like,

130
00:05:55,100 --> 00:05:58,450
we can't have a support bot because we don't have enough good support articles

131
00:05:58,619 --> 00:05:59,769
that tell people what to do.

132
00:05:59,779 --> 00:06:02,369
And we have a bunch of internal documentation that our support people use.

133
00:06:02,540 --> 00:06:04,470
But more to the point, like many places,

134
00:06:04,480 --> 00:06:06,540
there's a lot of stuff that's in people's heads

135
00:06:06,959 --> 00:06:08,929
and it's not written down anywhere and that's fine

136
00:06:08,940 --> 00:06:11,170
as long as they stay at where they work.

137
00:06:11,179 --> 00:06:14,649
And so here, the funny thing is like constructing a prompt to say,

138
00:06:14,660 --> 00:06:17,230
go to a website and basically figure out what it's running,

139
00:06:17,380 --> 00:06:20,079
you know, get, get the headers, do this, do that

140
00:06:20,450 --> 00:06:21,399
totally doable.

141
00:06:21,510 --> 00:06:23,579
And then OK, so now you know what it's running now,

142
00:06:23,589 --> 00:06:24,989
constructing a prompt to go search the

143
00:06:25,000 --> 00:06:27,640
CV database for vulnerabilities in that stuff.

144
00:06:27,809 --> 00:06:31,130
And then the third thing is OK, go read the CV entry.

145
00:06:31,429 --> 00:06:34,290
And for example, some of them even linked to exploit code or at the very minimum,

146
00:06:34,299 --> 00:06:35,500
they've linked to a code patch.

147
00:06:35,510 --> 00:06:37,209
If it's open source, ideally

148
00:06:37,390 --> 00:06:39,459
especially you'll notice this,

149
00:06:39,619 --> 00:06:40,489
this paper

150
00:06:40,609 --> 00:06:43,850
mostly talks about XSS and SQL injection and stuff where,

151
00:06:44,019 --> 00:06:48,170
-- yeah, it's the really easy stuff. Right.
-- Well, no, no, it's not just the easy stuff.

152
00:06:48,179 --> 00:06:50,049
It's the stuff where it's a one line change,

153
00:06:50,390 --> 00:06:55,279
-- like adding html, special cares in a PHP.
-- I probably, I'm sure it's simple,

154
00:06:55,339 --> 00:06:55,690
right?

155
00:06:55,859 --> 00:06:59,290
I, I looked at a few of them and they're all kind of those. They're all the classic.

156
00:06:59,299 --> 00:07:02,160
-- Oh,
-- you looked at, oh, I didn't look at the patches for the C

157
00:07:02,269 --> 00:07:07,279
because they do specify what do they have there? 87% out of it's like 20 CD ES.

158
00:07:07,290 --> 00:07:09,510
They did the research on 15. OK?

159
00:07:09,779 --> 00:07:10,829
It's not a ton

160
00:07:11,109 --> 00:07:13,200
but OK. So here's, here's the thing,

161
00:07:13,350 --> 00:07:15,559
right. Let's just kind of start at the beginning.

162
00:07:15,769 --> 00:07:17,890
And papers like this

163
00:07:18,200 --> 00:07:20,130
are shocking quite often

164
00:07:20,380 --> 00:07:23,010
because it, it upends a lot of what we think.

165
00:07:23,519 --> 00:07:23,880
Right.

166
00:07:24,209 --> 00:07:27,010
Well, people think exploiting vulnerabilities is hard and I'm like,

167
00:07:27,570 --> 00:07:29,380
some are hard, like, like

168
00:07:29,570 --> 00:07:33,160
to own and, and hijacking an iphone. Yes, that is hard.

169
00:07:33,660 --> 00:07:36,989
And when, when an LLM can do that, I will panic.

170
00:07:37,000 --> 00:07:40,600
But when an LLM is exploiting a cross site scripting vulnerability. Yeah.

171
00:07:40,670 --> 00:07:45,369
-- No, that's it.
-- It's very simple and there's tons of examples. And

172
00:07:45,640 --> 00:07:48,549
so here's what they said they did

173
00:07:48,690 --> 00:07:51,950
and let's just kind of explain what happened, right? They,

174
00:07:52,279 --> 00:07:56,630
they pointed GP D four, they said no other LL MS could do this

175
00:07:56,910 --> 00:08:00,549
-- only check GP T four was capable.
-- That's wrong.

176
00:08:00,679 --> 00:08:03,820
-- I think the other ones could.
-- No, no, no, because I've done,

177
00:08:04,510 --> 00:08:07,299
-- I've done similar work.
-- They need different prompts, right?

178
00:08:07,739 --> 00:08:10,140
-- What they're really saying is well
-- and also some

179
00:08:10,149 --> 00:08:11,859
of them have better and worse guard rails.

180
00:08:11,869 --> 00:08:14,019
-- And so you need other ways to get around the guard rails for
-- sure.

181
00:08:14,170 --> 00:08:16,200
So they send a prompt to

182
00:08:16,480 --> 00:08:17,429
Chai PT four

183
00:08:17,690 --> 00:08:21,260
and they said the prompts are available upon request, but that

184
00:08:21,750 --> 00:08:25,109
chat open A I asked them not to publish the prompts, which whatever, that's fine.

185
00:08:25,119 --> 00:08:27,429
And then there are multiple steps

186
00:08:27,570 --> 00:08:30,149
along the way where obviously, like you mentioned already, you know, it,

187
00:08:30,160 --> 00:08:34,179
it read the CV E, it probably had to understand some code.

188
00:08:34,280 --> 00:08:36,830
It had to look at certain things, whatever.

189
00:08:36,900 --> 00:08:39,590
And they have a table and most of these took like 20 ish steps,

190
00:08:39,599 --> 00:08:43,929
give or take 1520 along the path to exploit the vulnerability.

191
00:08:43,940 --> 00:08:44,510
And then

192
00:08:44,789 --> 00:08:48,469
they're also not particularly clear of like, what are these steps?

193
00:08:48,479 --> 00:08:51,309
Why did some take 20? Why did some take 15?

194
00:08:51,320 --> 00:08:55,450
-- So
-- it would have been generally narrowing it down and redirecting it to

195
00:08:55,460 --> 00:08:56,469
probably,

196
00:08:56,479 --> 00:08:57,500
but they're not clear

197
00:08:57,640 --> 00:08:58,750
about this at all.

198
00:08:58,900 --> 00:09:02,229
We don't understand like what is their bar for exploitation?

199
00:09:02,239 --> 00:09:05,750
What counted as exploitation? That's not particularly clear.

200
00:09:05,760 --> 00:09:09,679
I think the authors of this paper could have definitely been more clear.

201
00:09:09,690 --> 00:09:11,190
But regardless, I think

202
00:09:11,359 --> 00:09:14,510
that the point is this is extremely doable

203
00:09:14,520 --> 00:09:17,190
and almost anyone could accomplish similar things.

204
00:09:17,200 --> 00:09:19,549
-- So
-- uh one thing I just trig my memory,

205
00:09:19,559 --> 00:09:21,770
one of the reasons they're saying that only chat GP T can do

206
00:09:21,780 --> 00:09:25,789
this is technically they are correct that only chat GP T can do this

207
00:09:25,989 --> 00:09:27,349
because only

208
00:09:27,570 --> 00:09:32,469
GP T can access the weapon, download stuff, Google Gemini and clawed A I.

209
00:09:32,609 --> 00:09:35,460
Oh They don't download things. They do not have a built

210
00:09:35,570 --> 00:09:38,469
in capability to go download stuff. But

211
00:09:38,719 --> 00:09:42,510
I've heard it is possible to download a web page using

212
00:09:42,520 --> 00:09:44,859
Python or a script or a web browser and then feed it

213
00:09:44,869 --> 00:09:47,429
into the A I and I'm being facetious because I've actually

214
00:09:47,440 --> 00:09:50,030
fed the A I like over 10,000 web pages at this point

215
00:09:50,150 --> 00:09:53,690
and I have scripts that mass do this. So So technically, they're correct.

216
00:09:53,700 --> 00:09:54,469
They clawed

217
00:09:54,619 --> 00:09:56,650
and Gemini can't do this natively,

218
00:09:56,750 --> 00:09:57,469
but you could

219
00:09:57,570 --> 00:10:00,349
just have a Python wrapper script that goes and gets

220
00:10:00,359 --> 00:10:01,929
the content and feeds it into the A I.

221
00:10:02,359 --> 00:10:08,130
Now, the other thing that I found very interesting is they claimed by not giving

222
00:10:08,340 --> 00:10:11,989
Chet GP T for any of the, the CV E description.

223
00:10:12,000 --> 00:10:14,760
It sounds like they, they basically just gave it the description.

224
00:10:14,770 --> 00:10:16,429
I assume the reference links as well.

225
00:10:16,440 --> 00:10:19,280
I, I don't, I don't remember reading if they specifically mentioned that point.

226
00:10:19,289 --> 00:10:19,739
Anyway,

227
00:10:20,039 --> 00:10:22,750
they said if they don't give it the description,

228
00:10:22,909 --> 00:10:27,030
it was successful 7% of the time instead of what, 87% of the time,

229
00:10:27,570 --> 00:10:29,750
which I think that is the vastly more

230
00:10:29,760 --> 00:10:32,739
interesting aspect of this because that tells me they

231
00:10:32,750 --> 00:10:36,469
had an LLM looking at a source code base

232
00:10:36,479 --> 00:10:40,140
and it basically constructed a vulnerability from code.

233
00:10:40,150 --> 00:10:40,979
It found

234
00:10:41,190 --> 00:10:46,710
-- that looked suspect
-- I use all three A is primarily open A I and clawed.

235
00:10:46,719 --> 00:10:46,940
And I'm,

236
00:10:46,950 --> 00:10:50,070
but I'm starting to use Google Gemini more now that they finally released a good one.

237
00:10:50,080 --> 00:10:51,309
But for example, I use

238
00:10:51,460 --> 00:10:54,030
a software Python code especially all the time.

239
00:10:54,159 --> 00:10:54,710
And

240
00:10:54,840 --> 00:10:56,940
literally, I have at one point,

241
00:10:56,950 --> 00:10:59,140
I had it right away server component thing and I

242
00:10:59,150 --> 00:11:01,630
noticed it didn't do it very securely and I realized,

243
00:11:01,640 --> 00:11:03,359
well, I didn't ask it to do it securely.

244
00:11:03,479 --> 00:11:06,400
So I cut and paste the prompt into a new session

245
00:11:06,530 --> 00:11:07,150
with

246
00:11:07,260 --> 00:11:10,250
write this securely basically added to it and you know what it did,

247
00:11:10,260 --> 00:11:11,320
it wrote it securely.

248
00:11:11,330 --> 00:11:15,700
It actually added a whole bunch of checks and stuff that I, I was like, oh, yeah, I, I,

249
00:11:15,710 --> 00:11:18,590
like, I would have forgotten to do that because it's kind of one of those like, yeah,

250
00:11:18,599 --> 00:11:19,229
you should do that,

251
00:11:19,239 --> 00:11:21,429
but you don't have to things and it literally added

252
00:11:21,440 --> 00:11:24,619
a whole bunch of security steps and checks and proofs

253
00:11:24,820 --> 00:11:26,909
that made for very robust code.

254
00:11:27,030 --> 00:11:27,440
And

255
00:11:27,880 --> 00:11:30,260
in my experience, this is exactly what happens with humans, right?

256
00:11:30,270 --> 00:11:31,840
You ask a human to write a software feature,

257
00:11:32,359 --> 00:11:33,570
they write a software feature,

258
00:11:33,580 --> 00:11:35,989
they don't write the software feature securely because like,

259
00:11:36,200 --> 00:11:39,109
well, that takes extra time and effort and they have a million things to do.

260
00:11:39,380 --> 00:11:39,869
Sure.

261
00:11:39,880 --> 00:11:43,789
Now, here's, I think the, the most interesting piece of that,

262
00:11:43,869 --> 00:11:49,590
what is going to stop an attacker from pointing an LLM at a code base

263
00:11:49,799 --> 00:11:53,239
and just letting it rip. They're, they're doing it now. I guarantee it.

264
00:11:53,320 --> 00:11:54,690
Well, no, I've done it. It's,

265
00:11:55,330 --> 00:11:58,039
-- yeah, it's,
-- where is your CV E Kurt?

266
00:11:58,309 --> 00:12:01,109
I, I don't really do CV S anymore. I've given up on that.

267
00:12:01,130 --> 00:12:03,619
Did you report the vulnerability upstream?

268
00:12:04,010 --> 00:12:04,330
No,

269
00:12:04,929 --> 00:12:05,010
but

270
00:12:05,200 --> 00:12:08,479
I had to look at stuff and it will find suspicious looking code

271
00:12:08,489 --> 00:12:10,469
where I glance at it and I didn't do a deep validation,

272
00:12:10,479 --> 00:12:11,010
but it's like

273
00:12:11,364 --> 00:12:12,755
it, it'll spot things now.

274
00:12:12,765 --> 00:12:16,905
It'll also spot a lot of false positives or false negatives. But so will humans.

275
00:12:17,414 --> 00:12:18,155
Yes.

276
00:12:18,164 --> 00:12:23,604
And, but this is where building the exploit, like building that end to end is the key.

277
00:12:23,614 --> 00:12:27,405
And this happens with humans. If you report a bug to a bug bounty

278
00:12:27,604 --> 00:12:29,664
and you say I found a bug in this code,

279
00:12:29,844 --> 00:12:33,145
90% of the time they're going to be like whatever clothes.

280
00:12:33,155 --> 00:12:37,705
But if you say I found this bug and here's an exploit demonstrating the bug,

281
00:12:37,969 --> 00:12:40,640
you're going to get vastly more attention

282
00:12:40,760 --> 00:12:44,049
-- than you would. Otherwise
-- that leads to something I've been working on now.

283
00:12:44,059 --> 00:12:46,869
And that is validation of A I results. And

284
00:12:47,130 --> 00:12:51,710
an exploit code is a perfect example of a strong validation of, you know, I,

285
00:12:51,719 --> 00:12:55,020
like I say that this is exploitable and my validation,

286
00:12:55,030 --> 00:12:57,630
my proof is here's an exploit code that gets me rude on your boss

287
00:12:58,159 --> 00:12:58,469
like

288
00:12:58,679 --> 00:12:59,070
that's

289
00:12:59,489 --> 00:13:01,109
you, you just can't argue with that,

290
00:13:01,580 --> 00:13:04,030
you know, like it's that strong validation.

291
00:13:04,179 --> 00:13:05,869
Whereas like there's other things where like OK,

292
00:13:05,880 --> 00:13:08,010
I summarized this document and you know,

293
00:13:08,020 --> 00:13:10,330
I had somebody else summarize the document and they look the same.

294
00:13:10,340 --> 00:13:10,679
So it's

295
00:13:10,890 --> 00:13:13,380
probably the correct summary, roughly speaking, right?

296
00:13:13,650 --> 00:13:16,469
And so one thing I've been looking at is no matter what you do with A I

297
00:13:16,599 --> 00:13:18,109
and how you do it with A I,

298
00:13:18,440 --> 00:13:18,919
you

299
00:13:19,159 --> 00:13:23,919
want to generally be able to validate the results to some degree if nothing else,

300
00:13:23,929 --> 00:13:25,190
not so much for correctness,

301
00:13:25,200 --> 00:13:28,570
but to determine if you're making changes that make it better or worse.

302
00:13:28,619 --> 00:13:33,289
I mean, obviously here's a perfect example of if I can for the sake of argument,

303
00:13:33,299 --> 00:13:34,020
let's simplify the problem.

304
00:13:34,030 --> 00:13:38,590
Let's just say I have the LLM look at a CV E and develop an exploit code for it,

305
00:13:39,320 --> 00:13:41,419
right? Let's take a few moving pieces

306
00:13:41,546 --> 00:13:42,096
out of the equation.

307
00:13:42,106 --> 00:13:44,586
So I feed it the CV E, it downloads the CV E,

308
00:13:44,596 --> 00:13:47,356
it goes to github traverses looks at the patches.

309
00:13:47,447 --> 00:13:49,656
Can it generate an exploit code? Yes, probably can.

310
00:13:49,726 --> 00:13:52,137
But that's the thing from a validation perspective.

311
00:13:52,146 --> 00:13:54,096
If it generates a working exploit code,

312
00:13:54,106 --> 00:13:56,656
that does what it's supposed to like a cross site scripting

313
00:13:56,666 --> 00:13:58,997
or an SQL injection or it gets rude on the box,

314
00:13:59,007 --> 00:14:01,267
you've validated the A is output basically.

315
00:14:01,276 --> 00:14:01,997
And ironically,

316
00:14:02,007 --> 00:14:04,557
you might actually end up with a new vulnerability where it finds something

317
00:14:04,664 --> 00:14:05,004
different.

318
00:14:05,013 --> 00:14:08,364
So you actually do still have to check because I've seen people do that, right.

319
00:14:08,374 --> 00:14:14,203
That is one of the things I was wondering is how many of these are different

320
00:14:14,213 --> 00:14:18,114
and the researchers couldn't or didn't verify that

321
00:14:18,124 --> 00:14:21,463
the exploit being hit was actually the exploit

322
00:14:21,564 --> 00:14:22,854
that they were pointed at.

323
00:14:22,864 --> 00:14:25,614
I mean, how many times have we seen people look at a CV,

324
00:14:25,624 --> 00:14:27,083
write an exploit code for it and go

325
00:14:27,223 --> 00:14:27,723
the CV,

326
00:14:27,830 --> 00:14:30,531
fix this exploit code. And it's like, yeah, you found something new.

327
00:14:30,541 --> 00:14:35,241
-- Oops,
-- this is something that they didn't talk about in the paper

328
00:14:35,601 --> 00:14:39,411
where they should have also installed the fixed version

329
00:14:39,700 --> 00:14:44,481
and ensured their vulnerability didn't work on the new version to verify that one,

330
00:14:44,491 --> 00:14:47,510
it was fixed because we also see instances where

331
00:14:47,520 --> 00:14:50,890
developers think they fix something and they actually didn't,

332
00:14:51,330 --> 00:14:55,280
which is again one of the enormous values of a demo exploit, right?

333
00:14:55,289 --> 00:14:57,140
What was that Cisco one where they just looked

334
00:14:57,150 --> 00:14:59,130
for user agent curl and then blocked it?

335
00:14:59,380 --> 00:15:02,609
-- Oh, yeah, that was, I remember that. That was amazing.
-- At

336
00:15:02,830 --> 00:15:07,320
first I thought it was a meme but I'm like, oh no, they, they actually did that. Wow.

337
00:15:07,489 --> 00:15:11,119
Yeah. It uh it did what? That's, it did what we were told,

338
00:15:11,255 --> 00:15:14,166
like the exploit doesn't work anymore. That's fine. But anyway,

339
00:15:14,455 --> 00:15:17,786
I mean, here's what I keep rattling around in my brain

340
00:15:17,916 --> 00:15:19,976
when I read this and I think about this,

341
00:15:20,185 --> 00:15:23,656
there's a statistic that's been thrown around a lot that

342
00:15:23,666 --> 00:15:26,625
says something like only 3% of CD ES are exploited.

343
00:15:26,635 --> 00:15:29,356
And it's, it's a really low number and I know that. Right.

344
00:15:29,486 --> 00:15:31,135
Well, but, well, let's pause for a moment because

345
00:15:31,372 --> 00:15:35,591
so for example, we know some CV S are exploited because we have like,

346
00:15:35,601 --> 00:15:39,052
like log for J like log for J we know got exploited.

347
00:15:39,502 --> 00:15:41,731
But the problem is even if you go with the CIA S

348
00:15:42,002 --> 00:15:44,072
known exploited vulnerabilities catalog,

349
00:15:44,122 --> 00:15:46,202
we don't know how widely exploited it is.

350
00:15:46,211 --> 00:15:51,351
And I know for a fact I know a bunch of pen testers and they all write exploits for CV ES.

351
00:15:51,640 --> 00:15:52,059
Yeah,

352
00:15:52,229 --> 00:15:53,780
because like why would you, like,

353
00:15:53,789 --> 00:15:56,539
you can start with original research or you could just start

354
00:15:56,549 --> 00:15:58,859
with a CV and just crank one out in an hour.

355
00:15:58,869 --> 00:15:59,080
Yeah.

356
00:15:59,090 --> 00:16:04,099
I mean, this is so, it's funny, I, I've seen use cases where red teams are buying,

357
00:16:04,109 --> 00:16:04,750
like, s

358
00:16:04,880 --> 00:16:07,619
bomb scanners, they scan the application

359
00:16:07,799 --> 00:16:09,919
and then they scan it for vulnerabilities and

360
00:16:09,929 --> 00:16:11,739
that's where they start because it's like,

361
00:16:11,750 --> 00:16:13,559
it's already got these bugs.

362
00:16:13,570 --> 00:16:16,700
-- Like, let's look at these bugs. Well,
-- yeah, I mean, it's, it's

363
00:16:16,710 --> 00:16:17,789
-- a no brainer.
-- Yeah.

364
00:16:17,799 --> 00:16:21,590
Like, why would you look for new stuff when they left the front door open? Right.

365
00:16:21,599 --> 00:16:23,539
Right. And that does happen a lot.

366
00:16:23,549 --> 00:16:27,659
This is such a weird and interesting new threat that it, it,

367
00:16:27,669 --> 00:16:30,780
it should shock no one who's been paying attention that this would happen.

368
00:16:30,789 --> 00:16:33,059
-- Eventually.
-- It's not a new threat.

369
00:16:33,070 --> 00:16:36,780
What it is is it's, it's lowering the cost of something.

370
00:16:37,030 --> 00:16:40,799
So, a perfect example is, let's say I wanted to track you in 1950.

371
00:16:41,150 --> 00:16:43,989
I would have had to pay a bunch of people to drive around and track.

372
00:16:44,000 --> 00:16:47,219
Oh, let's, let's rephrase. I want to track you without, you know.

373
00:16:47,719 --> 00:16:47,989
Right.

374
00:16:48,330 --> 00:16:51,520
And nowadays I just stick a GPS transmitter on your car

375
00:16:51,630 --> 00:16:53,909
and have a guy with a drone follow you.

376
00:16:54,169 --> 00:16:54,969
Right.

377
00:16:55,109 --> 00:16:57,239
And so the technology has changed significantly.

378
00:16:57,250 --> 00:16:59,900
Like, what I'm trying to point out is a, I,

379
00:17:00,000 --> 00:17:05,589
like, open source makes things vastly easier. I use a Troy software all the time.

380
00:17:05,598 --> 00:17:08,848
Mostly software that I could write myself. But sometimes,

381
00:17:09,069 --> 00:17:10,650
like I had to do some really clever stuff

382
00:17:10,660 --> 00:17:13,979
with pandas and numpy and clustering of data values,

383
00:17:14,010 --> 00:17:14,540
which

384
00:17:14,770 --> 00:17:15,050
I

385
00:17:15,160 --> 00:17:16,810
sort of conceptually understand how it works.

386
00:17:16,819 --> 00:17:18,479
But if you actually asked me to write it in panda,

387
00:17:18,489 --> 00:17:20,660
I would take six months to understand it well enough.

388
00:17:20,670 --> 00:17:27,098
-- So
-- I wanna, I wanna pick on this point a little bit because it is easy to poop on A I

389
00:17:27,199 --> 00:17:31,890
-- and claim its code is bad and it kind of is like
-- it's not, it depends what you ask for.

390
00:17:31,900 --> 00:17:34,300
-- No,
-- it it can write simple things pretty well,

391
00:17:34,310 --> 00:17:37,699
but it can't write overly complicated things in a maintainable way.

392
00:17:37,750 --> 00:17:40,099
I'm gonna disagree with you there because I've already done it.

393
00:17:40,109 --> 00:17:44,050
No, Kurt, you haven't written like tens of thousands of lines of code,

394
00:17:44,459 --> 00:17:45,739
Weinger dot IO. Who do you think wrote?

395
00:17:45,750 --> 00:17:49,469
-- How
-- many lines of code is web finger dot IO 100 200 maybe.

396
00:17:49,550 --> 00:17:53,609
Now, I want you to tell the A I to write 20 30,000 lines of code.

397
00:17:53,619 --> 00:17:56,300
No, it's, it's no, no one, no one.

398
00:17:56,310 --> 00:18:00,819
I've heard that is a, a honest real developer working in the space today.

399
00:18:00,829 --> 00:18:02,140
Agrees with that statement.

400
00:18:02,290 --> 00:18:06,160
And if you are and you disagree with me, please at me and go ahead,

401
00:18:06,170 --> 00:18:08,000
Kurt's typing furiously now and his key.

402
00:18:08,050 --> 00:18:10,739
No, no, no. It's just, for example, I've seen people write Mobile

403
00:18:11,469 --> 00:18:16,020
-- A
-- is are very good at analyzing piles of code,

404
00:18:16,160 --> 00:18:20,989
analyzing something like a vulnerability description and then output

405
00:18:21,560 --> 00:18:25,979
a a small thing like most exploit code is very small, right? You're talking

406
00:18:26,270 --> 00:18:30,760
tens of lines of code or, or a file

407
00:18:30,869 --> 00:18:31,339
that,

408
00:18:31,439 --> 00:18:33,180
that triggers a condition, whatever

409
00:18:33,310 --> 00:18:35,609
we're not talking about an enormous amount.

410
00:18:35,739 --> 00:18:38,540
And so I think this is like the perfect use

411
00:18:38,869 --> 00:18:40,420
for this kind of tool.

412
00:18:40,489 --> 00:18:45,099
And the thing that scares the bejesus out of me is what happens when security

413
00:18:45,109 --> 00:18:52,560
researchers just start generating exploits for 50% of CV ES or 80% of CD ES.

414
00:18:52,709 --> 00:18:57,430
But then more importantly is they're going to get sick of CV ES

415
00:18:57,579 --> 00:19:00,219
and they're just gonna point it at a code base and say

416
00:19:00,329 --> 00:19:03,329
there is a cross site scripting flaw in this code base.

417
00:19:03,339 --> 00:19:05,439
I want you to analyze it and find the cross site

418
00:19:05,449 --> 00:19:08,270
scripting flaw and then generate an exploit that triggers the cross

419
00:19:08,520 --> 00:19:11,420
-- cryptic flaw.
-- All the pen testers I know are already doing this

420
00:19:11,540 --> 00:19:15,630
-- and they probably are. Yeah.
-- No, not probably they are.

421
00:19:15,640 --> 00:19:18,130
I talk with them and they're like, oh Kurt, I did this, you know, I'm like, cool.

422
00:19:18,140 --> 00:19:21,930
The thing that people don't understand and that you were touching on is a,

423
00:19:21,939 --> 00:19:25,329
is have a context size that they can hold

424
00:19:26,150 --> 00:19:30,020
anywhere from like a couple of 1000 tokens maybe for a small local LM

425
00:19:30,130 --> 00:19:32,800
to Google Gemini claims a million tokens.

426
00:19:32,810 --> 00:19:35,219
Yeah, it's like hundreds of thousands from the big ones. Now

427
00:19:35,510 --> 00:19:37,260
200,000 dish for Claude

428
00:19:37,369 --> 00:19:40,540
whatever. But the point is for you to just read

429
00:19:40,699 --> 00:19:42,979
a million tokens worth of code

430
00:19:44,000 --> 00:19:45,369
would take a very long time

431
00:19:45,520 --> 00:19:47,540
and for you to then construct a mental model

432
00:19:47,550 --> 00:19:49,819
of how that works and interrelate and behaves.

433
00:19:49,829 --> 00:19:52,500
And you can remember the previous function call

434
00:19:52,770 --> 00:19:54,339
kind of can. But it's, it's,

435
00:19:54,469 --> 00:19:55,819
yeah, the computer is better,

436
00:19:56,119 --> 00:19:56,530
right. It's

437
00:19:56,640 --> 00:19:59,890
the same thing with square roots. Like, yes, you could work out a square root on paper

438
00:20:00,150 --> 00:20:02,099
or, or you could just use a calculator

439
00:20:02,540 --> 00:20:05,609
because I'm not oiler and I don't need to, like,

440
00:20:05,619 --> 00:20:08,660
what gets me is people are always like, oh, the computer can never X and it's like,

441
00:20:08,670 --> 00:20:12,369
and then the computer does X and then eventually does it like chess is

442
00:20:12,380 --> 00:20:18,099
my favorite because stockfish running on a PC plays at about 3600 elo now.

443
00:20:18,339 --> 00:20:21,439
And like, that's a couple 100 points better than the best human player.

444
00:20:21,689 --> 00:20:27,010
-- Yeah. Now, but it also took us, what, 20 plus years of hard work to get there.
-- Yeah.

445
00:20:27,020 --> 00:20:31,199
-- Well, 20 years is not that far away.
-- It isn't. No, no, for sure, for sure.

446
00:20:31,209 --> 00:20:34,761
And, and then LL MS will get larger token. Well, they might, we don't know.

447
00:20:34,771 --> 00:20:35,962
-- I
-- mean, no, the, the,

448
00:20:35,972 --> 00:20:39,222
the LL MS have already gone from context windows

449
00:20:39,232 --> 00:20:43,092
of like 48,000 now to claw being at the,

450
00:20:43,102 --> 00:20:44,062
the 200,000.

451
00:20:44,072 --> 00:20:45,572
Although some people say effectively,

452
00:20:45,582 --> 00:20:48,352
it peaks at about 70,000 and then it starts to get worse results.

453
00:20:48,362 --> 00:20:52,521
But whatever, ignoring that still 70,000 tokens or 50,000 tokens is

454
00:20:52,722 --> 00:20:55,171
a lot. Well, here's the dirty thing.

455
00:20:55,281 --> 00:21:00,421
It can read the code tokenize it and understand it and kind of hold a mental model of it

456
00:21:00,631 --> 00:21:03,323
and I know that's the wrong term to use, but we'll just go with that

457
00:21:03,703 --> 00:21:05,764
in tens of seconds.

458
00:21:05,784 --> 00:21:09,004
A human cannot even like open the files in tens of

459
00:21:09,014 --> 00:21:11,563
seconds and let alone start reading them and understanding them.

460
00:21:11,573 --> 00:21:13,563
The Lord of the Rings book

461
00:21:13,813 --> 00:21:17,843
has like a, a little under 500,000 words in it.

462
00:21:18,254 --> 00:21:22,624
And that's considered like one of the gigantic books of the, of the universe.

463
00:21:22,634 --> 00:21:25,683
And so if you're talking token sizes of a million,

464
00:21:26,134 --> 00:21:29,124
that's a lot of text, like a lot of text

465
00:21:29,333 --> 00:21:30,203
that, that the

466
00:21:30,326 --> 00:21:35,625
-- LM can hold.
-- What is one form of text that is widely available to train A is on?

467
00:21:35,635 --> 00:21:37,566
-- I mean, I assume you mean code,
-- right?

468
00:21:37,755 --> 00:21:40,005
-- Open source
-- code because of open source.

469
00:21:40,365 --> 00:21:42,086
Ok? I, I want to back up from one point.

470
00:21:42,095 --> 00:21:44,345
You said there's pen testers doing this today,

471
00:21:44,355 --> 00:21:47,385
if they're finding new exploits and they're not reporting them.

472
00:21:47,595 --> 00:21:50,906
Your pen tester friends are dirtbags. So you need to tell them to do that.

473
00:21:50,985 --> 00:21:53,186
So here's the problem, I've spoken with them about that.

474
00:21:53,196 --> 00:21:56,906
And here's the problem under virtually every pen testing contract on the planet

475
00:21:57,105 --> 00:21:59,505
when a pen testing firm does a pen test for company

476
00:21:59,777 --> 00:22:00,157
A,

477
00:22:00,228 --> 00:22:02,687
they report the findings to company a and it's like the

478
00:22:02,697 --> 00:22:04,968
company a to decide what to do with those findings.

479
00:22:05,027 --> 00:22:06,118
And so I've explicitly asked, like,

480
00:22:06,128 --> 00:22:08,437
what happens when you find a new exploit in an open source?

481
00:22:08,447 --> 00:22:09,887
Lir he's like, well, we tell company a

482
00:22:10,157 --> 00:22:12,927
and they decide what to do with it. I'm like, do you tell them to get a CV or anything?

483
00:22:12,937 --> 00:22:16,608
-- He's like, no, that's, they don't want it.
-- I bet they don't. I bet they do nothing.

484
00:22:16,657 --> 00:22:20,907
Now, some of them are mature enough in that they're hiring a pen tester.

485
00:22:20,917 --> 00:22:23,407
So that's, that's a sign of maturity right there. Right.

486
00:22:23,517 --> 00:22:27,588
Like they're spending good money on these. Some of them do go upstream and then,

487
00:22:27,817 --> 00:22:29,829
you know, because they're smart enough to be like red hat and say,

488
00:22:29,839 --> 00:22:32,790
we don't want to maintain a patch set to fix the security vulnerability.

489
00:22:32,800 --> 00:22:36,030
We'd rather upstream, fix it and then we install the patch or the update.

490
00:22:36,040 --> 00:22:40,000
-- Rather
-- if you're a company that does this, please, for the love of all,

491
00:22:40,010 --> 00:22:41,829
send the patches upstream.

492
00:22:42,000 --> 00:22:43,160
Well, and so unfortunately,

493
00:22:43,170 --> 00:22:47,010
the economic incentives of this are such that the pen testing firms don't.

494
00:22:47,020 --> 00:22:48,160
No, not the pen testing firms.

495
00:22:48,170 --> 00:22:50,329
If you, if the pen testing firm has it in the contract,

496
00:22:50,339 --> 00:22:53,969
they can't send the patch upstream, whatever contracts, it's how it works.

497
00:22:54,089 --> 00:22:57,189
But if you're a company receiving it, please, please, please, please,

498
00:22:57,199 --> 00:22:58,060
please send those upstream.

499
00:22:58,362 --> 00:23:02,572
And if you don't know what that means, like, send me an email and I will help you

500
00:23:02,781 --> 00:23:04,232
and here's the dirty secret, right?

501
00:23:04,332 --> 00:23:06,852
How many pen testing firms are CV, numbering authorities?

502
00:23:06,862 --> 00:23:09,852
And the answer should be all of them. But the answer is really, there's about two

503
00:23:10,031 --> 00:23:13,131
and in total, how many CV S have they actually issued?

504
00:23:13,141 --> 00:23:15,911
And there was one pen testing firm that issued a bunch one year

505
00:23:16,062 --> 00:23:18,692
and then went silent. I'm not surprised.

506
00:23:18,871 --> 00:23:21,732
Yeah, the economics of pen testing and open source are not,

507
00:23:22,072 --> 00:23:22,832
they don't allow,

508
00:23:23,541 --> 00:23:24,942
I'm sure they don't, they don't

509
00:23:25,151 --> 00:23:27,251
whatever it is what it is.

510
00:23:27,689 --> 00:23:27,709
I

511
00:23:27,839 --> 00:23:29,989
want to bring us back to the point tons

512
00:23:30,000 --> 00:23:32,250
of CV ES could suddenly pick up working exploits,

513
00:23:32,260 --> 00:23:32,660
right?

514
00:23:32,680 --> 00:23:34,900
Which would be problematic for a variety of

515
00:23:34,910 --> 00:23:39,349
reasons because there are tons of organizations that rank

516
00:23:39,670 --> 00:23:43,709
CBES with vulnerabilities as being higher risk than those without.

517
00:23:43,719 --> 00:23:46,729
And that is a reasonable assumption, I would say,

518
00:23:46,859 --> 00:23:51,250
well, that's CV SS scoring, right? The CV SS scoring of exploit availability

519
00:23:51,369 --> 00:23:57,739
-- uh
-- base. Well, Epss does that CV CV. SS does not take exploit ability into account.

520
00:23:57,930 --> 00:24:00,130
No, no, no. But if there's exploit code is

521
00:24:00,334 --> 00:24:02,224
like the temporal stuff that no one uses.

522
00:24:02,234 --> 00:24:04,204
Here's the thing to remember too is number one,

523
00:24:04,214 --> 00:24:06,035
somebody actually has to write an exploit.

524
00:24:06,045 --> 00:24:08,175
Number two, the exploit actually has to work.

525
00:24:08,185 --> 00:24:12,415
Number three, then for this kind of matter, they need to publish the exploit.

526
00:24:12,425 --> 00:24:15,275
-- I can do that all magically now. No,
-- no, I know. I know. I know.

527
00:24:15,285 --> 00:24:16,155
But the thing is,

528
00:24:16,165 --> 00:24:20,635
there's provably a lot more exploit code running around than is public probably.

529
00:24:20,645 --> 00:24:20,854
Yeah.

530
00:24:21,310 --> 00:24:23,859
Well, by definition, there's at least one copy of a project

531
00:24:24,180 --> 00:24:25,609
somewhere for sure, for sure.

532
00:24:25,739 --> 00:24:27,810
And it's probably more than one. It's not one.

533
00:24:28,510 --> 00:24:31,010
I wish it was. Oh, my God. Life would be easy.

534
00:24:31,459 --> 00:24:31,959
So,

535
00:24:32,229 --> 00:24:36,189
so we have to write the exploit. The exploit has to work, it has to be published.

536
00:24:36,229 --> 00:24:39,449
And then there's 1/4 step that people forget, which is it has to be used.

537
00:24:39,469 --> 00:24:41,250
And so for it to be used,

538
00:24:41,369 --> 00:24:43,729
people need to actually, you know, kind of

539
00:24:44,060 --> 00:24:44,880
go out and use it

540
00:24:45,010 --> 00:24:46,709
and have an incentive to use it.

541
00:24:46,959 --> 00:24:47,719
And so

542
00:24:47,979 --> 00:24:50,000
like a lot of cross site scripting flaws.

543
00:24:50,010 --> 00:24:52,260
Yeah, like they're good in a targeted attack.

544
00:24:52,359 --> 00:24:56,239
But as like a large scale attack goes, they're not super duper useful.

545
00:24:56,310 --> 00:24:59,719
-- I mean, that's fair, that's fair versus
-- like the ping of death that, you know,

546
00:24:59,729 --> 00:25:01,680
affected everybody where you asked for a ping pack of

547
00:25:01,969 --> 00:25:02,089
and then,

548
00:25:02,349 --> 00:25:06,560
you know, 65,500 whatever bites and like, yeah, your machine would just

549
00:25:07,630 --> 00:25:07,699
all

550
00:25:07,829 --> 00:25:08,020
over.

551
00:25:08,489 --> 00:25:08,869
And that,

552
00:25:08,880 --> 00:25:10,619
that was actually the week where I put my Linux

553
00:25:10,699 --> 00:25:13,030
box in front of my NT four box on the internet

554
00:25:13,359 --> 00:25:17,579
because anyway, OK, so we've got CD ES, let's say a bunch of CD ES pick up V uh

555
00:25:17,770 --> 00:25:21,349
-- working exploits,
-- you know what this is going to break the most is like,

556
00:25:21,359 --> 00:25:24,750
it's all those corporate people where once something gets a CV E,

557
00:25:24,760 --> 00:25:27,760
it's a ticking clock, 30 days, 90 days and all those people,

558
00:25:27,770 --> 00:25:28,859
we've already seen what happens with the

559
00:25:28,869 --> 00:25:30,819
Linux kernel where people are freaking out.

560
00:25:30,829 --> 00:25:30,859
Oh,

561
00:25:31,010 --> 00:25:31,290
yeah,

562
00:25:31,599 --> 00:25:32,569
that, like, I have a,

563
00:25:32,619 --> 00:25:35,199
these vulnerabilities I can't ignore because they have a CV E and it's like,

564
00:25:35,420 --> 00:25:37,989
so you're saying you don't want them to have a CV, so you can ignore them.

565
00:25:38,369 --> 00:25:42,800
Yes, they do. Literally that because my incentive isn't about security.

566
00:25:42,810 --> 00:25:46,300
It's about box ticking anyway. But here's the thing, here's the thing.

567
00:25:46,329 --> 00:25:48,780
There are all these vulnerabilities without CV ES.

568
00:25:48,790 --> 00:25:52,359
We know there are millions of vulnerabilities that don't have CV ES, right?

569
00:25:52,369 --> 00:25:58,079
What happens when some research institution? They, they take a system like

570
00:25:58,189 --> 00:25:58,709
this,

571
00:25:58,819 --> 00:26:00,339
they pointed at

572
00:26:00,650 --> 00:26:02,030
a bunch of repos

573
00:26:02,130 --> 00:26:04,010
and they let it rip and they're like,

574
00:26:04,020 --> 00:26:08,359
I have 100 and 50,000 vulnerabilities without CD ES.

575
00:26:08,369 --> 00:26:10,969
-- What should I do with them? Well,
-- Larry Cash,

576
00:26:11,260 --> 00:26:11,839
Daler did it that one.

577
00:26:11,849 --> 00:26:15,810
-- You
-- remember, Larry was small potatoes compared to what this could be.

578
00:26:15,959 --> 00:26:20,969
-- Well, it was a couple of 100 but back then he basically broke CV
-- E. Yes, he did.

579
00:26:21,260 --> 00:26:23,650
And, and Larry was one person,

580
00:26:23,949 --> 00:26:27,489
right? We even had him on the show. Remember episode 2, 19? Oh, my goodness.

581
00:26:27,500 --> 00:26:30,819
-- That was four years ago. That
-- was what? Really? Oh, my goodness.

582
00:26:30,829 --> 00:26:34,609
That feels like it was. I would have guessed like a couple of weeks max.

583
00:26:35,400 --> 00:26:35,969
But no.

584
00:26:35,979 --> 00:26:38,900
So that's a good example is here's the thing, if,

585
00:26:38,910 --> 00:26:40,979
what if 100 people decide to do what Larry Cash

586
00:26:41,119 --> 00:26:43,280
Dollar did? Well, then that would be a problem.

587
00:26:43,290 --> 00:26:49,219
But now the problem is one person who builds essentially a good pro, a set of prompts,

588
00:26:49,329 --> 00:26:52,109
a good set of guidance and a good set of evaluation,

589
00:26:52,319 --> 00:26:53,859
right? Can just

590
00:26:54,130 --> 00:26:56,270
like because I do this all the time where I have bashed jobs

591
00:26:56,280 --> 00:27:00,430
that run for five or six hours clearing the A I through the API

592
00:27:00,599 --> 00:27:03,979
and I'm, I'm processing thousands of pieces of information, summarizing,

593
00:27:03,989 --> 00:27:05,989
contextualizing, judging them.

594
00:27:06,000 --> 00:27:08,260
Could I do that with source code to look for vulnerabilities? Yeah.

595
00:27:08,439 --> 00:27:12,030
-- Right.
-- II, I could, I, I wouldn't because it's not my job,

596
00:27:12,160 --> 00:27:14,569
-- it's not going to be cheap today.
-- Um

597
00:27:14,900 --> 00:27:18,790
-- I have bad news for you. It's like you don't
-- know you're making

598
00:27:18,800 --> 00:27:19,380
-- crap
-- up.

599
00:27:19,390 --> 00:27:22,640
It's 15, no to send in a million tokens

600
00:27:22,829 --> 00:27:23,819
to say Claude three

601
00:27:24,130 --> 00:27:26,079
opus is like $15

602
00:27:26,400 --> 00:27:29,640
and a million tokens back is like $75.

603
00:27:29,650 --> 00:27:30,680
And as you said,

604
00:27:30,689 --> 00:27:34,719
there's a lot more going in that there is coming out like I'm sending in a code base,

605
00:27:34,729 --> 00:27:35,060
right?

606
00:27:35,069 --> 00:27:37,219
It would definitely be lopsided.

607
00:27:37,229 --> 00:27:40,390
But we're talking about like the entirety of open source cart,

608
00:27:41,069 --> 00:27:45,900
but we're talking about literally dollars to tens of dollars per project.

609
00:27:45,910 --> 00:27:49,880
-- And I don't need to do all the projects. Just the top 100
-- in the paper.

610
00:27:50,050 --> 00:27:56,479
-- They say it was like $3 in change per, per exploit. I guess
-- that sounds about right.

611
00:27:56,599 --> 00:28:01,859
And II, I agree. But now $3 times 9 million

612
00:28:02,630 --> 00:28:02,839
open

613
00:28:03,010 --> 00:28:03,180
source,

614
00:28:03,310 --> 00:28:06,900
-- but you don't need to do 9 million.
-- No, I know, I know you can pick the popular one.

615
00:28:06,989 --> 00:28:08,609
But the point is, here's the thing though.

616
00:28:08,619 --> 00:28:10,430
You say this all the time, like making,

617
00:28:10,439 --> 00:28:14,329
making something cost a penny is too much for most people and it is.

618
00:28:14,859 --> 00:28:15,609
And so

619
00:28:15,790 --> 00:28:19,569
I'm not saying this is going to break the bank of a large corporation.

620
00:28:19,579 --> 00:28:21,089
But I do think like doing the,

621
00:28:21,099 --> 00:28:24,089
the level of research we're talking about across like finding

622
00:28:24,099 --> 00:28:27,800
millions of vulnerabilities is not free and it would not,

623
00:28:27,810 --> 00:28:30,229
it would be more expensive than many people could afford.

624
00:28:30,239 --> 00:28:32,530
-- Which is unfortunate.
-- I have good news for you though.

625
00:28:32,540 --> 00:28:34,849
I have good news for you though. There are already a

626
00:28:34,969 --> 00:28:40,689
several really, either well trained or fine tuned models,

627
00:28:40,699 --> 00:28:43,630
especially in the 8 billion to 3 billion token set.

628
00:28:43,640 --> 00:28:46,180
-- So that's the stuff that will run on a laptop.
-- Yeah.

629
00:28:46,300 --> 00:28:48,640
-- Oh, yeah. Yeah. No, you can do it on your own hardware
-- for sure.

630
00:28:48,650 --> 00:28:51,020
This is absolutely if somebody wanted to fine

631
00:28:51,030 --> 00:28:53,319
tune or actually train a model from scratch,

632
00:28:53,329 --> 00:28:55,239
this is, this would be the perfect

633
00:28:55,359 --> 00:28:56,500
example because

634
00:28:56,750 --> 00:28:58,760
you have a quarter million CV ES

635
00:28:59,369 --> 00:28:59,630
with

636
00:28:59,739 --> 00:29:03,969
-- anywhere, maybe a quarter of them linking to source code patches.
-- A lot of them.

637
00:29:03,979 --> 00:29:08,479
-- I don't know if it's a quarter but it's a lot, it's,
-- it's at least 10,000. At least

638
00:29:08,969 --> 00:29:13,160
that's a training set right there. Or at least a fine tuning set for a coding A I

639
00:29:13,589 --> 00:29:16,989
and so the good news is, is you can, absolutely, this is the,

640
00:29:17,000 --> 00:29:21,589
this is a perfect use case for building and training or fine tuning an A I

641
00:29:21,780 --> 00:29:26,369
that can run locally on your laptop or PC or whatever. Yeah, it could. Definitely.

642
00:29:26,849 --> 00:29:30,459
And just grind 24 7. Yeah, your electricity bill will be a bit higher.

643
00:29:30,469 --> 00:29:33,219
-- If you're a college student, you get free electricity. Yeah,
-- exactly.

644
00:29:33,810 --> 00:29:34,109
Yeah.

645
00:29:34,550 --> 00:29:38,170
And so like this is the kind of thing where, and here's the scary part.

646
00:29:38,180 --> 00:29:40,900
What happens when somebody releases that model?

647
00:29:40,910 --> 00:29:43,310
And what happens when somebody releases those prompts?

648
00:29:43,359 --> 00:29:46,839
And what happens when literally all you got to do is type run

649
00:29:46,849 --> 00:29:51,560
this and take these N PM packages or these top 1000 or?

650
00:29:52,750 --> 00:29:53,089
Ok.

651
00:29:53,810 --> 00:29:57,140
So I'm gonna, we're gonna end this show on what will happen

652
00:29:57,280 --> 00:30:00,170
today and today it will crush the system because we are

653
00:30:00,180 --> 00:30:04,030
completely unprepared for the results of a project like this.

654
00:30:04,050 --> 00:30:08,160
We see what, what's like NVD is pining for the fjords,

655
00:30:08,680 --> 00:30:10,030
not, not collapsed,

656
00:30:10,170 --> 00:30:10,709
but

657
00:30:10,979 --> 00:30:16,739
like it, it got crushed by a, a very human amount of vulnerabilities.

658
00:30:16,750 --> 00:30:20,510
And we're talking about an inhuman amount of vulnerabilities. Now,

659
00:30:20,800 --> 00:30:21,630
the, the way

660
00:30:21,734 --> 00:30:27,305
out is to rethink how we handle vulnerabilities and risk and all of this stuff.

661
00:30:27,314 --> 00:30:30,604
And there, there's a lot of people who've been talking about this for a long time.

662
00:30:30,614 --> 00:30:33,145
It's like the whole cult of zero CV. E.

663
00:30:33,334 --> 00:30:36,385
Yeah. Good luck with that. When there's a million CV ES a year.

664
00:30:36,484 --> 00:30:38,035
I remember when I was at Red Hat,

665
00:30:38,045 --> 00:30:40,755
I downloaded all of pie pie and I looked through it for

666
00:30:40,765 --> 00:30:43,364
temporary file vulnerabilities and about a third of them had it.

667
00:30:43,454 --> 00:30:46,515
-- Oh, my
-- goodness. You and your temporary file vulnerabilities.

668
00:30:46,604 --> 00:30:46,994
Well, no, no,

669
00:30:47,005 --> 00:30:50,314
but because they're easy to find and they're technically a vulnerability.

670
00:30:50,385 --> 00:30:51,234
And so I looked at this

671
00:30:51,339 --> 00:30:53,510
and I went, OK, I have like 20,000 vulnerabilities

672
00:30:53,859 --> 00:30:57,079
and I just deleted the directory because what else am I going to do with it?

673
00:30:57,239 --> 00:30:59,119
And so that's the interesting thing is we're,

674
00:30:59,130 --> 00:31:04,479
we're now on to the shoe firmly on the attacker's foot right now with the use of A I

675
00:31:05,130 --> 00:31:08,359
mostly because the defenders are not willing to use A I.

676
00:31:08,520 --> 00:31:11,709
There's like, oh A I is bad. It generates bad results, blah, blah, blah, blah, blah.

677
00:31:11,719 --> 00:31:16,119
I don't know if that's inaccurate statement necessarily.

678
00:31:16,130 --> 00:31:17,920
I think there's plenty of defenders using it.

679
00:31:17,930 --> 00:31:20,800
I think the problem is we are currently conf

680
00:31:21,655 --> 00:31:25,525
by an enormous number of processes that were outdated before

681
00:31:25,535 --> 00:31:29,474
LL MS existed and now they're hilariously outdated in the,

682
00:31:29,484 --> 00:31:32,324
in the age of LL MS for this kind of stuff.

683
00:31:32,334 --> 00:31:35,844
There's too much obsession with vulnerabilities in box ticking.

684
00:31:35,854 --> 00:31:38,645
-- Gen two has banned A I created contributions.
-- I

685
00:31:38,785 --> 00:31:40,555
don't care about what gen two thinks.

686
00:31:40,574 --> 00:31:42,885
-- But
-- this is the trend I'm seeing in open source is

687
00:31:42,895 --> 00:31:46,854
everybody's essentially saying we don't want to accept A I contributions.

688
00:31:46,864 --> 00:31:49,464
-- We don't want to have anything to do with it.
-- They're allowed to do that.

689
00:31:49,474 --> 00:31:50,444
It's open source.

690
00:31:50,699 --> 00:31:53,079
It's their decision if they want to do that, who cares?

691
00:31:53,089 --> 00:31:54,930
-- It's not our problem
-- when I was saying that the,

692
00:31:54,939 --> 00:31:57,619
the shoe is firmly on the attacker's foot right now.

693
00:31:57,630 --> 00:32:00,109
As far as A I use of A I goes,

694
00:32:00,119 --> 00:32:02,900
what's fascinating to me is to see open source saying

695
00:32:02,910 --> 00:32:04,560
we're not going to allow the use of A I.

696
00:32:04,810 --> 00:32:06,660
And so they're not going to be able to benefit from it and they're

697
00:32:06,670 --> 00:32:09,619
not going to learn how to use it in ways that are actually helpful.

698
00:32:09,630 --> 00:32:12,819
All right. Look, I'm going to get on a soapbox and I'm just going to say it. A

699
00:32:13,089 --> 00:32:16,040
lot of the people talking about A I now are just literally

700
00:32:16,140 --> 00:32:16,599
full of

701
00:32:16,699 --> 00:32:20,599
shit. They're shit pedaling shit weasels and that's why people don't want to use it.

702
00:32:20,790 --> 00:32:23,839
It has value and it can do amazing things but

703
00:32:23,849 --> 00:32:26,180
it can't do everything and it can't do anything.

704
00:32:26,189 --> 00:32:27,300
And that's the problem.

705
00:32:27,420 --> 00:32:30,959
This is like any new technology, you have the hype cycle,

706
00:32:30,969 --> 00:32:35,020
you have the shit peddlers and a bunch of normal people are like, fuck it.

707
00:32:35,030 --> 00:32:36,500
I don't even want to deal with it.

708
00:32:36,660 --> 00:32:39,880
-- That's gonna be a lot of bleeps.
-- I mean, pets.com, right.

709
00:32:39,890 --> 00:32:41,479
We went through this with the.com thing

710
00:32:41,750 --> 00:32:44,569
and in many ways, the.com crash

711
00:32:44,719 --> 00:32:46,790
was far more forgiving than it should have been.

712
00:32:46,910 --> 00:32:49,400
And yet here we are 20 years later where I think we

713
00:32:49,410 --> 00:32:52,770
can all agree that life kind of went to online web commerce.

714
00:32:52,780 --> 00:32:54,250
It's the Cory Doctorow.

715
00:32:54,260 --> 00:32:55,410
He wrote the, what,

716
00:32:55,420 --> 00:32:58,170
you know what's left behind after the bubble burst or something like that.

717
00:32:58,180 --> 00:32:59,949
I'll, I'll look it up and I'll put it in the show notes.

718
00:32:59,959 --> 00:33:05,915
But like the.com to bust left a lot of things behind the NFT bust left nothing behind

719
00:33:06,074 --> 00:33:08,734
the A I bust, which I think is starting now

720
00:33:08,964 --> 00:33:13,035
is probably going to leave some things behind because the technology is useful,

721
00:33:13,045 --> 00:33:15,594
but it has been over hyped and I understand why

722
00:33:15,604 --> 00:33:17,915
a lot of people have reacted negatively to it.

723
00:33:18,125 --> 00:33:20,795
Every technology gets overhyped. That's the human condition.

724
00:33:21,150 --> 00:33:21,790
Yeah. Yeah.

725
00:33:21,800 --> 00:33:24,589
-- And people react negatively to it like
-- I'm sure

726
00:33:24,599 --> 00:33:27,329
fire was overhyped and then somebody burned themselves on.

727
00:33:27,339 --> 00:33:27,829
It was like,

728
00:33:28,069 --> 00:33:28,079
I

729
00:33:28,239 --> 00:33:29,109
don't like this

730
00:33:29,449 --> 00:33:30,119
anyway.

731
00:33:30,130 --> 00:33:35,449
Anyway, the point is this is going to change everything in the vulnerability space.

732
00:33:35,780 --> 00:33:37,810
I don't know what the answer is,

733
00:33:37,819 --> 00:33:39,890
but I assure you what one of the things the

734
00:33:39,900 --> 00:33:44,130
answer isn't is the way we do vulnerability handling today.

735
00:33:44,300 --> 00:33:47,619
Well, I would take it a step further. A I is just data processing

736
00:33:48,079 --> 00:33:50,900
and what makes it very unique is its data processing

737
00:33:51,010 --> 00:33:52,030
like a human

738
00:33:52,239 --> 00:33:57,000
and humans are historically very expensive to hire to train and to get to do

739
00:33:57,010 --> 00:34:01,020
work because they want to sleep and eat and have family time va doesn't.

740
00:34:01,030 --> 00:34:01,750
And so

741
00:34:01,869 --> 00:34:07,189
what's like any new technology? We're gonna find ways to actually use A I.

742
00:34:07,319 --> 00:34:12,110
Well, and Attackers have a huge incentive to be more efficient and more effective.

743
00:34:12,120 --> 00:34:15,668
Well, in his cat and mouse man, like defenders are, are chasing

744
00:34:15,860 --> 00:34:17,149
the defenders.

745
00:34:17,159 --> 00:34:20,239
I there's already people thinking about this, you know, like at the CS A,

746
00:34:20,250 --> 00:34:22,969
we're writing papers on this and I know Microsoft is working on defender stuff,

747
00:34:22,978 --> 00:34:24,438
security copilot and all that.

748
00:34:25,360 --> 00:34:27,228
And what's fascinating to me is to it.

749
00:34:27,239 --> 00:34:31,080
I'm very much reminded of like, yes, there is a I hype. Absolutely.

750
00:34:31,208 --> 00:34:31,649
But

751
00:34:31,780 --> 00:34:34,438
there are, I'm seeing people saying no A I,

752
00:34:34,570 --> 00:34:36,770
what's gonna happen is those companies, well,

753
00:34:36,780 --> 00:34:38,780
you don't remember who the companies that didn't do the

754
00:34:38,790 --> 00:34:41,610
web are because they don't exist anymore by and large.

755
00:34:41,620 --> 00:34:47,649
Sure. But I don't even care about that. I just, I care about the fact that this work

756
00:34:48,199 --> 00:34:50,820
is going to change the vulnerability landscape.

757
00:34:51,270 --> 00:34:52,860
We don't know how yet.

758
00:34:53,310 --> 00:34:57,889
We don't know how we're going to react to it, which is a little terrifying sometimes,

759
00:34:58,129 --> 00:35:01,250
but something is going to change because it has to,

760
00:35:01,399 --> 00:35:05,949
there's only one real, one of the reactions will have to be defenders have to use A I,

761
00:35:05,959 --> 00:35:09,050
we can't, we can't fix this with humans.

762
00:35:09,060 --> 00:35:13,570
You don't know that it, it might be, that's your bias towards A I,

763
00:35:13,580 --> 00:35:17,090
the reality is the vulnerability handling we have today

764
00:35:17,219 --> 00:35:19,729
can't even keep up with the load we have today

765
00:35:20,020 --> 00:35:25,479
and LL MS are going to make it crushingly magnitudes larger

766
00:35:25,590 --> 00:35:29,879
how we deal with that. I do not know today, we do not know the answer, the answer.

767
00:35:29,889 --> 00:35:33,270
You can't just like throw a I into the air and claim it the answer.

768
00:35:33,280 --> 00:35:37,330
We don't know, we have to invent the future. That is the reality.

769
00:35:37,340 --> 00:35:39,770
Well, I mean, one possibility is people step back and go, hey,

770
00:35:39,780 --> 00:35:42,209
maybe these vulnerabilities aren't as bad as, you know, we,

771
00:35:42,219 --> 00:35:44,800
we thought there's probably some of that for sure.

772
00:35:44,810 --> 00:35:48,520
-- And we can ignore a lot of them.
-- But, well, and this also goes back to Tama

773
00:35:48,790 --> 00:35:51,219
Pierre's whole whole talking points of like,

774
00:35:51,229 --> 00:35:53,879
we need tools that solve a lot of

775
00:35:53,889 --> 00:35:57,600
these problems because these are like systemic human

776
00:35:57,610 --> 00:36:01,379
programming problems and expecting us to like individually

777
00:36:01,389 --> 00:36:04,060
fix all these bugs is probably not realistic.

778
00:36:04,149 --> 00:36:04,929
I just,

779
00:36:05,199 --> 00:36:07,429
I keep coming back to bulldozers and Hydro

780
00:36:07,919 --> 00:36:12,520
VC. We don't have like, we so rarely have people with a shovel digging a big hole now.

781
00:36:12,600 --> 00:36:14,300
-- Yeah. Right.
-- Because it would be stupid

782
00:36:14,399 --> 00:36:16,100
and I'll leave you on that. Yes.

783
00:36:16,399 --> 00:36:21,020
Yeah, I know. But, but you think the, the bulldozer is A I,

784
00:36:21,139 --> 00:36:23,610
and I'm saying, I don't know what the bulldozer is.

785
00:36:23,639 --> 00:36:26,649
That's the only difference I haven't made up my mind yet.

786
00:36:26,669 --> 00:36:30,570
-- I'm gonna say the answer is not more people it
-- isn't more people.

787
00:36:30,580 --> 00:36:32,489
I, we can agree on that point

788
00:36:32,639 --> 00:36:35,899
but what the bulldozer is made of, I do not know

789
00:36:36,389 --> 00:36:37,699
and I am unwilling

790
00:36:37,804 --> 00:36:39,304
to claim it's A I

791
00:36:39,425 --> 00:36:41,344
at this point, maybe it is

792
00:36:41,514 --> 00:36:45,344
as long as it's not people. And we don't think just whipping harder is the answer.

793
00:36:45,524 --> 00:36:49,514
-- That'll make me happy.
-- Well, here's the thing A I fits this unique category of it.

794
00:36:49,524 --> 00:36:50,774
Lets you implement

795
00:36:50,905 --> 00:36:54,824
the solutions you want to implement with humans with A I and it basically

796
00:36:54,834 --> 00:36:58,155
allows you to whip harder but with an A I instead of people complaining,

797
00:36:58,165 --> 00:36:58,945
oh,

798
00:36:59,379 --> 00:36:59,399
I

799
00:36:59,610 --> 00:37:03,090
mean, I, you know, I use A I to do horrible things that if I asked a human to do them,

800
00:37:03,100 --> 00:37:04,320
they would quit on the spot.

801
00:37:04,330 --> 00:37:06,629
Maybe that's different. That's a different problem.

802
00:37:06,639 --> 00:37:10,479
All right, I'm calling this one because I don't want to go down this path.

803
00:37:10,489 --> 00:37:12,129
Thank you, Kurt. Thank you everyone for listening. Go to put

804
00:37:12,260 --> 00:37:13,919
our security podcast.com at the show, Not

805
00:37:14,110 --> 00:37:17,959
Pound do says podcast. Hashtag and Mastodon Kurt have a marvelous rest of your day.

806
00:37:18,199 --> 00:37:21,239
You too. Thanks everybody. Thanks everyone. Bye bye.